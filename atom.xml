<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Poetry&#39;s Blog</title>
  <subtitle>Choose a gesture to allow yourself to live irreplaceable.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.poetries.top/"/>
  <updated>2016-12-14T07:59:53.930Z</updated>
  <id>http://www.poetries.top/</id>
  
  <author>
    <name>Poetry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript及jQuery中的各种宽高属性图解</title>
    <link href="http://www.poetries.top/2016/12/13/js-props/"/>
    <id>http://www.poetries.top/2016/12/13/js-props/</id>
    <published>2016-12-13T15:35:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文链接 <a href="http://blog.poetries.top/2016/12/13/js-props" target="_blank" rel="external">http://blog.poetries.top/2016/12/13/js-props</a><br>声明：本文根据慕课网学习视频整理</p>
</blockquote>
<p>强烈建议打开控制台自己动手练习一遍，这样印象才会深刻</p>
<h2 id="第一部分-JavaScript中的宽高属性"><a href="#第一部分-JavaScript中的宽高属性" class="headerlink" title="第一部分 JavaScript中的宽高属性"></a>第一部分 JavaScript中的宽高属性</h2><hr>
<h3 id="一、与window相关的宽高属性"><a href="#一、与window相关的宽高属性" class="headerlink" title="一、与window相关的宽高属性"></a>一、与window相关的宽高属性</h3><hr>
<h4 id="1-1-window-location和document-location"><a href="#1-1-window-location和document-location" class="headerlink" title="1.1 window.location和document.location"></a>1.1 window.location和document.location</h4><hr>
<a id="more"></a>
<ul>
<li><code>window</code>对象的<code>location</code>属性引用的是<code>location</code>对象，表示该窗口中当前显示文档的<code>URL</code></li>
<li><code>document</code>的对象的<code>location</code>属性也是引用<code>location</code>对象</li>
<li>所以 <code>window.location === document.location</code>    <code>//true</code></li>
</ul>
<h4 id="1-2-window-screen"><a href="#1-2-window-screen" class="headerlink" title="1.2 window.screen"></a>1.2 window.screen</h4><hr>
<ul>
<li><code>window.screen</code>包含有关用户屏幕的信息。它包括：<ul>
<li><code>window.screen.width</code></li>
<li><code>window.screen.height</code></li>
<li><code>window.screen.availHeight</code></li>
<li><code>window.screen.availWidth</code></li>
<li><code>window.screenTop</code></li>
<li><code>window.screenLeft</code></li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-d7979b36ca991d9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="window.screen"></p>
<p><strong>1.3 与window相关的宽高</strong></p>
<ul>
<li><code>window.innerWidth</code>   内部的宽度</li>
<li><code>window.innerHeight</code>   内部的高度</li>
<li><code>window.outWidth</code>   外部的宽度</li>
<li><code>window.outHeight</code>   外部的高度</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-28fed0baaf2ff31a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="与window相关的宽高"></p>
<h3 id="二、与document相关的宽高属性"><a href="#二、与document相关的宽高属性" class="headerlink" title="二、与document相关的宽高属性"></a>二、与document相关的宽高属性</h3><hr>
<h4 id="2-1与client相关的宽高"><a href="#2-1与client相关的宽高" class="headerlink" title="2.1与client相关的宽高"></a>2.1与client相关的宽高</h4><hr>
<ul>
<li><code>document.body.clientWidth</code> 元素宽度（可视内容区+内边距）</li>
<li><code>document.body.clientHeight</code>元素高度（可视内容区+内边距）</li>
</ul>
<p>该属性指的是元素的可视部分宽度和高度，即<code>padding+content</code><br>如果没有滚动条，即为元素设定的宽度和高度<br>如果出现滚动条，滚动条会遮盖元素的宽高，那么该属性就是其本来宽高减去滚动条的宽高</p>
<p>example1：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">body&#123; </div><div class="line">    border: 20px solid #000; </div><div class="line">    margin: 10px; </div><div class="line">    padding: 40px; </div><div class="line">    background: #eee; </div><div class="line">    height: 350px; </div><div class="line">    width: 500px; </div><div class="line">    overflow: scroll; </div><div class="line">&#125; </div><div class="line">console.log(document.body.clientWidth);  // 350+padding(80) = 430</div><div class="line">console.log(document.body.clientHeight);  // 500 + padding(80) = 580</div></pre></td></tr></table></figure>
<p>example2: 在div中添加文字， 指导出现滚动条</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#exp2 &#123;</div><div class="line">	width:200px;</div><div class="line">	height:200px;</div><div class="line">	background:red;</div><div class="line">	border:1px solid #000;</div><div class="line">	overflow:auto;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var test = document.getElementById("exp2");</div><div class="line"></div><div class="line">console,log(test.clientHeight); // 200</div><div class="line">console.log(test.clientWidth); //</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-5f4a093d6f95b47e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="window7下test.clientWidth"></p>
<ul>
<li><p><strong>小结clientWidth和clientHeight</strong></p>
<ul>
<li>无<code>padding</code>无滚动 ： <code>clientWidth</code> = 盒子的<code>width</code></li>
<li>有<code>padding</code>无滚动 ： <code>clientWidth</code> = 盒子的<code>width</code> + 盒子的<code>padding * 2</code></li>
<li>有<code>padding</code>有滚动 ： <code>clientWidth</code> = 盒子和<code>width</code> + 盒子的<code>padding * 2</code>- 滚动轴宽度</li>
</ul>
</li>
</ul>
<ul>
<li><code>document.body.clientLeft</code></li>
<li><code>document.body.clientTop</code></li>
</ul>
<p>这两个返回的是元素周围边框的厚度，如果不指定一个边框或者不定位该元素，它的值就是0</p>
<p>例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">body&#123; </div><div class="line">    border: 20px solid #000; </div><div class="line">    margin: 10px; </div><div class="line">    padding: 40px; </div><div class="line">    background: #eee; </div><div class="line">    height: 350px; </div><div class="line">    width: 500px; </div><div class="line">    overflow: scroll; </div><div class="line">&#125; </div><div class="line">console.log(document.body.clientLeft);  // 20</div><div class="line">console.log(document.body.clientTop);  // 20</div></pre></td></tr></table></figure>
<p><strong>小结clientLeft和clientTop</strong></p>
<ul>
<li>这一对属性是用来读取元素的<code>border</code>的宽度和高度的<ul>
<li><code>clientTop = border-top</code></li>
<li><code>clientLeft = border-left</code></li>
</ul>
</li>
</ul>
<h4 id="2-2-与offset相关的宽高"><a href="#2-2-与offset相关的宽高" class="headerlink" title="2.2 与offset相关的宽高"></a>2.2 与offset相关的宽高</h4><hr>
<ul>
<li><strong>document.body.offsetWidth（元素的border+padding+content的宽度）</strong></li>
<li><strong>document.body.offsetHeight（元素的border+padding+content的高度）</strong></li>
</ul>
<p>该属性和其内部的内容是否超出元素大小无关，只和本来设定的border以及width和height有关</p>
<p>例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">body&#123; </div><div class="line">    border: 20px solid #000; </div><div class="line">    margin: 10px; </div><div class="line">    padding: 40px; </div><div class="line">    background: #eee; </div><div class="line">    height: 350px; </div><div class="line">    width: 500px; </div><div class="line">    overflow: scroll; </div><div class="line">&#125; </div><div class="line">console.log(document.body.offsetWidth);  // 470 = padding*2 + 350 + border*2</div><div class="line">console.log(document.body.offsetHeight);  // 620 = padding*2 + 500 + border*2</div></pre></td></tr></table></figure>
<p><strong>小结offsetWidth和offsetHeight</strong></p>
<ul>
<li>无<code>padding</code>无滚动无<code>border</code><ul>
<li>offsetWidth = clientWidth = 盒子的宽度</li>
</ul>
</li>
<li>有<code>padding</code>无滚动有<code>border</code><ul>
<li>offsetWidth = 盒子的宽度 + 盒子padding<em>2 + 盒子边框</em>2 = clientWidth + 边框宽度*2</li>
</ul>
</li>
<li>有<code>padding</code>有滚动，且滚动是显示的，有<code>border</code><ul>
<li>offsetWidth = 盒子宽度 + 盒子padding<em>2 + 盒子边框</em>2 = clientWidth + 滚动轴宽度 + 边框宽度*2</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><strong>document.offsetLeft </strong></li>
<li><strong>document.offsetTop </strong></li>
</ul>
<p>了解这两个属性我们必须先了解它，什么是<code>offsetParent</code></p>
<ul>
<li>如果当前元素的父级元素没有进行<code>CSS</code>定位（<code>position</code>为<code>absolute</code>或<code>relative</code>）,<code>offsetParent</code>为<code>body.</code></li>
<li>假如当前元素的父级元素中有<code>CSS</code>定位，<code>offsetParent</code>取最近的那个父级元素</li>
</ul>
<p><strong>offsetLeft的兼容性问题：</strong></p>
<ul>
<li><p>在<code>IE6/7</code>中</p>
<ul>
<li><code>offsetLeft</code> = offsetParent的padding-left + 当前元素的margin-left</li>
</ul>
</li>
<li><p>在<code>IE8/9/10</code>以及<code>chrome</code>中</p>
<ul>
<li><code>offsetLeft</code> = offsetParent的margin-left + offsetParent的border宽度 + offsetParent的padding-left + 当前元素的margin-left</li>
</ul>
</li>
<li><p>在<code>FireFox</code>中</p>
<ul>
<li><code>offsetLeft</code> = offsetParent的margin-left + 当前元素的margin-left + offsetParent的padding-left</li>
</ul>
</li>
</ul>
<p>例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">body&#123; </div><div class="line">    border: 20px solid #000; </div><div class="line">    margin: 10px; </div><div class="line">    padding: 40px; </div><div class="line">    background: #eee; </div><div class="line">    height: 350px; </div><div class="line">    width: 500px; </div><div class="line">    overflow: scroll; </div><div class="line">&#125; </div><div class="line"></div><div class="line">#exp &#123;</div><div class="line">   width:400px;</div><div class="line">   height:200px;</div><div class="line">   padding:20px;</div><div class="line">   margin:10px;</div><div class="line">   background:red;</div><div class="line">   border:20px solid #000;</div><div class="line">   overflow:auto;</div><div class="line">&#125;</div><div class="line">var div = document.getElementById("exp");</div></pre></td></tr></table></figure>
<ul>
<li><p>在IE8/9/10以及chrome中：</p>
<ul>
<li>div.offsetLeft  = 本身的margin10 + 父级元素的padding40 + margin10 + border20 = 80</li>
<li>div.offsetTop = 本身的margin10 + 父级元素的padding40 + margin10 + border20 = 80</li>
</ul>
</li>
<li><p>在FireFox：（相比chrome中少了border）</p>
<ul>
<li>div.offsetLeft  = 本身的margin10 + 父级元素的padding40 + margin10 = 60</li>
<li>div.offsetTop = 本身的margin10 + 父级元素的padding40 + margin10 = 60</li>
</ul>
</li>
<li><p>在IE6/7中：（相比在FireFox，不但少了border还少了父级元素的margin）</p>
<ul>
<li><code>div.offsetLeft</code>  = 本身的<code>margin10</code> + 父级元素的<code>padding40</code> = 50</li>
<li><code>div.offsetTop</code> = 本身的<code>margin10</code> + 父级元素的<code>padding40</code> = 50</li>
</ul>
</li>
</ul>
<h4 id="2-3与scroll相关的宽高-实际项目中用的最多"><a href="#2-3与scroll相关的宽高-实际项目中用的最多" class="headerlink" title="2.3与scroll相关的宽高 (实际项目中用的最多)"></a>2.3与scroll相关的宽高 (实际项目中用的最多)</h4><hr>
<ul>
<li><strong>document.body.scrollWidth</strong></li>
<li><strong>document.body.scrollHeight</strong></li>
</ul>
<p>document.body的scrollWidth和scrollHeight与div的scrollWidth和scrollHeight是有区别的</p>
<p>例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">body&#123; </div><div class="line">    border: 20px solid #000; </div><div class="line">    margin: 10px; </div><div class="line">    padding: 40px; </div><div class="line">    background: #eee; </div><div class="line">    height: 350px; </div><div class="line">    width: 500px; </div><div class="line">    overflow: scroll; </div><div class="line">&#125;</div><div class="line"></div><div class="line">document.body.scrollHeight; // </div><div class="line">document.body.scrollWidth; //</div></pre></td></tr></table></figure>
<ul>
<li><p>当给定宽高小于浏览器窗口的宽高</p>
<ul>
<li>scrollWidth = 通常是浏览器窗口的宽度</li>
<li>scrollHeight = 通常是浏览器窗口的高度</li>
</ul>
</li>
<li><p>当给定宽高大于浏览器窗口的宽高，且内容小于给定宽高的时候</p>
<ul>
<li>scrollWidth = 给定宽度 + 其所有的padding + margin + border</li>
<li>scrollHeight = 给定高度 + 其所有的padding + margin + border</li>
</ul>
</li>
<li><p>当给定宽高大于浏览器窗口宽高，且内容大于给定宽高</p>
<ul>
<li>scrollWidth = 内容宽度 + 其所有的padding + margin + border</li>
<li>scrollHeight = 内容高度 + 其所有的padding + margin + border</li>
</ul>
</li>
</ul>
<p><strong>在某div中的scrollWidth和scrollHeight</strong></p>
<ul>
<li>无滚动轴时：<ul>
<li>scrollWidth = clientWidth = 盒子宽度 + 盒子padding*2 </li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-1370209704289653.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="无滚动轴时"></p>
<ul>
<li>有滚动轴时：<ul>
<li>scrollWidth = 实际内容的宽度 + padding*2</li>
<li>scrollHeight = 实际内容的高度 + padding*2</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-f2e4e49734f8ea46.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="有滚动轴时"></p>
<ul>
<li><strong>document.body.scrollLeft</strong></li>
<li><strong>document.body.scrollTop</strong></li>
</ul>
<p>与前面不同的是，这对属性是可读写的，指的是当元素其中的超出其宽高的时候，元素被卷起来的高度和宽度</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#exp &#123;</div><div class="line">   width:400px;</div><div class="line">   height:200px;</div><div class="line">   padding:20px;</div><div class="line">   margin:10px;</div><div class="line">   background:red;</div><div class="line">   border:20px solid #000;</div><div class="line">   overflow-y:scroll;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var mydiv = document.getElementById("exp");</div><div class="line"></div><div class="line">mydiv.scrollTop ;  //默认情况下是0 </div><div class="line">mydiv.scrollLeft ; //默认情况下是0 </div><div class="line"></div><div class="line">//可以改写它</div><div class="line"></div><div class="line">mydiv.scrollTop = 20;</div><div class="line">console.log(mydiv.scrollTop)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-8a31ecd4fd0a59a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="scrollTop和scrollLeft  "></p>
<p><strong>obj.style.width和obj.style.height</strong></p>
<p>对于一个<code>DOM</code>元素，它的<code>style</code>属性返回的是一个对象，这个对象的任意一个属性是可读写的，<code>style.width</code>等于<code>css</code>属性中的宽度。<code>style.height</code>等于<code>css</code>属性中的高度</p>
<h4 id="2-4-documentElement和body的关系"><a href="#2-4-documentElement和body的关系" class="headerlink" title="2.4 documentElement和body的关系"></a>2.4 documentElement和body的关系</h4><hr>
<p>是父子级的关系</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">body&#123; </div><div class="line">    border: 20px solid #000; </div><div class="line">    margin: 10px; </div><div class="line">    padding: 40px; </div><div class="line">    background: #eee; </div><div class="line">    height: 350px; </div><div class="line">    width: 500px; </div><div class="line">    overflow: scroll; </div><div class="line">&#125;</div><div class="line"></div><div class="line">#exp &#123;</div><div class="line">   width:400px;</div><div class="line">   height:200px;</div><div class="line">   padding:20px;</div><div class="line">   margin:10px;</div><div class="line">   background:red;</div><div class="line">   border:20px solid #000;</div><div class="line">   overflow-y:scroll;</div><div class="line">&#125;</div><div class="line"></div><div class="line">console.log(document); //document</div><div class="line">console.log(document.documentElement); //html</div><div class="line">console.log(document.body); //body</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-a0840d36969a6ca9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<ul>
<li>兼容问题推荐使用 获取浏览器窗口可视区域大小</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.body.clientWidth || <span class="built_in">document</span>.documentElement.clientWidth;</div><div class="line"><span class="built_in">document</span>.body.clientHeight || <span class="built_in">document</span>.documentElement.clientHeight;</div></pre></td></tr></table></figure>
<h3 id="三、Event对象的5种坐标"><a href="#三、Event对象的5种坐标" class="headerlink" title="三、Event对象的5种坐标"></a>三、Event对象的5种坐标</h3><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-3dfa83edaa181ab2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Event对象的5种坐标"></p>
<p>例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span> </span></div><div class="line"><span class="attr">style</span>=<span class="string">"width: 200px;height: 200px;background: red;margin: 100px auto;"</span>&gt;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> example = <span class="built_in">document</span>.getElementById(<span class="string">"example"</span>);</div><div class="line">example.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"clientX "</span>+e.clientX + <span class="string">" : "</span> + <span class="string">" clientY "</span>+e.clientY);</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"screenX "</span>+e.screenX + <span class="string">" : "</span> + <span class="string">" screenY "</span>+e.screenY);</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"offsetX "</span>+e.offsetX + <span class="string">" : "</span> + <span class="string">" offsetY "</span>+e.offsetY);</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"pageX "</span>+e.pageX + <span class="string">" : "</span> + <span class="string">" pageY "</span>+e.pageY);</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"x "</span>+e.x + <span class="string">" : "</span> + <span class="string">" y "</span>+e.y);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-8596ee9ee7d11e15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Event对象的5种坐标"></p>
<h3 id="四、-js各种宽高的应用"><a href="#四、-js各种宽高的应用" class="headerlink" title="四、 js各种宽高的应用"></a>四、 js各种宽高的应用</h3><hr>
<ul>
<li><strong>example1：可视区域加载</strong></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-6aba0d1bb4eb7b3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="用来解决offset的兼容性难问题 "></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example1"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example1</span> &#123;</div><div class="line">			<span class="attribute">width</span>: <span class="number">500px</span>;</div><div class="line">			<span class="attribute">height</span>: <span class="number">350px</span>;</div><div class="line">			<span class="attribute">background</span>: red;</div><div class="line">			<span class="attribute">margin</span>: <span class="number">1000px</span> auto <span class="number">0</span> auto;</div><div class="line">		&#125;</div><div class="line">		@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> fadeInLeft&#123;</div><div class="line">			0%&#123;</div><div class="line">				<span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">				<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(-100%,0,0);</div><div class="line">			&#125;</div><div class="line">			100%&#123;</div><div class="line">				<span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">				<span class="attribute">transform</span>: none;</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">			<span class="selector-class">.fadeInLeft</span> &#123;</div><div class="line">				<span class="attribute">animation-name</span>: fadeInLeft;</div><div class="line">				<span class="attribute">animation-duration</span>: <span class="number">2s</span>;</div><div class="line">			&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">showDiv</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="keyword">var</span> example = <span class="built_in">document</span>.getElementById(<span class="string">"example"</span>);</div><div class="line">			<span class="keyword">var</span> clients = <span class="built_in">window</span>.innerHeight || <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight;<span class="comment">//可视区域的高度</span></div><div class="line">			<span class="keyword">var</span> divTop = example.getBoundingClientRect().top;</div><div class="line">			<span class="keyword">if</span>(divTop &lt;= clients)&#123;</div><div class="line">				example.classList.add(<span class="string">"fadeInLeft"</span>);</div><div class="line">                              <span class="comment">//  这里可以通过setAttribute设置图片的src按需加载</span></div><div class="line">			&#125;</div><div class="line">			<span class="built_in">document</span>.title = clients+<span class="string">"---"</span>+divTop;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line"><span class="built_in">window</span>.onscroll = showDiv;</div></pre></td></tr></table></figure>
<p> <a href="http://codepen.io/poetries/pen/RoeJgG" target="_blank" rel="external">在线演示</a></p>
<ul>
<li><strong>example2：网页滚动到顶部或者底部</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example2"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example2</span> &#123;</div><div class="line">			<span class="attribute">width</span>: <span class="number">500px</span>;</div><div class="line">			<span class="attribute">height</span>: <span class="number">350px</span>;</div><div class="line">			<span class="attribute">background</span>: red;</div><div class="line">			<span class="attribute">margin</span>: <span class="number">1000px</span> auto <span class="number">0</span> auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">scrollTopOrBottom</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="keyword">var</span> example2 = <span class="built_in">document</span>.getElementById(<span class="string">"example"</span>);</div><div class="line">			<span class="keyword">var</span> clients = <span class="built_in">window</span>.innerHeight || <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight;<span class="comment">//可视区域的高度，兼容性写法</span></div><div class="line">			<span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.body.scrollTop;</div><div class="line">			<span class="keyword">var</span> wholeHeight = <span class="built_in">document</span>.body.scrollHeight;</div><div class="line">			<span class="keyword">if</span>(clients + scrollTop &gt;= wholeHeight)&#123;</div><div class="line">				alert(<span class="string">"我已经到了底部!"</span>);</div><div class="line">                              <span class="comment">// 这里可以调用Ajax分页加载到页面中，实现多页加载功能</span></div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(scrollTop == <span class="number">0</span>)&#123;</div><div class="line">				alert(<span class="string">"我已经到了顶部了!"</span>);</div><div class="line">                      </div><div class="line">			&#125;</div><div class="line">			<span class="built_in">document</span>.title = (clients + scrollTop)+<span class="string">"---"</span>+wholeHeight+<span class="string">"--"</span>+scrollTop;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line"><span class="built_in">window</span>.onscroll = scrollTopOrBottom;</div></pre></td></tr></table></figure>
<p><a href="http://codepen.io/poetries/pen/WoayJy" target="_blank" rel="external">在线演示</a></p>
<ul>
<li><strong>example3：DIV滚动到底部加载</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example3"</span> &gt;</span></div><div class="line">			DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载</div><div class="line">			DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载</div><div class="line">			DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载</div><div class="line">			DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载</div><div class="line">			DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载</div><div class="line">			DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载DIV滚动到底部加载</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example3</span> &#123;</div><div class="line">			<span class="attribute">width</span>: <span class="number">500px</span>;</div><div class="line">			<span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">			<span class="attribute">background</span>: red;</div><div class="line">			<span class="attribute">margin</span>: <span class="number">10px</span> auto;</div><div class="line">			<span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">			<span class="attribute">overflow-y</span>: scroll;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">"example3"</span>);</div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">divScroll</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			</div><div class="line">			<span class="keyword">var</span> wholeHeight = div.scrollHeight;<span class="comment">//滚动区域高度</span></div><div class="line">			<span class="keyword">var</span> divScrollTop = div.scrollTop;<span class="comment">//卷上去的那部分高度</span></div><div class="line">			<span class="keyword">var</span> divHeight = div.clientHeight; <span class="comment">//div的可视区域的高度</span></div><div class="line">			</div><div class="line">			</div><div class="line">			<span class="keyword">if</span>(divScrollTop + divHeight &gt;= wholeHeight)&#123;</div><div class="line">				alert(<span class="string">"我已经到了底部!"</span>);</div><div class="line">               <span class="comment">// 这里可以在div中通过滚动加载分页按需显示</span></div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(divScrollTop == <span class="number">0</span>)&#123;</div><div class="line">				alert(<span class="string">"我已经到了顶部了!"</span>);</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">document</span>.title = (divScrollTop + divHeight)+<span class="string">"---"</span>+wholeHeight+<span class="string">"--"</span>+divScrollTop;</div><div class="line">&#125;</div><div class="line">		</div><div class="line">div.onscroll = divScroll;</div></pre></td></tr></table></figure>
<p><a href="http://codepen.io/poetries/pen/vyVrvm" target="_blank" rel="external">在线演示</a></p>
<ul>
<li><strong>example4：计算滚动轴的宽度</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取滚动轴的宽度</span></div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getScrollBar</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">var</span> el = <span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</div><div class="line">		<span class="keyword">var</span> styles = &#123;</div><div class="line">			<span class="attr">width</span>:<span class="string">"100px"</span>,</div><div class="line">			<span class="attr">height</span>:<span class="string">"100px"</span>,</div><div class="line">			<span class="attr">overflowY</span>:<span class="string">"scroll"</span></div><div class="line">		&#125;;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> styles)&#123;</div><div class="line">			el.style[prop] = styles[prop];<span class="comment">//把 styles上的属性全部遍历拷贝到el.style上</span></div><div class="line">			</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">document</span>.body.appendChild(el);</div><div class="line">		<span class="keyword">var</span> scrollBarWidth = el.offsetWidth - el.clientWidth;</div><div class="line">		el.remove();</div><div class="line">		<span class="keyword">return</span> scrollBarWidth;</div><div class="line">	&#125;</div><div class="line">	alert(getScrollBar());<span class="comment">//17</span></div></pre></td></tr></table></figure>
<p><a href="http://codepen.io/poetries/pen/RoeBbL" target="_blank" rel="external">在线演示</a></p>
<h3 id="五、js中的宽高属性总结"><a href="#五、js中的宽高属性总结" class="headerlink" title="五、js中的宽高属性总结"></a>五、js中的宽高属性总结</h3><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-41da370c1bd5e927.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="https://camo.githubusercontent.com/3318530334bbc8f5e7ce267866c43ba72fa01f32/687474703a2f2f6f61376436647871742e626b742e636c6f7564646e2e636f6d2f626c6f672f696d616765732f3038313734323039323736363338392e6a7067" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-3f7c4f7f4e7f132a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-b2343bbf8a94bf8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="document相关的宽高"></p>
<h2 id="第二部分-jQuery中的宽高属性"><a href="#第二部分-jQuery中的宽高属性" class="headerlink" title="第二部分 jQuery中的宽高属性"></a>第二部分 jQuery中的宽高属性</h2><hr>
<h3 id="一、jquery相关宽高介绍"><a href="#一、jquery相关宽高介绍" class="headerlink" title="一、jquery相关宽高介绍"></a>一、jquery相关宽高介绍</h3><hr>
<ul>
<li><strong>1.1 width()</strong><ul>
<li>特殊元素<code>window.document</code>只可以读，普通元素可以读写，<code>width()</code>返回结果无单位，<code>css(&quot;width&quot;)</code>的结果有单位</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-ff70f303d36189a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="width--height"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-3165dd16c1b1f88a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="width"></p>
<ul>
<li><strong>1.2 innerWidth()</strong><ul>
<li>包含padding（不推荐window,document调用）</li>
</ul>
</li>
<li><strong>1.3 innerHeight()</strong></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-d3307f8d63859946.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="innerWidth--innerHeight"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-687789708690ae32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="innerWidth"></p>
<ul>
<li><strong>1.4 outerWidth()</strong><ul>
<li>包含padding和border，当传true时包含marging，不传时不包含marging（不推荐window,document调用）</li>
</ul>
</li>
<li><strong>1.5 outerHeight()</strong></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-d9db57f1d727af9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="outerWidth--outerHeight"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-e8120f1da588eeae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="outerWidth"></p>
<ul>
<li><strong>1.6 scrollLeft():</strong><ul>
<li>相对于水平滚动条左边的距离，如果滚动条非常左、或者元素不能被滚动，这个值为0；</li>
</ul>
</li>
<li><p><strong>1.7 scrollTop():</strong></p>
<ul>
<li>相对于垂直滚动条上边的距离，如果滚动条非常上、或者元素不能被滚动，这个值为0；</li>
</ul>
</li>
<li><p><strong>1.8 .offset():</strong></p>
<ul>
<li>相对于document的当前坐标值(相对于body左上角的left,top的值)；</li>
</ul>
</li>
<li><strong>1.9 .position():</strong><ul>
<li>相对于offset parent的当前坐标值(相对于offset parent元素的左上角的left、top的值)</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-82d3c27b3e6297dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="offset和position区别"></p>
<h3 id="二、jquery相关宽高举例"><a href="#二、jquery相关宽高举例" class="headerlink" title="二、jquery相关宽高举例"></a>二、jquery相关宽高举例</h3><hr>
<p><strong>2.1 exmaple1</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-be57bb2c67d1618b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="example1"></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parentDiv"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"childrenDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</div><div class="line">	<span class="attribute">margin</span>:<span class="number">10px</span>;</div><div class="line">	<span class="attribute">border</span>:<span class="number">5px</span> solid red;</div><div class="line">	<span class="attribute">padding</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.parentDiv</span> &#123;</div><div class="line">	<span class="attribute">width</span>:<span class="number">800px</span>;</div><div class="line">	<span class="attribute">height</span>:<span class="number">500px</span>;</div><div class="line">	<span class="attribute">margin</span>:<span class="number">5px</span> auto;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#FF6600</span>;</div><div class="line">	<span class="attribute">border</span>:<span class="number">5px</span> dashed green;<span class="attribute">padding</span>:<span class="number">30px</span>;<span class="attribute">position</span>:relative;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="selector-class">.childrenDiv</span> &#123;</div><div class="line">	<span class="attribute">width</span>:<span class="number">300px</span>;</div><div class="line">	<span class="attribute">height</span>:<span class="number">500px</span>;</div><div class="line">	<span class="attribute">margin</span>:<span class="number">5px</span> auto;</div><div class="line">	<span class="attribute">background</span>:yellow;</div><div class="line">	<span class="attribute">border</span>:<span class="number">5px</span> solid black;</div><div class="line">	<span class="attribute">padding</span>:<span class="number">5px</span>;</div><div class="line">	<span class="attribute">box-sizing</span>:border-box;<span class="comment">/*包括padding和border的值*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//特殊元素的高度</span></div><div class="line"><span class="comment">//window  document</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">"$(window).height()"</span>+$(<span class="built_in">window</span>).height());</div><div class="line"><span class="built_in">console</span>.log(<span class="string">"$(document).height()"</span>+$(<span class="built_in">document</span>).height());</div><div class="line"></div><div class="line"><span class="comment">//innerHeight </span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">"$(window).innerHeight()"</span>+$(<span class="built_in">window</span>).innerHeight());</div><div class="line"><span class="built_in">console</span>.log(<span class="string">"$(document).innerHeight()"</span>+$(<span class="built_in">document</span>).innerHeight());</div><div class="line"></div><div class="line"><span class="comment">//普通child元素的高度</span></div><div class="line"></div><div class="line"><span class="comment">//480 = 500 - border*2 - padding*2 (因为设置了box-sizing，box-sizing把border和padding的值计算了进去)</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").height()'</span>+ $(<span class="string">".childrenDiv"</span>).height());</div><div class="line"></div><div class="line"><span class="comment">//490 = 500 - border*2 - padding*2（innerHeight不包括padding）</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").innerHeight()'</span>+ $(<span class="string">".childrenDiv"</span>).innerHeight());</div><div class="line"></div><div class="line"><span class="comment">//500 = 500  不包括margin</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").outerHeight()'</span>+ $(<span class="string">".childrenDiv"</span>).outerHeight());</div><div class="line"></div><div class="line"><span class="comment">//510 = 500 + margin true包括margin</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").outerHeight()'</span>+ $(<span class="string">".childrenDiv"</span>).outerHeight(<span class="literal">true</span>));</div><div class="line"></div><div class="line"><span class="comment">//scrollTop</span></div><div class="line"></div><div class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="built_in">document</span>.title = <span class="string">"scrollTop  "</span>+$(<span class="keyword">this</span>).scrollTop();</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// jquery宽高演示之offset和position</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").offset().top '</span>+$(<span class="string">".childrenDiv"</span>).offset().top);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").offset().left '</span>+$(<span class="string">".childrenDiv"</span>).offset().left);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").position().top '</span>+$(<span class="string">".childrenDiv"</span>).position().top);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'$(".childrenDiv").position().top '</span>+$(<span class="string">".childrenDiv"</span>).position().left);</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-295c298172ac58b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-d01e48f20b7cc5eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="offset-position"></p>
<p><a href="http://codepen.io/poetries/pen/yVRqZO" target="_blank" rel="external">在线演示</a></p>
<h3 id="三、jquery各种宽高应用"><a href="#三、jquery各种宽高应用" class="headerlink" title="三、jquery各种宽高应用"></a>三、jquery各种宽高应用</h3><hr>
<p><strong>3.1 jquery可视区域加载</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example</span> &#123;</div><div class="line">			<span class="attribute">width</span>: <span class="number">500px</span>;</div><div class="line">			<span class="attribute">height</span>: <span class="number">350px</span>;</div><div class="line">			<span class="attribute">background</span>: red;</div><div class="line">			<span class="attribute">margin</span>: <span class="number">1000px</span> auto <span class="number">0</span> auto;</div><div class="line">		&#125;</div><div class="line">		@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> fadeInLeft&#123;</div><div class="line">			0%&#123;</div><div class="line">				<span class="attribute">opacity</span>: <span class="number">0</span>;</div><div class="line">				<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(-100%,0,0);</div><div class="line">			&#125;</div><div class="line">			100%&#123;</div><div class="line">				<span class="attribute">opacity</span>: <span class="number">1</span>;</div><div class="line">				<span class="attribute">transform</span>: none;</div><div class="line">				</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">			<span class="selector-class">.fadeInLeft</span> &#123;</div><div class="line">				<span class="attribute">animation-name</span>: fadeInLeft;</div><div class="line">				<span class="attribute">animation-duration</span>: <span class="number">2s</span>;</div><div class="line">			&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> ks_area = $(<span class="built_in">window</span>).height();<span class="comment">//可视区域高度</span></div><div class="line">	<span class="keyword">var</span> scrollHeight = $(<span class="built_in">window</span>).scrollTop();<span class="comment">//被卷上去的那部分</span></div><div class="line">	<span class="keyword">var</span> divTop = $(<span class="string">"#example"</span>).offset().top;<span class="comment">//盒子距离浏览器顶部的距离</span></div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(ks_area + scrollHeight &gt;= divTop)&#123;</div><div class="line">		$(<span class="string">"#example"</span>).addClass(<span class="string">"fadeInLeft"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">document</span>.title = ks_area+<span class="string">'-'</span>+scrollHeight+<span class="string">'-'</span>+divTop;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><a href="http://codepen.io/poetries/pen/MbPqVE" target="_blank" rel="external">在线演示</a></p>
<p><strong>3.2 jquery滚动到底部和顶部加载</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/jquery/2.1.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example</span> &#123;</div><div class="line">			<span class="attribute">width</span>: <span class="number">500px</span>;</div><div class="line">			<span class="attribute">height</span>: <span class="number">350px</span>;</div><div class="line">			<span class="attribute">background</span>: red;</div><div class="line">			<span class="attribute">margin</span>: <span class="number">1000px</span> auto <span class="number">0</span> auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> ks_area = $(<span class="built_in">window</span>).height();</div><div class="line">	<span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop();</div><div class="line">	<span class="keyword">var</span> wholeHeight = $(<span class="built_in">document</span>).height();</div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(ks_area + scrollTop &gt;=wholeHeight )&#123;</div><div class="line">		alert(<span class="string">"已经到底部了"</span>);</div><div class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(scrollTop == <span class="number">0</span>)&#123;</div><div class="line">		alert(<span class="string">"已经到头部了"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p><a href="http://codepen.io/poetries/pen/gLBdZa" target="_blank" rel="external">在线演示</a></p>
<p>（完）</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文链接 &lt;a href=&quot;http://blog.poetries.top/2016/12/13/js-props&quot;&gt;http://blog.poetries.top/2016/12/13/js-props&lt;/a&gt;&lt;br&gt;声明：本文根据慕课网学习视频整理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;强烈建议打开控制台自己动手练习一遍，这样印象才会深刻&lt;/p&gt;
&lt;h2 id=&quot;第一部分-JavaScript中的宽高属性&quot;&gt;&lt;a href=&quot;#第一部分-JavaScript中的宽高属性&quot; class=&quot;headerlink&quot; title=&quot;第一部分 JavaScript中的宽高属性&quot;&gt;&lt;/a&gt;第一部分 JavaScript中的宽高属性&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;一、与window相关的宽高属性&quot;&gt;&lt;a href=&quot;#一、与window相关的宽高属性&quot; class=&quot;headerlink&quot; title=&quot;一、与window相关的宽高属性&quot;&gt;&lt;/a&gt;一、与window相关的宽高属性&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;1-1-window-location和document-location&quot;&gt;&lt;a href=&quot;#1-1-window-location和document-location&quot; class=&quot;headerlink&quot; title=&quot;1.1 window.location和document.location&quot;&gt;&lt;/a&gt;1.1 window.location和document.location&lt;/h4&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Javascript数组详解</title>
    <link href="http://www.poetries.top/2016/12/13/js-arr/"/>
    <id>http://www.poetries.top/2016/12/13/js-arr/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h4 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h4><hr>
<ul>
<li>数组是按序号排列的一组值，每个值的位置都有编号（从<code>0</code>开始）。数组本质上是一种特殊的对象。它的键名是按（<code>0，1，2...</code>）排列的一组数字<a id="more"></a>
</li>
</ul>
<h5 id="创建数组："><a href="#创建数组：" class="headerlink" title="创建数组："></a>创建数组：</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(values);</div><div class="line"><span class="keyword">var</span> arr = [vaules];</div></pre></td></tr></table></figure>
<h5 id="判断比是否是个数组"><a href="#判断比是否是个数组" class="headerlink" title="判断比是否是个数组"></a>判断比是否是个数组</h5><hr>
<ul>
<li><p><code>Array.isArray(arr)</code></p>
</li>
<li><p><code>arr instanceof Array</code></p>
</li>
</ul>
<h5 id="增加数组元素"><a href="#增加数组元素" class="headerlink" title="增加数组元素"></a>增加数组元素</h5><hr>
<ul>
<li><code>push()</code>方法 在数组的末尾增加一个或多个元素，并返回数组的新长度。</li>
<li><code>unshift()</code>方法 在数组的开头增加一个或多个元素，并返回数组的新长度。</li>
<li><code>length</code> 属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">arr.push(<span class="number">4</span>)</div><div class="line">arr  <span class="comment">// 1, 2, 3, 4</span></div><div class="line">arr.unshift(<span class="number">6</span>)</div><div class="line">arr  <span class="comment">// 6, 1, 2, 3, 4</span></div><div class="line">arr[arr.length] = <span class="number">7</span>  <span class="comment">// 与push()方法类似</span></div><div class="line">arr  <span class="comment">// 6, 1, 2, 3, 4, 7</span></div></pre></td></tr></table></figure>
<h5 id="删除数组中的元素"><a href="#删除数组中的元素" class="headerlink" title="删除数组中的元素"></a>删除数组中的元素</h5><hr>
<ul>
<li><code>delete</code> 运算符，可以删除数组中的某个元素，但这不会改变<code>length</code>属性的值.</li>
<li><code>pop()</code> 方法 删除数组的最后一个元素，并返回这个元素</li>
<li><code>shift()</code> 方法 删除数组的第一个元素，并返回这个元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</div><div class="line"><span class="keyword">delete</span> arr[<span class="number">0</span>];</div><div class="line">arr   <span class="comment">// [undefined,2,3]</span></div><div class="line">arr.length  <span class="comment">// 3</span></div><div class="line"><span class="keyword">var</span> last = arr.pop()</div><div class="line"><span class="keyword">var</span> first = arr.shift()</div><div class="line">last <span class="comment">// 3</span></div><div class="line">first <span class="comment">// undefined</span></div><div class="line">arr <span class="comment">//2</span></div></pre></td></tr></table></figure>
<h4 id="类数组对象"><a href="#类数组对象" class="headerlink" title="类数组对象"></a>类数组对象</h4><hr>
<ul>
<li>在<code>js</code>中，有些对象被叫做“类数组对象<code>”（array-like object）</code>，因为这些对象看起来很像数组，可以使用<code>length</code>属性，但是无法使用数组的方法。 </li>
<li>典型的类数组对象是函数的<code>arguments</code>对象，以及大多数<code>DOM</code>元素集，还有字符串</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// arguments对象</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">args</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> <span class="built_in">arguments</span>; &#125;</div><div class="line"><span class="keyword">var</span> arraylike = args(<span class="string">'a'</span>,<span class="string">'b'</span>)</div><div class="line">arrayLike[<span class="number">0</span>]  <span class="comment">// 'a'</span></div><div class="line">arrayLike.length <span class="comment">// 2</span></div><div class="line">arrayLike <span class="keyword">instanceof</span> <span class="built_in">Array</span> <span class="comment">// false</span></div><div class="line"><span class="built_in">Array</span>.isArray(arrayLike)  <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="comment">// DOM元素集</span></div><div class="line"><span class="keyword">var</span> elts = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'p'</span>);</div><div class="line">elts.length  <span class="comment">// 3</span></div><div class="line">eles <span class="keyword">instanceof</span> <span class="built_in">Array</span>  <span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="comment">//字符串</span></div><div class="line"><span class="string">'abc'</span>[<span class="number">1</span>]  <span class="comment">// 'b'</span></div><div class="line"><span class="string">'abc'</span>.length  <span class="comment">// 3</span></div><div class="line"><span class="string">'abc'</span> <span class="keyword">instanceof</span> <span class="built_in">Array</span>  <span class="comment">// false</span></div></pre></td></tr></table></figure>
<h4 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h4><hr>
<h5 id="for…in-循环"><a href="#for…in-循环" class="headerlink" title="for…in 循环"></a>for…in 循环</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a =[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">a.other = <span class="string">'other'</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</div><div class="line">    <span class="built_in">console</span>.log( arr[i]);</div><div class="line">&#125;</div><div class="line"><span class="comment">// 1, 2, 3, other</span></div></pre></td></tr></table></figure>
<ul>
<li>从上面的输出结果可以看出，利用<code>for..in</code>循环会将动态添加的非数字键的值遍历出来，因此需要使用的时候需要注意</li>
</ul>
<h5 id="for-循环和-while-循环"><a href="#for-循环和-while-循环" class="headerlink" title="for 循环和 while 循环"></a>for 循环和 while 循环</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line"></div><div class="line"><span class="comment">// for循环</span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</div><div class="line">  <span class="built_in">console</span>.log(a[i]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// while循环</span></div><div class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span> (i &lt; a.length) &#123;</div><div class="line">  <span class="built_in">console</span>.log(a[i]);</div><div class="line">  i++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> l = a.length;</div><div class="line"><span class="keyword">while</span> (l--) &#123;</div><div class="line">  <span class="built_in">console</span>.log(a[l]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="forEach-方法"><a href="#forEach-方法" class="headerlink" title="forEach()方法"></a>forEach()方法</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//array.forEach(callback[, thisArg])</span></div><div class="line"><span class="comment">//callback 在数组的每一项上执行的函数，接受三个参数：item: 数组当前项的值，index: 当前项的索引，arr:数组本身。</span></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(item, index);</div><div class="line">&#125;);</div><div class="line"><span class="comment">//1 0</span></div><div class="line"><span class="comment">//2 1</span></div><div class="line"><span class="comment">//3 2</span></div></pre></td></tr></table></figure>
<h4 id="数组常用的方法"><a href="#数组常用的方法" class="headerlink" title="数组常用的方法"></a>数组常用的方法</h4><hr>
<p><img src="https://segmentfault.com/img/bVzkqq" alt=""></p>
<h5 id="join-将数值转换为字符串"><a href="#join-将数值转换为字符串" class="headerlink" title="join() 将数值转换为字符串"></a>join() 将数值转换为字符串</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">arr.join(); <span class="comment">// "1,2,3"</span></div><div class="line">arr.join(<span class="string">"_"</span>); <span class="comment">// "1_2_3"</span></div></pre></td></tr></table></figure>
<h5 id="reverse-将数组逆序"><a href="#reverse-将数组逆序" class="headerlink" title="reverse() 将数组逆序"></a>reverse() 将数组逆序</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 原数组会被修改</span></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">arr.reverse(); <span class="comment">// [3, 2, 1]</span></div><div class="line">arr; <span class="comment">// [3, 2, 1]</span></div></pre></td></tr></table></figure>
<h5 id="sort-数组排序"><a href="#sort-数组排序" class="headerlink" title="sort() 数组排序"></a>sort() 数组排序</h5><hr>
<ul>
<li>默认情况下是升序排列的，底层是调用了每个数组项的 <code>toString()</code> 方法，然后比较得到字符串，即使每个数组项的数值是数字，比较的也是字符串</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 原数组会被修改</span></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">12</span>, <span class="number">213</span>, <span class="number">1432</span>, <span class="string">'a'</span>];</div><div class="line">arr.sort(); <span class="comment">// [1, 12, 1432, 213, "a"]</span></div><div class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> b-a; <span class="comment">//按倒序排列数组</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h5 id="slice-返回部分数组"><a href="#slice-返回部分数组" class="headerlink" title="slice() 返回部分数组"></a>slice() 返回部分数组</h5><hr>
<ul>
<li><code>slice</code>用于复制数组，复制完后旧数组不变，返回得到的新数组是旧数组的子集</li>
<li>第一个参数begin是开始复制的位置，需要注意的是，可以设负数。设负数表示从尾往前数几个位置开始复制</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//原数组不会被修改</span></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</div><div class="line">arr.slice(); <span class="comment">//[1, 2, 3, 4, 5]</span></div><div class="line">arr.slice(<span class="number">1</span>,<span class="number">3</span>); <span class="comment">// [2, 3]</span></div><div class="line">arr.slice(<span class="number">1</span>, <span class="number">-1</span>); <span class="comment">// [2, 3, 4]</span></div><div class="line">arr; <span class="comment">// [1, 2, 3, 4, 5]</span></div></pre></td></tr></table></figure>
<h5 id="splice-数组拼接"><a href="#splice-数组拼接" class="headerlink" title="splice() 数组拼接"></a>splice() 数组拼接</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//原数组会被修改</span></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</div><div class="line"><span class="comment">//从第三个数组元素删除</span></div><div class="line">arr.splice(<span class="number">2</span>); <span class="comment">// returns [3, 4, 5] </span></div><div class="line">arr; <span class="comment">// [1, 2]</span></div><div class="line"><span class="comment">//从第三个数组元素删除，删除两个元素</span></div><div class="line">arr.splice(<span class="number">2</span>, <span class="number">2</span>) <span class="comment">// returns [3, 4]</span></div><div class="line">arr; <span class="comment">// [1, 2, 5]</span></div><div class="line"><span class="comment">//将'a','b'替换到数组的第二个元素</span></div><div class="line">arr.splice(<span class="number">1</span>, <span class="number">1</span>, <span class="string">'a'</span>, <span class="string">'b'</span>)</div></pre></td></tr></table></figure>
<h5 id="isArray-判断是否是数组"><a href="#isArray-判断是否是数组" class="headerlink" title="isArray() 判断是否是数组"></a>isArray() 判断是否是数组</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="keyword">var</span> a = <span class="string">"not array"</span>;</div><div class="line"><span class="built_in">Array</span>.isArray(arr); <span class="comment">// true</span></div><div class="line"><span class="built_in">Array</span>.isArray(a); <span class="comment">// false</span></div></pre></td></tr></table></figure>
<h5 id="indexOf-lastIndexOf-数组检索"><a href="#indexOf-lastIndexOf-数组检索" class="headerlink" title="indexOf() lastIndexOf() 数组检索"></a>indexOf() lastIndexOf() 数组检索</h5><hr>
<ul>
<li>两者都用于返回项目的索引值。区别是<code>indexOf</code>从头开始找，<code>lastIndexOf</code>从尾开始找。如果查找失败，无匹配，返回<code>-1</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>];</div><div class="line">arr.indexOf(<span class="string">'c'</span>);  <span class="comment">// 2 找到返回数组下标</span></div><div class="line">arr.indexOf(<span class="string">'c'</span>, <span class="number">3</span>); <span class="comment">// -1 指定从3号位开始查找</span></div><div class="line">arr.indexOf(<span class="string">'f'</span>); <span class="comment">// -1 没找到该元素</span></div><div class="line">arr.lastIndexOf(<span class="string">'c'</span>); <span class="comment">// 2</span></div><div class="line">arr.lastIndexOf(<span class="string">'c'</span>,<span class="number">2</span>); <span class="comment">// 2</span></div><div class="line">arr.lastIndexOf(<span class="string">'f'</span>); <span class="comment">// -1 没找到该元素</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;数组的定义&quot;&gt;&lt;a href=&quot;#数组的定义&quot; class=&quot;headerlink&quot; title=&quot;数组的定义&quot;&gt;&lt;/a&gt;数组的定义&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;数组是按序号排列的一组值，每个值的位置都有编号（从&lt;code&gt;0&lt;/code&gt;开始）。数组本质上是一种特殊的对象。它的键名是按（&lt;code&gt;0，1，2...&lt;/code&gt;）排列的一组数字
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="数组" scheme="http://www.poetries.top/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>OOP之作用域与闭包</title>
    <link href="http://www.poetries.top/2016/12/13/js-scope/"/>
    <id>http://www.poetries.top/2016/12/13/js-scope/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><hr>
<ul>
<li>定义</li>
</ul>
<blockquote>
<p>在编程语言中，作用域控制着变量与参数的可见性及生命周期，它能减少名称冲突，而且提供了自动内存管理 –javascript 语言精粹</p>
</blockquote>
<ul>
<li>一个变量、函数或者成员可以在代码中访问到的范围<ul>
<li><code>js</code>的变量作用域是基于其特有的作用域链的。</li>
<li>全局变量都是<code>window</code>对象的属性</li>
<li>没有块级作用域</li>
<li>函数中声明的变量在整个函数中都有定义<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//全局作用域</span></div><div class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="comment">//没有块级作用域</span></div><div class="line"><span class="keyword">if</span>(fasle)&#123;</div><div class="line">    <span class="keyword">var</span> b =<span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//函数作用域</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line">    <span class="built_in">console</span>.log(a);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h4><hr>
<ul>
<li>作用域链是一个对象列表，上下文代码中出现的标识符在这个列表中进行查找</li>
<li>如果一个变量在函数自身的作用域（在自身的变量/活动对象）中没有找到，那么将会查找它父函数（外层函数）的变量对象，以此类推</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span> (<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> x =<span class="number">100</span>;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(x);</div><div class="line">    &#125;</div><div class="line">    g();</div><div class="line">&#125;</div><div class="line">f();</div></pre></td></tr></table></figure>
<ul>
<li>这里形成了一条作用域链，当函数<code>g</code>访问不到变量时，它会通过内部的<code>[[scope]]</code>对象查找作用域链上的执行上下文，当找到就终止，找不到会继续，直到<code>window</code>对象上也没有的时候，会报错</li>
<li>需要注意的是，用<code>new Function</code>创建的函数，其作用域指向全局作用域</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> x = <span class="number">100</span>;</div><div class="line">    <span class="comment">// g.[[scope]] == window</span></div><div class="line">    <span class="keyword">var</span> g = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">""</span>, <span class="string">"alert(x)"</span>);</div><div class="line"></div><div class="line">    g();</div><div class="line">&#125;</div><div class="line">f();</div><div class="line"><span class="comment">//报错 x is not defined</span></div></pre></td></tr></table></figure>
<h4 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h4><hr>
<ul>
<li><p>我的理解就是，一个函数捕获其父函数的自由变量，这就形成了闭包</p>
</li>
<li><p>闭包的本质</p>
<ul>
<li>作用域链的存在</li>
</ul>
</li>
<li>闭包的好处<ul>
<li>减少全局变量</li>
<li>减少传递给函数的参数数量</li>
<li>封装</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;作用域&quot;&gt;&lt;a href=&quot;#作用域&quot; class=&quot;headerlink&quot; title=&quot;作用域&quot;&gt;&lt;/a&gt;作用域&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;定义&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在编程语言中，作用域控制着变量与参数的可见性及生命周期，它能减少名称冲突，而且提供了自动内存管理 –javascript 语言精粹&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;一个变量、函数或者成员可以在代码中访问到的范围&lt;ul&gt;
&lt;li&gt;&lt;code&gt;js&lt;/code&gt;的变量作用域是基于其特有的作用域链的。&lt;/li&gt;
&lt;li&gt;全局变量都是&lt;code&gt;window&lt;/code&gt;对象的属性&lt;/li&gt;
&lt;li&gt;没有块级作用域&lt;/li&gt;
&lt;li&gt;函数中声明的变量在整个函数中都有定义
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="作用域" scheme="http://www.poetries.top/tags/%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    
      <category term="闭包" scheme="http://www.poetries.top/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>arguments详解</title>
    <link href="http://www.poetries.top/2016/12/13/arguments%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.poetries.top/2016/12/13/arguments详解/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<p>每个函数都会有一个Arguments对象实例arguments，它引用着函数的实参，可以用数组下标的方式”[]”引用arguments的元素。<code>arguments.length</code>为函数实参个数，<code>arguments.callee</code>引用函数自身。</p>
<a id="more"></a>
<h3 id="Arguments对象介绍"><a href="#Arguments对象介绍" class="headerlink" title="Arguments对象介绍"></a>Arguments对象介绍</h3><p>Arguments对象是一个伪数组对象，它有length属性，可以arguments[i]来访问对象中的元素，但它不能用数组的一些方法，例如push，pop，slice等。</p>
<h4 id="Arguments的length属性"><a href="#Arguments的length属性" class="headerlink" title="Arguments的length属性"></a>Arguments的length属性</h4><p>Arguments的length属性，表示function函数实际所传参数的个数。函数名点length可以获取函数期望的传参个数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">argTest</span>(<span class="params">a,b,c</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> t = <span class="built_in">arguments</span>.length; <span class="comment">//实际传参个数</span></div><div class="line">	<span class="keyword">var</span> e = argTest.length;   <span class="comment">//期望传参个数</span></div><div class="line"></div><div class="line">	<span class="built_in">console</span>.log(t);</div><div class="line">	<span class="built_in">console</span>.log(e);</div><div class="line">&#125;</div><div class="line"></div><div class="line">argTest(<span class="number">11</span>,<span class="number">12</span>);       <span class="comment">//t=2,e=3</span></div><div class="line">argTest(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>);    <span class="comment">//t=3,e=3</span></div><div class="line">argTest(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>); <span class="comment">//t=4,e=3</span></div></pre></td></tr></table></figure>
<h4 id="Arguments的参数访问"><a href="#Arguments的参数访问" class="headerlink" title="Arguments的参数访问"></a>Arguments的参数访问</h4><p>Arguments对象的参数访问可以用arguments[i]来访问函数所传的参数。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">argTest</span>(<span class="params">a,b,c</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> arg = [];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</div><div class="line">		arg.push(<span class="built_in">arguments</span>[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">console</span>.log(arg);</div><div class="line">&#125;</div><div class="line"></div><div class="line">argTest(<span class="number">11</span>,<span class="number">12</span>);       <span class="comment">//[11, 12]</span></div><div class="line">argTest(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>);    <span class="comment">//[11, 12, 13]</span></div><div class="line">argTest(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>); <span class="comment">//[11, 12, 13, 14]</span></div></pre></td></tr></table></figure>
<h4 id="Arguments的callee调用"><a href="#Arguments的callee调用" class="headerlink" title="Arguments的callee调用"></a>Arguments的callee调用</h4><p>Arguments的callee属性可以调用函数本身，当函数正在执行时才可调用，可以实现方法的递归调用。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">argTest</span>(<span class="params">a,b,c</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> e = <span class="built_in">arguments</span>.callee.toString();</div><div class="line">	<span class="built_in">console</span>.log(e);</div><div class="line">&#125;</div><div class="line"></div><div class="line">argTest(); <span class="comment">//打印出函数本身</span></div></pre></td></tr></table></figure>
<h4 id="Function对象caller属性"><a href="#Function对象caller属性" class="headerlink" title="Function对象caller属性"></a>Function对象caller属性</h4><p>Function对象的caller属性可以指向当前函数的调用者，当调用者函数正在执行时才可调用，</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">callerTest</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(callerTest.caller)&#123;</div><div class="line">		<span class="keyword">var</span> caller = callerTest.caller.toString();</div><div class="line">		<span class="built_in">console</span>.log(caller);</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="string">"no caller"</span>)</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">handler</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	callerTest();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">handlerToHandler</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	handler();</div><div class="line">&#125;</div><div class="line"></div><div class="line">callerTest();        <span class="comment">//no caller</span></div><div class="line">handler();           <span class="comment">//返回调用者handler函数</span></div><div class="line">handlerToHandler();  <span class="comment">//返回调用者handler函数</span></div></pre></td></tr></table></figure>
<h3 id="Arguments的作用"><a href="#Arguments的作用" class="headerlink" title="Arguments的作用"></a>Arguments的作用</h3><h4 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h4><p>方法重载是指在一个类中定义多个同名的方法，但要求每个方法具有不同的参数的类型或参数的个数。<br>Javascript并没有重载函数的功能，但是Arguments对象能够模拟重载。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//普通方法实现方法重载</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">a,b,c</span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(a &amp;&amp; b &amp;&amp; c)&#123;</div><div class="line">		<span class="built_in">console</span>.log(a + b + c);</div><div class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a &amp;&amp; b)&#123;</div><div class="line">		<span class="built_in">console</span>.log(a + b);</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(a);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">test();           <span class="comment">//undefined</span></div><div class="line">test(<span class="number">11</span>,<span class="number">12</span>);      <span class="comment">//23</span></div><div class="line">test(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>)    <span class="comment">//36</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Arguments对象实现方法重载</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> sum = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</div><div class="line">		sum += <span class="built_in">arguments</span>[i];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">console</span>.log(sum);</div><div class="line">&#125;</div><div class="line"></div><div class="line">test();          <span class="comment">//0</span></div><div class="line">test(<span class="number">11</span>,<span class="number">12</span>);     <span class="comment">//23</span></div><div class="line">test(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>);  <span class="comment">//36</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//ES6实现方法重载</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">...nums</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> sum = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</div><div class="line">		sum += nums[i];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">console</span>.log(sum);</div><div class="line">&#125;</div><div class="line"></div><div class="line">test();          <span class="comment">//0</span></div><div class="line">test(<span class="number">11</span>,<span class="number">12</span>);     <span class="comment">//23</span></div><div class="line">test(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>);  <span class="comment">//36</span></div></pre></td></tr></table></figure>
<h4 id="递归调用"><a href="#递归调用" class="headerlink" title="递归调用"></a>递归调用</h4><p>这样的好处就是可以实现匿名函数的递归调用。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//实现一个阶乘函数</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorial</span>(<span class="params">n</span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		n * <span class="built_in">arguments</span>.callee(n<span class="number">-1</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">factorial(<span class="number">1</span>); <span class="comment">//1</span></div><div class="line">factorial(<span class="number">5</span>); <span class="comment">//120</span></div></pre></td></tr></table></figure>
<h4 id="不定参问题"><a href="#不定参问题" class="headerlink" title="不定参问题"></a>不定参问题</h4><p>比如说，我想判断你传给我的一些数字的大小，取出最大的那个</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> maxNum = <span class="built_in">Number</span>.NEGATIVE_INFINITY;;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">arguments</span>[i]&gt; maxNum)&#123;</div><div class="line">			maxNum = <span class="built_in">arguments</span>[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> maxNum;</div><div class="line">&#125;</div><div class="line"></div><div class="line">max(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">10</span>); <span class="comment">//11</span></div><div class="line">max(<span class="number">2</span>,<span class="number">-10</span>,<span class="number">22</span>,<span class="number">11</span>);   <span class="comment">//22</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每个函数都会有一个Arguments对象实例arguments，它引用着函数的实参，可以用数组下标的方式”[]”引用arguments的元素。&lt;code&gt;arguments.length&lt;/code&gt;为函数实参个数，&lt;code&gt;arguments.callee&lt;/code&gt;引用函数自身。&lt;/p&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS 中的 call、apply、bind 方法</title>
    <link href="http://www.poetries.top/2016/12/13/call-apply-bind/"/>
    <id>http://www.poetries.top/2016/12/13/call-apply-bind/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><code>call()</code>、<code>apply()</code>、<code>bind()</code>都是函数对象的一个方法，它们的作用都是改变函数的调用对象。它的使用极大的简化了代码的调用</li>
</ul>
<h4 id="一、方法定义"><a href="#一、方法定义" class="headerlink" title="一、方法定义"></a>一、方法定义</h4><ul>
<li><strong>call方法</strong></li>
<li>语法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fun.call(thisArg[, arg1[, arg2[, ...]]])</div></pre></td></tr></table></figure>
<ul>
<li><code>thisArg</code>：<code>fun</code>函数运行时指定的<code>this</code>值，可能的值为：<ul>
<li>不传，或者传<code>null</code>，<code>undefined</code>， <code>this</code>指向<code>window</code>对象</li>
<li>传递另一个函数的函数名<code>fun2</code>，<code>this</code>指向函数fun2的引用<br>值为原始值(数字，字符串，布尔值),this会指向该原始值的自动包装对象，如 String、Number、Boolean</li>
<li>传递一个对象，函数中的<code>this</code>指向这个对象</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li><strong>apply方法</strong></li>
<li><p>语法：<code>apply([thisObj[,argArray]])</code></p>
<ul>
<li>定义：应用某一对象的一个方法，用另一个对象替换当前对象。   </li>
<li>说明：<code>apply</code>的第一个参数<code>thisObj</code>和<code>call</code>方法的一样，第二个参数<code>argArray</code>为一个传参数组<code>thisObj</code>如果未传，那么 <code>Global</code>对象被用作 <code>thisObj</code></li>
</ul>
</li>
<li><p><strong>bind方法</strong></p>
<ul>
<li><p>在<code>ECMAScript5</code>中扩展了叫<code>bind</code>的方法（<code>IE6,7,8</code>不支持）</p>
</li>
<li><p>语法：<code>bind([thisObj[,arg1[, arg2[, [,.argN]]]]])</code></p>
</li>
<li><p>定义：应用某一对象的一个方法，用另一个对象替换当前对象。</p>
</li>
<li><p>说明：<code>bind</code>的<code>thisObj</code>参数也和<code>call</code>方法一样，<code>thisObj</code>如果未传，那么 <code>Global</code>对象被用作 <code>thisObj</code>。arg1 … argN可传可不传。如果不传，可以在调用的时候再传。如果传了，调用的时候则可以不传，调用的时候如果你还是传了，则不生效</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">var person = &#123;</div><div class="line">    name:&quot;tsrot&quot;,</div><div class="line">    age:24,</div><div class="line">    sayHello:function(age)&#123;</div><div class="line">        console.log(this.name);</div><div class="line">        console.log(age);</div><div class="line">    &#125;</div><div class="line">    &#125;;</div><div class="line">var son = &#123;</div><div class="line"> name:&quot;xieliqun&quot;</div><div class="line"> &#125;;</div><div class="line">var boundFunc = person.sayHello.bind(son);</div><div class="line">boundFunc(25);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var boundFunc = person.sayHello.bind(son,25);</div><div class="line">boundFunc();</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var boundFunc = person.sayHello.bind(son,25);</div><div class="line">boundFunc(30);</div></pre></td></tr></table></figure>
<h4 id="二、call、apply、bind的区别"><a href="#二、call、apply、bind的区别" class="headerlink" title="二、call、apply、bind的区别"></a>二、call、apply、bind的区别</h4><ul>
<li><code>call</code>的<code>arg</code>传参需一个一个传，<code>apply</code>则直接传一个数组</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">function hello(name,age)&#123;</div><div class="line"> console.log(name);</div><div class="line">  console.log(age);</div><div class="line">  &#125;</div><div class="line">hello.call(this,&quot;tsrot&quot;,24);</div><div class="line">hello.apply(this,[&quot;tsrot&quot;,24]);</div></pre></td></tr></table></figure>
<ul>
<li><code>call</code>和<code>apply</code>直接执行函数，而<code>bind</code>需要再一次调用</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">    x: 81,</div><div class="line">    &#125;;</div><div class="line">var foo = &#123;</div><div class="line">    getX: function() &#123;</div><div class="line">        return this.x;</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">console.log(foo.getX.bind(obj)());  </div><div class="line">console.log(foo.getX.call(obj));    </div><div class="line">console.log(foo.getX.apply(obj));</div></pre></td></tr></table></figure>
<h4 id="三、运用场景"><a href="#三、运用场景" class="headerlink" title="三、运用场景"></a>三、运用场景</h4><ul>
<li>实现继承</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function Animal(name) &#123;</div><div class="line">  this.name = name;</div><div class="line">  this.showName = function () &#123;</div><div class="line">    console.log(this.name);</div><div class="line">  &#125;</div><div class="line">  &#125;</div><div class="line">function Cat(name) &#123;</div><div class="line">  Animal.call(this, name); </div><div class="line">  &#125;</div><div class="line">var cat = new Cat(&apos;Black Cat&apos;);</div><div class="line">cat.showName();</div></pre></td></tr></table></figure>
<ul>
<li>数组追加</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var array1 = [1 , 2 , 3, 5];</div><div class="line">var array2 = [&quot;xie&quot; , &quot;li&quot; , &quot;qun&quot; , &quot;tsrot&quot;];</div><div class="line">Array.prototype.push.apply(array1, array2);</div><div class="line">console.log(array1);</div></pre></td></tr></table></figure>
<ul>
<li>获取数组中的最大值和最小值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var num = [1,3,5,7,2,-10,11];</div><div class="line">var maxNum = Math.max.apply(Math, num);</div><div class="line">var minNum = Math.min.apply(Math, num);</div><div class="line">console.log(maxNum); </div><div class="line">console.log(minNum);</div></pre></td></tr></table></figure>
<ul>
<li>将伪数组转化为数组</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var fakeArr = &#123;0:&apos;a&apos;,1:&apos;b&apos;,length:2&#125;;</div><div class="line">var arr1 = Array.prototype.slice.call(fakeArr);</div><div class="line">console.log(arr1[0]); </div><div class="line">var arr2 = [].slice.call(fakeArr);</div><div class="line">console.log(arr2[0]); </div><div class="line">arr1.push(&quot;c&quot;);</div><div class="line">console.log(arr1);</div></pre></td></tr></table></figure>
<ul>
<li>保存this变量</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var foo = &#123;</div><div class="line">    bar : 1,</div><div class="line">    eventBind: function()&#123;</div><div class="line">        var _this = this ;</div><div class="line">        $(&apos;.someClass&apos;).on(&apos;click&apos;,function(event) &#123;</div><div class="line">            console.log(_this.bar);     </div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">var foo = &#123;</div><div class="line">    bar : 1,</div><div class="line">    eventBind: function()&#123;</div><div class="line">        $(&apos;.someClass&apos;).on(&apos;click&apos;,function(event) &#123;</div><div class="line">            console.log(this.bar);      </div><div class="line">        &#125;.bind(this));</div><div class="line">    &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;code&gt;call()&lt;/code&gt;、&lt;code&gt;apply()&lt;/code&gt;、&lt;code&gt;bind()&lt;/code&gt;都是函数对象的一个方法，它们的作用都是改变函数的调用对象。它的使用极大的简化了代码的调用&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;一、方法定义&quot;&gt;&lt;a href=&quot;#一、方法定义&quot; class=&quot;headerlink&quot; title=&quot;一、方法定义&quot;&gt;&lt;/a&gt;一、方法定义&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;call方法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fun.call(thisArg[, arg1[, arg2[, ...]]])&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;thisArg&lt;/code&gt;：&lt;code&gt;fun&lt;/code&gt;函数运行时指定的&lt;code&gt;this&lt;/code&gt;值，可能的值为：&lt;ul&gt;
&lt;li&gt;不传，或者传&lt;code&gt;null&lt;/code&gt;，&lt;code&gt;undefined&lt;/code&gt;， &lt;code&gt;this&lt;/code&gt;指向&lt;code&gt;window&lt;/code&gt;对象&lt;/li&gt;
&lt;li&gt;传递另一个函数的函数名&lt;code&gt;fun2&lt;/code&gt;，&lt;code&gt;this&lt;/code&gt;指向函数fun2的引用&lt;br&gt;值为原始值(数字，字符串，布尔值),this会指向该原始值的自动包装对象，如 String、Number、Boolean&lt;/li&gt;
&lt;li&gt;传递一个对象，函数中的&lt;code&gt;this&lt;/code&gt;指向这个对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>OOP之面向对象</title>
    <link href="http://www.poetries.top/2016/12/13/js-oop/"/>
    <id>http://www.poetries.top/2016/12/13/js-oop/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>一般面向对象包含：继承，封装，多态，抽象</p>
</blockquote>
<h4 id="对象形式的继承"><a href="#对象形式的继承" class="headerlink" title="对象形式的继承"></a>对象形式的继承</h4><hr>
<h5 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h5><hr>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Person = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">'allin'</span>,</div><div class="line">    <span class="attr">age</span>: <span class="number">18</span>,</div><div class="line">    <span class="attr">address</span>: &#123;</div><div class="line">        <span class="attr">home</span>: <span class="string">'home'</span>,</div><div class="line">        <span class="attr">office</span>: <span class="string">'office'</span>,</div><div class="line">    &#125;</div><div class="line">    sclools: [<span class="string">'x'</span>,<span class="string">'z'</span>],</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> programer = &#123;</div><div class="line">    <span class="attr">language</span>: <span class="string">'js'</span>,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">p, c</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> c = c || &#123;&#125;;</div><div class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> prop <span class="keyword">in</span> p)&#123;</div><div class="line">        c[prop] = p[prop];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">extend(Person, programer);</div><div class="line">programer.name;  <span class="comment">// allin</span></div><div class="line">programer.address.home;  <span class="comment">// home</span></div><div class="line">programer.address.home = <span class="string">'house'</span>;  <span class="comment">//house</span></div><div class="line">Person.address.home;  <span class="comment">// house</span></div></pre></td></tr></table></figure>
<ul>
<li>从上面的结果看出，浅拷贝的缺陷在于修改了子对象中引用类型的值，会影响到父对象中的值，因为在浅拷贝中对引用类型的拷贝只是拷贝了地址，指向了内存中同一个副本</li>
</ul>
<h5 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">extendDeeply</span>(<span class="params">p, c</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> c = c || &#123;&#125;;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> p)&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> p[prop] === <span class="string">"object"</span>)&#123;</div><div class="line">            c[prop] = (p[prop].constructor === <span class="built_in">Array</span>)?[]:&#123;&#125;;</div><div class="line">            extendDeeply(p[prop], c[prop]);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            c[prop] = p[prop];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>利用递归进行深拷贝，这样子对象的修改就不会影响到父对象</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">extendDeeply(Person, programer);</div><div class="line">programer.address.home = <span class="string">'allin'</span>;</div><div class="line">Person.address.home; <span class="comment">// home</span></div></pre></td></tr></table></figure>
<h5 id="利用call和apply继承"><a href="#利用call和apply继承" class="headerlink" title="利用call和apply继承"></a>利用call和apply继承</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">"abc"</span>;</div><div class="line">    <span class="keyword">this</span>.address = &#123;<span class="attr">home</span>: <span class="string">"home"</span>&#125;;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Child</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    Parent.call(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">this</span>.language = <span class="string">"js"</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="ES5中的Object-create"><a href="#ES5中的Object-create" class="headerlink" title="ES5中的Object.create()"></a>ES5中的Object.create()</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> p = &#123; <span class="attr">name</span> : <span class="string">'allin'</span>&#125;;</div><div class="line"><span class="keyword">var</span> obj = <span class="built_in">Object</span>.create(o);</div><div class="line">obj.name; <span class="comment">// allin</span></div></pre></td></tr></table></figure>
<ul>
<li><code>Object.create()</code>作为<code>new</code>操作符的替代方案是<code>ES5</code>之后才出来的。我们也可以自己模拟该方法：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//模拟Object.create()方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">myCreate</span>(<span class="params">o</span>)</span>&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line">    F.prototype = o;</div><div class="line">    o = <span class="keyword">new</span> F();</div><div class="line">    <span class="keyword">return</span> o;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> p = &#123; <span class="attr">name</span> : <span class="string">'allin'</span>&#125;;</div><div class="line"><span class="keyword">var</span> obj = myCreate(o);</div><div class="line">obj.name; <span class="comment">// allin</span></div></pre></td></tr></table></figure>
<ul>
<li>目前，各大浏览器的最新版本（包括<code>IE9</code>）都部署了这个方法。如果遇到老式浏览器，可以用下面的代码自行部署</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">　<span class="keyword">if</span> (!<span class="built_in">Object</span>.create) &#123;</div><div class="line">　　　　<span class="built_in">Object</span>.create = <span class="function"><span class="keyword">function</span> (<span class="params">o</span>) </span>&#123;</div><div class="line">　　　　　　 <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>) </span>&#123;&#125;</div><div class="line">　　　　　　F.prototype = o;</div><div class="line">　　　　　　<span class="keyword">return</span> <span class="keyword">new</span> F();</div><div class="line">　　　　&#125;;</div><div class="line">　　&#125;</div></pre></td></tr></table></figure>
<h4 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h4><hr>
<h5 id="Object-create"><a href="#Object-create" class="headerlink" title="Object.create()"></a>Object.create()</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>)</span>&#123;&#125;</div><div class="line">Person.prototype.headCount = <span class="number">1</span>;</div><div class="line">Person.prototype.eat = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'eating...'</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Programmer</span>(<span class="params">name, age, title</span>)</span>&#123;&#125;</div><div class="line"></div><div class="line">Programmer.prototype = <span class="built_in">Object</span>.create(Person.prototype); <span class="comment">//建立继承关系</span></div><div class="line">Programmer.prototype.constructor = Programmer;  <span class="comment">// 修改constructor的指向</span></div></pre></td></tr></table></figure>
<h5 id="调用父类方法"><a href="#调用父类方法" class="headerlink" title="调用父类方法"></a>调用父类方法</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">&#125;</div><div class="line">Person.prototype.headCount = <span class="number">1</span>;</div><div class="line">Person.prototype.eat = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'eating...'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Programmer</span>(<span class="params">name, age, title</span>)</span>&#123;</div><div class="line">    Person.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>); <span class="comment">// 调用父类的构造器</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">Programmer.prototype = <span class="built_in">Object</span>.create(Person.prototype);</div><div class="line">Programmer.prototype.constructor = Programmer;</div><div class="line"></div><div class="line">Programmer.prototype.language = <span class="string">"js"</span>;</div><div class="line">Programmer.prototype.work = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'i am working code in '</span>+ <span class="keyword">this</span>.language);</div><div class="line">    Person.prototype.eat.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>); <span class="comment">// 调用父类上的方法</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><hr>
<h5 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h5><hr>
<ul>
<li><code>js</code>是没有命名空间的，因此可以用对象模拟</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> app = &#123;&#125;;  <span class="comment">// 命名空间app</span></div><div class="line"><span class="comment">//模块1</span></div><div class="line">app.module1 = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">'allin'</span>,</div><div class="line">    <span class="attr">f</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'hi robot'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">app.module1.name; <span class="comment">// "allin"</span></div><div class="line">app.module1.f();  <span class="comment">// hi robot</span></div></pre></td></tr></table></figure>
<h5 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> age = <span class="number">100</span>;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">&#125;</div><div class="line"><span class="comment">//静态成员</span></div><div class="line">Person.walk = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'static'</span>);</div><div class="line">&#125;;</div><div class="line">Person.walk();  <span class="comment">// static</span></div></pre></td></tr></table></figure>
<h5 id="私有与公有"><a href="#私有与公有" class="headerlink" title="私有与公有"></a>私有与公有</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">id</span>)</span>&#123;</div><div class="line">    <span class="comment">// 私有属性与方法</span></div><div class="line">    <span class="keyword">var</span> name = <span class="string">'allin'</span>;</div><div class="line">    <span class="keyword">var</span> work = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.id);</div><div class="line">    &#125;;</div><div class="line">    <span class="comment">//公有属性与方法</span></div><div class="line">    <span class="keyword">this</span>.id = id;</div><div class="line">    <span class="keyword">this</span>.say = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'say hello'</span>);</div><div class="line">        work.call(<span class="keyword">this</span>);</div><div class="line">    &#125;;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="number">123</span>);</div><div class="line">p1.name; <span class="comment">// undefined</span></div><div class="line">p1.id;  <span class="comment">// 123</span></div><div class="line">p1.say();  <span class="comment">// say hello 123</span></div></pre></td></tr></table></figure>
<h5 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> moduleA;</div><div class="line">moduleA = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> prop = <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="attr">func</span>: func,</div><div class="line">        <span class="attr">prop</span>: prop</div><div class="line">    &#125;;</div><div class="line">&#125;(); <span class="comment">// 立即执行匿名函数</span></div></pre></td></tr></table></figure>
<h4 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h4><hr>
<h5 id="模拟方法重载"><a href="#模拟方法重载" class="headerlink" title="模拟方法重载"></a>模拟方法重载</h5><hr>
<ul>
<li><code>arguments</code>属性可以取得函数调用的实参个数，可以利用这一点模拟方法的重载</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params">a, b </span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(demo.length); <span class="comment">// 得到形参个数</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>.length); <span class="comment">//得到实参个数</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">0</span>]);  <span class="comment">// 第一个实参 4</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">1</span>]);  <span class="comment">// 第二个实参 5</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">demo(<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//实现可变长度实参的相加</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> total = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="built_in">arguments</span>.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</div><div class="line">        total += <span class="built_in">arguments</span>[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> total;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(add(<span class="number">1</span>));  <span class="comment">// 1</span></div><div class="line"><span class="built_in">console</span>.log(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));  <span class="comment">// 7</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 参数不同的情况</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fontSize</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">'js'</span>);</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">arguments</span>.length == <span class="number">0</span>)&#123;</div><div class="line">        <span class="keyword">return</span> ele.style.fontSize;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        ele.style.fontSize = <span class="built_in">arguments</span>[<span class="number">0</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">fontSize(<span class="number">18</span>);</div><div class="line"><span class="built_in">console</span>.log(fontSize());</div><div class="line"></div><div class="line"><span class="comment">// 类型不同的情况</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setting</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">'js'</span>);</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">arguments</span>[<span class="number">0</span>] === <span class="string">"object"</span>)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> p <span class="keyword">in</span> <span class="built_in">arguments</span>[<span class="number">0</span>])&#123;</div><div class="line">            ele.style[p] = <span class="built_in">arguments</span>[<span class="number">0</span>][p];</div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        ele.style.fontSize = <span class="built_in">arguments</span>[<span class="number">0</span>];</div><div class="line">        ele.style.backgroundColor = <span class="built_in">arguments</span>[<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">setting(<span class="number">18</span>, <span class="string">'red'</span>);</div><div class="line">setting(&#123;<span class="attr">fontSize</span>:<span class="number">20</span>, <span class="attr">backgroundColor</span>: <span class="string">'green'</span>&#125;);</div></pre></td></tr></table></figure>
<h5 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> F();</div><div class="line">F.prototype.run = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'F'</span>);</div><div class="line">&#125;</div><div class="line">f.run(); <span class="comment">// F</span></div><div class="line"></div><div class="line">f.run = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'fff'</span>);</div><div class="line">&#125;</div><div class="line">f.run();  <span class="comment">// fff</span></div></pre></td></tr></table></figure>
<h4 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h4><hr>
<ul>
<li>在构造器中 <code>throw new Error(&#39;&#39;)</code>; 抛异常。这样防止这个类被直接调用</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">DetectorBase</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Abstract class can not be invoked directly!'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">DetectorBase.prototype.detect = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Detection starting...'</span>);</div><div class="line">&#125;;</div><div class="line">DetectorBase.prototype.stop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Detection stopped.'</span>);</div><div class="line">&#125;;</div><div class="line">DetectorBase.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Error'</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">// var d = new DetectorBase();</span></div><div class="line"><span class="comment">// Uncaught Error: Abstract class can not be invoked directly!</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">LinkDetector</span>(<span class="params"></span>) </span>&#123;&#125;</div><div class="line">LinkDetector.prototype = <span class="built_in">Object</span>.create(DetectorBase.prototype);</div><div class="line">LinkDetector.prototype.constructor = LinkDetector;</div><div class="line"></div><div class="line"><span class="keyword">var</span> l = <span class="keyword">new</span> LinkDetector();</div><div class="line"><span class="built_in">console</span>.log(l); <span class="comment">//LinkDetector &#123;&#125;__proto__: LinkDetector</span></div><div class="line">l.detect(); <span class="comment">//Detection starting...</span></div><div class="line">l.init(); <span class="comment">//Uncaught Error: Error</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一般面向对象包含：继承，封装，多态，抽象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;对象形式的继承&quot;&gt;&lt;a href=&quot;#对象形式的继承&quot; class=&quot;headerlink&quot; title=&quot;对象形式的继承&quot;&gt;&lt;/a&gt;对象形式的继承&lt;/h4&gt;&lt;hr&gt;
&lt;h5 id=&quot;浅拷贝&quot;&gt;&lt;a href=&quot;#浅拷贝&quot; class=&quot;headerlink&quot; title=&quot;浅拷贝&quot;&gt;&lt;/a&gt;浅拷贝&lt;/h5&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="面向对象" scheme="http://www.poetries.top/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>OOP之类与对象</title>
    <link href="http://www.poetries.top/2016/12/13/js-oop-and-class/"/>
    <id>http://www.poetries.top/2016/12/13/js-oop-and-class/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><hr>
<h5 id="对象的含义"><a href="#对象的含义" class="headerlink" title="对象的含义"></a>对象的含义</h5><ul>
<li><p>所谓对象，就是一种无序的数据集合，由若干个“键值对”（<code>key-value</code>）构成</p>
<a id="more"></a>
<h5 id="对象的创建"><a href="#对象的创建" class="headerlink" title="对象的创建"></a>对象的创建</h5></li>
<li><p>使用<code>new</code>运算符创建<code>Object</code></p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line">p.name = <span class="string">"Tony"</span>;</div></pre></td></tr></table></figure>
<ul>
<li>使用对象字面量的形式</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//对象字面量形式</span></div><div class="line"><span class="keyword">var</span> p =&#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">"tony"</span>,</div><div class="line">    <span class="attr">work</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"working...."</span>);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">_age</span>: <span class="number">18</span>,</div><div class="line">    get age()&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._age;</div><div class="line">    &#125;,</div><div class="line">    set age(val)&#123;</div><div class="line">        <span class="keyword">if</span>( val &lt;<span class="number">0</span> || val &gt; <span class="number">150</span>)&#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"invalid value"</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">this</span>._age = val;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(p.name);</div></pre></td></tr></table></figure>
<h5 id="对象的基本操作"><a href="#对象的基本操作" class="headerlink" title="对象的基本操作"></a>对象的基本操作</h5><ul>
<li>成员属性的添加</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Object.defineProperty()方法</span></div><div class="line"><span class="built_in">Object</span>.defineProperty(p, <span class="string">"age"</span>,&#123;<span class="attr">value</span>: <span class="number">18</span>, <span class="attr">writable</span>: <span class="literal">false</span>&#125;);</div><div class="line"><span class="comment">//Object.defineProperties()方法 添加多个属性</span></div><div class="line"><span class="built_in">Object</span>.defineProperties(p, &#123;</div><div class="line">    <span class="attr">salary</span>:&#123;</div><div class="line">        <span class="attr">value</span>: <span class="number">1000</span>,</div><div class="line">        <span class="attr">writable</span>: <span class="literal">false</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">gender</span>:&#123;</div><div class="line">        <span class="attr">value</span>: <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><p>成员的遍历</p>
<ul>
<li>使用 <code>for..in</code>语句</li>
<li><code>Object.keys()</code>方法 返回一个包含对象键名的字符串数组</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o =&#123;&#125;;</div><div class="line">o.name = <span class="string">"jack"</span>;</div><div class="line">o.age = <span class="number">20</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> o)&#123;</div><div class="line">    <span class="built_in">console</span>.log(o[i]);</div><div class="line">&#125; <span class="comment">// jack, 20</span></div><div class="line"><span class="built_in">Object</span>.keys(o); <span class="comment">// ["name", "age"]</span></div></pre></td></tr></table></figure>
<ul>
<li><p>检查对象是否有某个属性</p>
<ul>
<li><code>in</code> 操作符</li>
<li><code>Object.hasOwnProperty()</code>方法</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;<span class="attr">name</span>: <span class="string">"mariya"</span>&#125;</div><div class="line"><span class="string">"name"</span> <span class="keyword">in</span> o; <span class="comment">// true</span></div><div class="line">o.hasOwnProperty(<span class="string">"name"</span>); <span class="comment">// true</span></div></pre></td></tr></table></figure>
<ul>
<li>得到对象的属性特性描述 <code>Object.getOwnPropertyDescriptor(obj,property)</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Object</span>.getOwnPropertyDescriptor(o, <span class="string">"name"</span>);</div><div class="line"><span class="comment">//Object &#123;</span></div><div class="line"><span class="comment">//    value: "mariya", writable: true, enumerable: true, configurable: true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>删除属性<ul>
<li><code>delete</code>运算符,但有些对象的属性是删除不了的</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> o.name; <span class="comment">//true</span></div><div class="line">o.name;  <span class="comment">// undefined</span></div></pre></td></tr></table></figure>
<h5 id="Constructor属性"><a href="#Constructor属性" class="headerlink" title="Constructor属性"></a>Constructor属性</h5><ul>
<li><code>constructor</code>始终指向创建当前对象的构造函数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="built_in">console</span>.log(arr.constructor === <span class="built_in">Array</span>); <span class="comment">// true</span></div><div class="line"><span class="keyword">var</span> Foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</div><div class="line"><span class="built_in">console</span>.log(Foo.constructor === <span class="built_in">Function</span>); <span class="comment">// true</span></div><div class="line"><span class="comment">// 由构造函数实例化一个obj对象</span></div><div class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> Foo();</div><div class="line"><span class="built_in">console</span>.log(obj.constructor === Foo); <span class="comment">// true</span></div><div class="line"><span class="built_in">console</span>.log(obj.constructor.constructor === <span class="built_in">Function</span>); <span class="comment">// true</span></div></pre></td></tr></table></figure>
<ul>
<li>每个函数都有一个默认的属性<code>prototype</code>，而这个<code>prototype</code>的<code>constructor</code>默认指向这个函数</li>
</ul>
<h4 id="类的创建"><a href="#类的创建" class="headerlink" title="类的创建"></a>类的创建</h4><hr>
<ul>
<li><p>虽然<code>js</code>是门基于对象的语言，但是没有类这一概念的，虽然保留了<code>class</code>的关键字，但在<code>ES6</code>之前是无法使用的。所以，可以用构造函数模拟类的创建，也就是伪类。</p>
</li>
<li><p>所谓”构造函数”，其实就是一个普通函数，但是内部使用了<code>this</code>变量。对构造函数使用<code>new</code>运算符，就能生成实例，并且<code>this</code>变量会绑定在实例对象上</p>
</li>
<li>每一个构造函数都有一个<code>prototype</code>属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//构造函数模式</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">age, name</span>)</span>&#123; <span class="comment">//Class</span></div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">&#125;</div><div class="line"><span class="comment">//将公共的属性或方法放在prototype属性上</span></div><div class="line">Person.prototype.headCount = <span class="number">1</span>;</div><div class="line"><span class="comment">//创建实例对象</span></div><div class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Person(<span class="number">19</span>, <span class="string">'johnsom'</span>);</div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="number">20</span>, <span class="string">'allen'</span>);</div></pre></td></tr></table></figure>
<h4 id="this"><a href="#this" class="headerlink" title="this"></a>this</h4><hr>
<ul>
<li><code>this</code>表示当前对象，如果在全局作用范围内使用<code>this</code>，则指代当前页面对象<code>window</code>； 如果在函数中使用<code>this</code>，则<code>this</code>指代什么是根据运行时此函数在什么对象上被调用。 我们还可以使用<code>apply</code>和<code>call</code>两个全局方法来改变函数中<code>this</code>的具体指向</li>
</ul>
<h5 id="全局代码中的this"><a href="#全局代码中的this" class="headerlink" title="全局代码中的this"></a>全局代码中的this</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span> === <span class="built_in">window</span>); <span class="comment">//true 全局范围内使用this指向window对象</span></div></pre></td></tr></table></figure>
<h5 id="普通的函数调用"><a href="#普通的函数调用" class="headerlink" title="普通的函数调用"></a>普通的函数调用</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">this</span>.name = <span class="string">"tony"</span>; <span class="comment">// this在运行时指向window对象,在严格模式下则是undefined</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="在对象中使用"><a href="#在对象中使用" class="headerlink" title="在对象中使用"></a>在对象中使用</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">"tony"</span>,</div><div class="line">    <span class="attr">print</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);  <span class="comment">//this指向对象o，但是可以改变其指向</span></div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h5 id="作为构造函数"><a href="#作为构造函数" class="headerlink" title="作为构造函数"></a>作为构造函数</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> F(); <span class="comment">// 函数内部的this指向新创建的对象。</span></div></pre></td></tr></table></figure>
<h5 id="多层嵌套的内部函数"><a href="#多层嵌套的内部函数" class="headerlink" title="多层嵌套的内部函数"></a>多层嵌套的内部函数</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">"global"</span>;</div><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">    <span class="attr">name</span> : <span class="string">"person"</span>,</div><div class="line">    <span class="attr">hello</span> : <span class="function"><span class="keyword">function</span>(<span class="params">sth</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> sayhello = <span class="function"><span class="keyword">function</span>(<span class="params">sth</span>) </span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">" says "</span> + sth);</div><div class="line">        &#125;;</div><div class="line">        sayhello(sth);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">person.hello(<span class="string">"hello world"</span>);<span class="comment">//global says hello world</span></div></pre></td></tr></table></figure>
<ul>
<li>在内部函数中，<code>this</code>没有按预想的绑定到外层函数对象上，而是绑定到了全局对象。这里普遍被认为是<code>JavaScript</code>语言的设计错误，因为没有人想让内部函数中的<code>this</code>指向全局对象。一般的处理方式是将<code>this</code>作为变量保存下来，一般约定为<code>that</code>或者<code>self</code>：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">"global"</span>;</div><div class="line"><span class="keyword">var</span> person = &#123;</div><div class="line">    <span class="attr">name</span> : <span class="string">"person"</span>,</div><div class="line">    <span class="attr">hello</span> : <span class="function"><span class="keyword">function</span>(<span class="params">sth</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</div><div class="line">        <span class="keyword">var</span> sayhello = <span class="function"><span class="keyword">function</span>(<span class="params">sth</span>) </span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(that.name + <span class="string">" says "</span> + sth);</div><div class="line">        &#125;;</div><div class="line">        sayhello(sth);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">person.hello(<span class="string">"hello world"</span>);<span class="comment">//person says hello world</span></div></pre></td></tr></table></figure>
<h5 id="事件中的this"><a href="#事件中的this" class="headerlink" title="事件中的this"></a>事件中的this</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ele = <span class="built_in">document</span>.getElementById(<span class="string">"id"</span>);</div><div class="line">ele.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);  <span class="comment">//this指向dom元素</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h5 id="使用apply和call改变this的指向"><a href="#使用apply和call改变this的指向" class="headerlink" title="使用apply和call改变this的指向"></a>使用apply和call改变this的指向</h5><ul>
<li><code>apply</code>和<code>call</code>类似，只是后面的参数是通过一个数组传入，而不是分开传入。两者都是将某个函数绑定到某个具体对象上使用，自然此时的<code>this</code>会被显式的设置为第一个参数。两者的方法定义：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">call( thisArg [，arg1，arg2，… ] );  <span class="comment">// 参数列表，arg1，arg2，...</span></div><div class="line">apply(thisArg [，argArray] );     <span class="comment">// 参数数组，argArray</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">'global'</span>;</div><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">'job'</span>,</div><div class="line">    <span class="attr">getName</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">o.getName(); <span class="comment">// job</span></div><div class="line"></div><div class="line"><span class="comment">//用call或apply改变函数中this的指向</span></div><div class="line">o.getName.call(<span class="keyword">this</span>); <span class="comment">// global</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>简单的总结：</strong></p>
<ul>
<li>当函数作为对象的方法调用时，<code>this</code>指向该对象。</li>
<li>构造函数中的<code>this</code>指向新创建的对象</li>
<li>嵌套函数中的<code>this</code>不会继承上层函数的<code>this</code>，如果需要，可以用一个变量保存上层函数的<code>this</code></li>
</ul>
</li>
</ul>
<h5 id="bind（）"><a href="#bind（）" class="headerlink" title="bind（）"></a>bind（）</h5><ul>
<li>该方法创建一个新函数，称为绑定函数，绑定函数会以创建它时传入<code>bind</code>方法的第一个参数作为<code>this</code>，传入<code>bind</code>方法的第二个以及以后的参数加上绑定函数运行时本身的参数按照顺序作为原函数的参数来调用原函数.</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#ele"</span>).click(person.hello.bind(person));</div><div class="line"><span class="comment">//相应元素被点击时，输出person says hello world</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;对象&quot;&gt;&lt;a href=&quot;#对象&quot; class=&quot;headerlink&quot; title=&quot;对象&quot;&gt;&lt;/a&gt;对象&lt;/h4&gt;&lt;hr&gt;
&lt;h5 id=&quot;对象的含义&quot;&gt;&lt;a href=&quot;#对象的含义&quot; class=&quot;headerlink&quot; title=&quot;对象的含义&quot;&gt;&lt;/a&gt;对象的含义&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;所谓对象，就是一种无序的数据集合，由若干个“键值对”（&lt;code&gt;key-value&lt;/code&gt;）构成&lt;/p&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="面向对象" scheme="http://www.poetries.top/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>OOP之原型与原型链</title>
    <link href="http://www.poetries.top/2016/12/13/js-prototype/"/>
    <id>http://www.poetries.top/2016/12/13/js-prototype/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h4 id="prototype原型对象"><a href="#prototype原型对象" class="headerlink" title="prototype原型对象"></a>prototype原型对象</h4><hr>
<ul>
<li>每个函数都有一个默认的<code>prototype</code>属性，其实际上还是一个对象，如果被用在继承中，姑且叫做原型对象</li>
<li><p>在构造函数中的<code>prototype</code>中定义的属性和方法，会被创建的对象所继承下来。举个栗子：</p>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">F.prototype.work = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'F is working..'</span>);</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> F();</div><div class="line">f.work(); <span class="comment">// F is working..</span></div></pre></td></tr></table></figure>
</li>
<li><p>当你创建函数时，<code>JS</code>会为这个函数自动添加 <code>prototype</code> 属性，值是空对象。而一旦你把这个函数当作构造函数（ <code>constructor</code> ）调用（即通过 <code>new</code>关键字调用），那么<code>JS</code>就会帮你创建该构造函数的实例，实例继承构造函数 <code>prototype</code> 的所有属性和方法（实例通过设置自己的<code>__proto__</code> 指向构造函数的 <code>prototype</code> 来实现这种继承）</p>
</li>
</ul>
<h4 id="神秘的proto"><a href="#神秘的proto" class="headerlink" title="神秘的proto"></a>神秘的<strong>proto</strong></h4><hr>
<ul>
<li><code>JS</code>的对象中都包含了一个<code>__proto__</code>属性，其指向的是创建该对象时的构造函数的原型对象<code>prototype</code></li>
</ul>
<p><img src="https://segmentfault.com/img/bVzPrk" alt=""></p>
<ul>
<li>从上面的输出结果看出，<code>f.__proto__</code>指向了其构造函数<code>F</code>的<code>prototype</code>，而<code>F.prototype</code>本身也是一个对象，其内部也有<code>__proto__</code>属性，其指向的是<code>Object.prototype</code>,直到最后<code>Object.prototype</code>指向<code>null</code>，这条原型链才结束</li>
<li>因此，<code>__proto__</code>这个神秘的属性才是原型链形成的真正原因</li>
</ul>
<h4 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h4><hr>
<ul>
<li>由于原型对象本身也是对象，根据上边的定义，它也有自己的原型，而它自己的原型对象又可以有自己的原型，这样就组成了一条链，这个就是原型链，<code>JavaScritp</code>引擎在访问对象的属性时，如果在对象本身中没有找到，则会去原型链中查找，如果找到，直接返回值，如果整个链都遍历且没有找到属性，则返回<code>undefined</code>。原型链一般实现为一个链表，这样就可以按照一定的顺序来查找</li>
</ul>
<p><img src="https://segmentfault.com/img/bVcXNb" alt=""></p>
<ul>
<li><p>从上图看出：</p>
<ul>
<li><code>Object.prototype</code>是顶级对象，所有对象都继承自它。</li>
<li><code>Function</code>继承 <code>Function</code>本身， <code>Function.prototype</code> 继承 <code>Object.prototype</code></li>
<li><code>Function.prototype</code> 和 <code>Function.__proto__</code> 都指向 <code>Function.prototype</code></li>
<li><code>Object.prototype.__proto__ === null</code> ，说明原型链到 <code>Object.prototype</code>终止</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;prototype原型对象&quot;&gt;&lt;a href=&quot;#prototype原型对象&quot; class=&quot;headerlink&quot; title=&quot;prototype原型对象&quot;&gt;&lt;/a&gt;prototype原型对象&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;每个函数都有一个默认的&lt;code&gt;prototype&lt;/code&gt;属性，其实际上还是一个对象，如果被用在继承中，姑且叫做原型对象&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在构造函数中的&lt;code&gt;prototype&lt;/code&gt;中定义的属性和方法，会被创建的对象所继承下来。举个栗子：&lt;/p&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="原型链" scheme="http://www.poetries.top/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>JS继承的几种方法总结</title>
    <link href="http://www.poetries.top/2016/12/13/js-inherit/"/>
    <id>http://www.poetries.top/2016/12/13/js-inherit/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>由于js不像java那样是真正面向对象的语言，js是基于对象的，它没有类的概念</li>
<li>所以，要想实现继承，可以用js的原型prototype机制或者用apply和call方法去实现。在面向对象的语言中，我们使用类来创建一个自定义对象。然而js中所有事物都是对象，那么用什么办法来创建自定义对象呢？</li>
<li>这就需要用到js的原型：我们可以简单的把prototype看做是一个模版，新创建的自定义对象都是这个模版（prototype）的一个拷贝 （实际上不是拷贝而是链接，只不过这种链接是不可见，新实例化的对象内部有一个看不见的<strong>Proto</strong>指针，指向原型对象）。</li>
</ul>
<a id="more"></a>
<h3 id="1、继承第一种方式：对象冒充"><a href="#1、继承第一种方式：对象冒充" class="headerlink" title="1、继承第一种方式：对象冒充"></a>1、继承第一种方式：对象冒充</h3><hr>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">blogfunction Parent(username)&#123;</div><div class="line">    this.username = username;</div><div class="line">    this.hello = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">      console.log(<span class="string">'hello '</span> + this.username);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">Parent.prototype.sayMorning = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">	console.log(<span class="string">'good morning '</span> + this.username);</div><div class="line">&#125;</div><div class="line">  <span class="keyword">function</span> Child(username,password)&#123;</div><div class="line">    //通过以下3行实现将Parent的属性和方法追加到Child中，从而实现继承</div><div class="line">    //第一步：this.method是作为一个临时的属性，并且指向Parent所指向的对象，</div><div class="line">    //第二步：执行this.method方法，即执行Parent所指向的对象函数</div><div class="line">    //第三步：销毁this.method属性，即此时Child就已经拥有了Parent的所有属性和方法</div><div class="line">    this.method = Parent;</div><div class="line">    this.method(username);//最关键的一行</div><div class="line">    delete this.method;</div><div class="line"></div><div class="line">     this.password = password;</div><div class="line">    this.world = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">      console.log(this.password);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  var parent = new Parent(<span class="string">"zhangsan"</span>);</div><div class="line">  var child = new Child(<span class="string">"lisi"</span>,<span class="string">"123456"</span>);</div><div class="line">  parent.hello();</div><div class="line">  parent.sayMorning();</div><div class="line">  child.hello();</div><div class="line">  child.world();</div></pre></td></tr></table></figure>
<h3 id="2、继承第二种方式：call-方法方式"><a href="#2、继承第二种方式：call-方法方式" class="headerlink" title="2、继承第二种方式：call()方法方式"></a>2、继承第二种方式：call()方法方式</h3><hr>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Parent(username)&#123;</div><div class="line">    this.username = username;</div><div class="line">    this.hello = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">      console.log(this.username);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">Parent.prototype.sayMorning = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">		console.log(<span class="string">'good morning '</span> + this.username);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">  <span class="keyword">function</span> Child(username,password)&#123;</div><div class="line">    Parent.call(this,username);</div><div class="line"></div><div class="line">    this.password = password;</div><div class="line">    this.world = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">      console.log(this.password);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line">  var parent = new Parent(<span class="string">"zhangsan"</span>);</div><div class="line">  var child = new Child(<span class="string">"lisi"</span>,<span class="string">"123456"</span>);</div><div class="line">  parent.hello();</div><div class="line">  parent.sayMorning();</div><div class="line">  child.hello();</div><div class="line">  child.world();</div><div class="line">// child.sayMorning();  通过prototype 添加的方法和属性，不能用来继承</div></pre></td></tr></table></figure>
<h3 id="3、继承的第三种方式：apply-方法方式"><a href="#3、继承的第三种方式：apply-方法方式" class="headerlink" title="3、继承的第三种方式：apply()方法方式"></a>3、继承的第三种方式：apply()方法方式</h3><hr>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Parent(username)&#123;</div><div class="line">    this.username = username;</div><div class="line">    this.hello = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">      console.log(this.username);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">	Parent.prototype.sayMorning = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">		console.log(<span class="string">'good morning '</span> + this.username);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">  <span class="keyword">function</span> Child(username,password)&#123;</div><div class="line">    Parent.apply(this,new Array(username));</div><div class="line"></div><div class="line">    this.password = password;</div><div class="line">    this.world = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">      console.log(this.password);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">var parent = new Parent(<span class="string">"zhangsan"</span>);</div><div class="line">  var child = new Child(<span class="string">"lisi"</span>,<span class="string">"123456"</span>);</div><div class="line">  parent.hello();</div><div class="line">  parent.sayMorning();</div><div class="line">  child.hello();</div><div class="line">  child.world();</div><div class="line">// child.sayMorning(); 通过prototype 添加的方法和属性，不能用来继承</div></pre></td></tr></table></figure>
<h3 id="4、继承的第四种方式：原型链方式，即子类通过prototype将所有在父类中通过prototype追加的属性和方法都追加到Child，从而实现了继承"><a href="#4、继承的第四种方式：原型链方式，即子类通过prototype将所有在父类中通过prototype追加的属性和方法都追加到Child，从而实现了继承" class="headerlink" title="4、继承的第四种方式：原型链方式，即子类通过prototype将所有在父类中通过prototype追加的属性和方法都追加到Child，从而实现了继承"></a>4、继承的第四种方式：原型链方式，即子类通过prototype将所有在父类中通过prototype追加的属性和方法都追加到Child，从而实现了继承</h3><hr>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">Person</span></span>()&#123;</div><div class="line">  &#125;</div><div class="line">  Person.prototype.hello = <span class="string">"hello"</span>;</div><div class="line">  Person.prototype.sayHello = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    console.log(this.hello);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">function</span> <span class="function"><span class="title">Child</span></span>()&#123;</div><div class="line">  &#125;</div><div class="line">  Child.prototype = new Person();//这行的作用是：将Parent中将所有通过prototype追加的属性和方法都追加到Child，从而实现了继承</div><div class="line">  Child.prototype.world = <span class="string">"world"</span>;</div><div class="line">  Child.prototype.sayWorld = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    console.log(this.world);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  var c = new Child();</div><div class="line">  c.sayHello();</div><div class="line">  c.sayWorld();</div><div class="line">通过prototype 添加的方法和属性，不能用来继承</div></pre></td></tr></table></figure>
<h3 id="5、继承的第五种方式：混合方式-混合了call或者apply方式、原型链方式"><a href="#5、继承的第五种方式：混合方式-混合了call或者apply方式、原型链方式" class="headerlink" title="5、继承的第五种方式：混合方式, 混合了call或者apply方式、原型链方式"></a>5、继承的第五种方式：混合方式, 混合了call或者apply方式、原型链方式</h3><hr>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Parent(hello)&#123;</div><div class="line">    this.hello = hello;</div><div class="line">  &#125;</div><div class="line">  Parent.prototype.sayHello = <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    console.log(this.hello);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">function</span> Child(hello,world)&#123;</div><div class="line">    Parent.call(this,hello);//将父类的属性继承过来</div><div class="line">    this.world = world;//新增一些属性</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  Child.prototype = new Parent();//将父类的方法继承过来</div><div class="line"></div><div class="line">  Child.prototype.sayWorld = <span class="function"><span class="title">function</span></span>()&#123;//新增一些方法</div><div class="line">    console.log(this.world);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  var c = new Child(<span class="string">"zhangsan"</span>,<span class="string">"lisi"</span>);</div><div class="line">  c.sayHello();</div><div class="line">  c.sayWorld();</div><div class="line">可以继承通过prototype 添加的方法和属性</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;由于js不像java那样是真正面向对象的语言，js是基于对象的，它没有类的概念&lt;/li&gt;
&lt;li&gt;所以，要想实现继承，可以用js的原型prototype机制或者用apply和call方法去实现。在面向对象的语言中，我们使用类来创建一个自定义对象。然而js中所有事物都是对象，那么用什么办法来创建自定义对象呢？&lt;/li&gt;
&lt;li&gt;这就需要用到js的原型：我们可以简单的把prototype看做是一个模版，新创建的自定义对象都是这个模版（prototype）的一个拷贝 （实际上不是拷贝而是链接，只不过这种链接是不可见，新实例化的对象内部有一个看不见的&lt;strong&gt;Proto&lt;/strong&gt;指针，指向原型对象）。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="继承" scheme="http://www.poetries.top/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>JS 中的事件绑定、事件监听、事件委托</title>
    <link href="http://www.poetries.top/2016/12/13/js-event-listener/"/>
    <id>http://www.poetries.top/2016/12/13/js-event-listener/</id>
    <published>2016-12-13T06:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h3 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h3><hr>
<ul>
<li>要想让 <code>JavaScript</code>对用户的操作作出响应，首先要对 <code>DOM</code> 元素绑定事件处理函数。所谓事件处理函数，就是处理用户操作的函数，不同的操作对应不同的名称</li>
</ul>
<a id="more"></a>
<ul>
<li><p>在<code>JavaScript</code>中，有三种常用的绑定事件的方法</p>
<ul>
<li>在<code>DOM</code>元素中直接绑定；</li>
<li>在<code>JavaScript</code>代码中绑定；</li>
<li>绑定事件监听函数</li>
</ul>
</li>
</ul>
<h4 id="在DOM中直接绑定事件"><a href="#在DOM中直接绑定事件" class="headerlink" title="在DOM中直接绑定事件"></a>在<code>DOM</code>中直接绑定事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; onclick=&quot;hello()&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">function hello()&#123;</div><div class="line">  alert(&quot;hello world!&quot;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h4 id="在JavaScript代码中绑定事件"><a href="#在JavaScript代码中绑定事件" class="headerlink" title="在JavaScript代码中绑定事件"></a>在<code>JavaScript</code>代码中绑定事件</h4><ul>
<li>在<code>JavaScript</code>代码中（即script标签内）绑定事件可以使<code>JavaScript</code>代码与<code>HTML</code>标签分离，文档结构清晰，便于管理和开发</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;btn&quot;).onclick = function()&#123;</div><div class="line">  alert(&quot;hello world!&quot;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h4 id="使用事件监听绑定事件"><a href="#使用事件监听绑定事件" class="headerlink" title="使用事件监听绑定事件"></a>使用事件监听绑定事件</h4><ul>
<li>关于事件监听，W3C规范中定义了3个事件阶段，依次是捕获阶段、目标阶段、冒泡阶段</li>
<li>起初<code>Netscape</code>制定了<code>JavaScript</code>的一套事件驱动机制（即事件捕获）。随即<code>IE</code>也推出了自己的一套事件驱动机制（即事件冒泡）。最后<code>W3C</code>规范了两种事件机制，分为捕获阶段、目标阶段、冒泡阶段。IE8以前IE一直坚持自己的事件机制（前端人员一直头痛的兼容性问题），<code>IE9</code>以后<code>IE</code>也支持了W3C规范</li>
</ul>
<p><strong>W3C规范</strong></p>
<ul>
<li>语法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.addEventListener(event, function, useCapture)</div></pre></td></tr></table></figure>
<ul>
<li><code>event</code> : （必需）事件名，支持所有<code>DOM</code>事件。</li>
<li><code>function</code>：（必需）指定要事件触发时执行的函数。</li>
<li><p><code>useCapture</code>：（可选）指定事件是否在捕获或冒泡阶段执行。<code>true</code>，捕获。<code>false</code>，冒泡。默认<code>false</code></p>
</li>
<li><p>注：<code>IE8</code> 以下不支持</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn1&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;btn1&quot;).addEventListener(&quot;click&quot;,hello);</div><div class="line">function hello()&#123;</div><div class="line">  alert(&quot;hello world!&quot;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><strong>IE标准</strong></p>
<ul>
<li>语法：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.attachEvent(event, function)</div></pre></td></tr></table></figure>
<ul>
<li><code>event</code>：（必需）事件类型。需加“on“，例如：<code>onclick</code>。</li>
<li><code>function</code>：（必需）指定要事件触发时执行的函数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn2&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">document.getElementById(&quot;btn2&quot;).attachEvent(&quot;onclick&quot;,hello);</div><div class="line">function hello()&#123;</div><div class="line">  alert(&quot;hello world!&quot;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h4 id="事件监听的优点"><a href="#事件监听的优点" class="headerlink" title="事件监听的优点"></a>事件监听的优点</h4><ul>
<li>可以绑定多个事件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn3&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var btn3 = document.getElementById(&quot;btn3&quot;);</div><div class="line">btn3.onclick = function()&#123;</div><div class="line">  alert(&quot;hello 1&quot;); //不执行</div><div class="line">&#125;</div><div class="line">btn3.onclick = function()&#123;</div><div class="line">  alert(&quot;hello 2&quot;); //执行</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>常规的事件绑定只执行最后绑定的事件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn4&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var btn4 = document.getElementById(&quot;btn4&quot;);</div><div class="line">btn4.addEventListener(&quot;click&quot;,hello1);</div><div class="line">btn4.addEventListener(&quot;click&quot;,hello2);</div><div class="line"></div><div class="line">function hello1()&#123;</div><div class="line">  alert(&quot;hello 1&quot;);</div><div class="line">&#125;</div><div class="line">function hello2()&#123;</div><div class="line">  alert(&quot;hello 2&quot;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>两个事件都执行了</p>
<ul>
<li>可以解除相应的绑定</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn5&quot;&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var btn5 = document.getElementById(&quot;btn5&quot;);</div><div class="line">btn5.addEventListener(&quot;click&quot;,hello1);//执行了</div><div class="line">btn5.addEventListener(&quot;click&quot;,hello2);//不执行</div><div class="line">btn5.removeEventListener(&quot;click&quot;,hello2);</div><div class="line"></div><div class="line">function hello1()&#123;</div><div class="line">  alert(&quot;hello 1&quot;);</div><div class="line">&#125;</div><div class="line">function hello2()&#123;</div><div class="line">  alert(&quot;hello 2&quot;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>封装事件监听</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn5&quot;&gt;</div><div class="line"></div><div class="line">//绑定监听事件</div><div class="line">function addEventHandler(target,type,fn)&#123;</div><div class="line">  if(target.addEventListener)&#123;</div><div class="line">    target.addEventListener(type,fn);</div><div class="line">  &#125;else&#123;</div><div class="line">    target.attachEvent(&quot;on&quot;+type,fn);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//移除监听事件</div><div class="line">function removeEventHandler(target,type,fn)&#123;</div><div class="line">  if(target.removeEventListener)&#123;</div><div class="line">    target.removeEventListener(type,fn);</div><div class="line">  &#125;else&#123;</div><div class="line">    target.detachEvent(&quot;on&quot;+type,fn);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//测试</div><div class="line">var btn5 = document.getElementById(&quot;btn5&quot;);</div><div class="line">addEventHandler(btn5,&quot;click&quot;,hello1);//添加事件hello1</div><div class="line">addEventHandler(btn5,&quot;click&quot;,hello2);//添加事件hello2</div><div class="line">removeEventHandler(btn5,&quot;click&quot;,hello1);//移除事件hello1</div></pre></td></tr></table></figure>
<h4 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h4><ul>
<li>事件委托就是利用冒泡的原理，把事件加到父元素或祖先元素上，触发执行效果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot; value=&quot;click me&quot; id=&quot;btn6&quot;&gt;</div><div class="line"></div><div class="line">var btn6 = document.getElementById(&quot;btn6&quot;);</div><div class="line">document.onclick = function(event)&#123;</div><div class="line">  event = event || window.event;</div><div class="line">  var target = event.target || event.srcElement;</div><div class="line">  if(target == btn6)&#123;</div><div class="line">    alert(btn5.value);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="事件委托优点"><a href="#事件委托优点" class="headerlink" title="事件委托优点"></a>事件委托优点</h5><ul>
<li>提高JavaScript性能。事件委托可以显著的提高事件的处理速度，减少内存的占用</li>
<li>传统写法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">&lt;ul id=&quot;list&quot;&gt;</div><div class="line">  &lt;li id=&quot;item1&quot; &gt;item1&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item2&quot; &gt;item2&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item3&quot; &gt;item3&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var item1 = document.getElementById(&quot;item1&quot;);</div><div class="line">var item2 = document.getElementById(&quot;item2&quot;);</div><div class="line">var item3 = document.getElementById(&quot;item3&quot;);</div><div class="line"></div><div class="line">item1.onclick = function()&#123;</div><div class="line">  alert(&quot;hello item1&quot;);</div><div class="line">&#125;</div><div class="line">item2.onclick = function()&#123;</div><div class="line">  alert(&quot;hello item2&quot;);</div><div class="line">&#125;</div><div class="line">item3.onclick = function()&#123;</div><div class="line">  alert(&quot;hello item3&quot;);</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>事件委托</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;ul id=&quot;list&quot;&gt;</div><div class="line">  &lt;li id=&quot;item1&quot; &gt;item1&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item2&quot; &gt;item2&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item3&quot; &gt;item3&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var item1 = document.getElementById(&quot;item1&quot;);</div><div class="line">var item2 = document.getElementById(&quot;item2&quot;);</div><div class="line">var item3 = document.getElementById(&quot;item3&quot;);</div><div class="line"></div><div class="line">document.addEventListener(&quot;click&quot;,function(event)&#123;</div><div class="line">  var target = event.target;</div><div class="line">  if(target == item1)&#123;</div><div class="line">    alert(&quot;hello item1&quot;);</div><div class="line">  &#125;else if(target == item2)&#123;</div><div class="line">    alert(&quot;hello item2&quot;);</div><div class="line">  &#125;else if(target == item3)&#123;</div><div class="line">    alert(&quot;hello item3&quot;);</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>动态的添加DOM元素，不需要因为元素的改动而修改事件绑定</li>
<li>传统写法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;ul id=&quot;list&quot;&gt;</div><div class="line">  &lt;li id=&quot;item1&quot; &gt;item1&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item2&quot; &gt;item2&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item3&quot; &gt;item3&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var list = document.getElementById(&quot;list&quot;);</div><div class="line"></div><div class="line">var item = list.getElementsByTagName(&quot;li&quot;);</div><div class="line">for(var i=0;i&lt;item.length;i++)&#123;</div><div class="line">  (function(i)&#123;</div><div class="line">    item[i].onclick = function()&#123;</div><div class="line">      alert(item[i].innerHTML);</div><div class="line">    &#125;</div><div class="line">  &#125;)(i)</div><div class="line">&#125;</div><div class="line"></div><div class="line">var node=document.createElement(&quot;li&quot;);</div><div class="line">var textnode=document.createTextNode(&quot;item4&quot;);</div><div class="line">node.appendChild(textnode);</div><div class="line">list.appendChild(node);</div><div class="line"></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>点击item1到item3都有事件响应，但是点击item4时，没有事件响应。说明传统的事件绑定无法对动态添加的元素而动态的添加事件。</li>
<li>事件委托</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;ul id=&quot;list&quot;&gt;</div><div class="line">  &lt;li id=&quot;item1&quot; &gt;item1&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item2&quot; &gt;item2&lt;/li&gt;</div><div class="line">  &lt;li id=&quot;item3&quot; &gt;item3&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var list = document.getElementById(&quot;list&quot;);</div><div class="line"></div><div class="line">document.addEventListener(&quot;click&quot;,function(event)&#123;</div><div class="line">  var target = event.target;</div><div class="line">  if(target.nodeName == &quot;LI&quot;)&#123;</div><div class="line">    alert(target.innerHTML);</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line">var node=document.createElement(&quot;li&quot;);</div><div class="line">var textnode=document.createTextNode(&quot;item4&quot;);</div><div class="line">node.appendChild(textnode);</div><div class="line">list.appendChild(node);</div><div class="line"></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<ul>
<li>当点击item4时，item4有事件响应。说明事件委托可以为新添加的DOM元素动态的添加事件</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;事件绑定&quot;&gt;&lt;a href=&quot;#事件绑定&quot; class=&quot;headerlink&quot; title=&quot;事件绑定&quot;&gt;&lt;/a&gt;事件绑定&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;要想让 &lt;code&gt;JavaScript&lt;/code&gt;对用户的操作作出响应，首先要对 &lt;code&gt;DOM&lt;/code&gt; 元素绑定事件处理函数。所谓事件处理函数，就是处理用户操作的函数，不同的操作对应不同的名称&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="事件" scheme="http://www.poetries.top/tags/%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>JS常用的内置函数整理</title>
    <link href="http://www.poetries.top/2016/12/13/js-inner-func/"/>
    <id>http://www.poetries.top/2016/12/13/js-inner-func/</id>
    <published>2016-12-13T06:50:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h3 id="String字符串对象"><a href="#String字符串对象" class="headerlink" title="String字符串对象"></a>String字符串对象</h3><ul>
<li><code>length</code> 属性 长度</li>
<li><code>concat(String)</code> 连接两个或更多个字符</li>
<li><code>indexOf(string)</code> 返回出现字符的位置</li>
<li><code>substr(num1,[num2])</code>截取字符串</li>
<li><code>toLowerCase()</code>转成小写</li>
<li><code>toUpperCase()</code>转成大写</li>
<li><code>replace(str1,str2)</code> 字符串替换</li>
</ul>
<a id="more"></a>
<h3 id="Date日期"><a href="#Date日期" class="headerlink" title="Date日期"></a>Date日期</h3><ul>
<li><code>getYear()</code>返回年份（<code>2</code>位或<code>4</code>为）</li>
<li><code>getFullYear()</code>返回年份(<code>4</code>位)</li>
<li><code>getMonth()</code>返回月份<code>0-11</code></li>
<li><code>getDate()</code>返回日期<code>1-31</code></li>
<li><code>getDay()</code>返回星期数<code>0-6</code></li>
<li><code>getHours()</code>返回小时数<code>0-23</code></li>
<li><code>getMinutes()</code>返回分钟数<code>0-59</code></li>
<li><code>getSeconds()</code>返回秒数<code>0-59</code></li>
<li><code>getMilliseconds()返回毫秒数</code>0-999`</li>
</ul>
<h3 id="Math数学对象"><a href="#Math数学对象" class="headerlink" title="Math数学对象"></a>Math数学对象</h3><ul>
<li><code>cell(数值)</code>大于或等于该数的最小整数</li>
<li><code>floor(数值)</code>小于或等于该数的最大整数</li>
<li><code>min(数值1，数值2)</code>返回最小值</li>
<li><code>max(数值1，数值2)</code>返回最大值</li>
<li><code>pow(数值1，数值2)</code>返回数值1的数值2的次方</li>
<li><code>random()</code>返回随机数<code>0--1</code></li>
<li><code>round(数值)</code>四舍五入</li>
<li><code>sqrt(数值)</code>开平方根</li>
</ul>
<h3 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h3><ul>
<li><code>concat()</code>返回一个由两个数组合并组成的新数组</li>
<li><code>join()</code>返回一个由数组中的所有元素连接在一起的<code>String</code>对象</li>
<li><code>pop()</code>删除数组中的最后一个元素并返回该值</li>
<li><code>push()</code>向数组中添加新元素 返回新长度</li>
<li><code>shift()</code>删除数组中的第一个元素并返回该值</li>
<li><code>unshift</code>返回一个数组，在该数组头部插入指定的元素</li>
<li><code>sort()</code>返回一个元素被排序了的<code>Array</code>对象</li>
<li><code>reverse()</code>返回一个元素反序的<code>Array</code>对象</li>
<li><code>slice()</code>返回数组的一个片段</li>
<li><code>splice()</code>从数组中删除元素</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;String字符串对象&quot;&gt;&lt;a href=&quot;#String字符串对象&quot; class=&quot;headerlink&quot; title=&quot;String字符串对象&quot;&gt;&lt;/a&gt;String字符串对象&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt; 属性 长度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;concat(String)&lt;/code&gt; 连接两个或更多个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;indexOf(string)&lt;/code&gt; 返回出现字符的位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;substr(num1,[num2])&lt;/code&gt;截取字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;转成小写&lt;/li&gt;
&lt;li&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;转成大写&lt;/li&gt;
&lt;li&gt;&lt;code&gt;replace(str1,str2)&lt;/code&gt; 字符串替换&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>MVC、MVP、MVVM之间的关系</title>
    <link href="http://www.poetries.top/2016/12/13/mvc-mvp-mvvm/"/>
    <id>http://www.poetries.top/2016/12/13/mvc-mvp-mvvm/</id>
    <published>2016-12-13T06:35:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、MVC"><a href="#一、MVC" class="headerlink" title="一、MVC"></a>一、MVC</h2><hr>
<h3 id="什么是MVC"><a href="#什么是MVC" class="headerlink" title="什么是MVC"></a>什么是MVC</h3><hr>
<ul>
<li>MVC是一种模式，它将应用分为3个部分：数据（模型）、表现层（视图）、用户交互层（控制器）</li>
<li>一个事件的处理大概是这样<ul>
<li>用户和应用产生交互</li>
<li>控制器的事件处理器被触发</li>
<li>控制器从模型中请求数据，并将其交给视图</li>
<li>视图将数据呈现给用户</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h3 id="模型（数据保存）"><a href="#模型（数据保存）" class="headerlink" title="模型（数据保存）"></a>模型（数据保存）</h3><hr>
<ul>
<li>模型用来存放用户的所有数据对象。比如有一个user模型，用来存放用户列表、他们的属性以及所有和模型有关的逻辑</li>
<li>模型不必知晓视图和控制器的细节，模型只需包含数据以及直接和这些数据相关的逻辑</li>
</ul>
<h3 id="视图（用户界面）"><a href="#视图（用户界面）" class="headerlink" title="视图（用户界面）"></a>视图（用户界面）</h3><hr>
<ul>
<li>视图是呈现给用户的，用户与之产生交互。在JavaScript应用中，视图大都是由HTML、css、JavaScript模板组成的</li>
</ul>
<h3 id="控制器（业务逻辑）"><a href="#控制器（业务逻辑）" class="headerlink" title="控制器（业务逻辑）"></a>控制器（业务逻辑）</h3><hr>
<ul>
<li>控制器是模型和视图之间的纽带。控制器从视图获得事件和输入，对它们进行进行处理，并相应的更新视图。</li>
<li>当页面加载时，控制器会给视图添加事件监听，比如监听表单提交或按钮点击。然后当用户和你的应用产生交互时，控制器中的事件触发器就开始工作了</li>
</ul>
<h3 id="总结一下："><a href="#总结一下：" class="headerlink" title="总结一下："></a>总结一下：</h3><hr>
<ul>
<li><code>Controller</code> 监听 <code>Model</code> 变化，<code>Model</code> 一变，<code>Controller</code> 就会去更新<code>View</code>。</li>
<li><p><code>Controller</code> 监听用户交互，用户点了提交或修改按钮，Controller 就要去更新 Model</p>
</li>
<li><p><code>View</code> 传送指令到 <code>Controller</code></p>
</li>
<li><code>Controller</code> 完成业务逻辑后，要求 <code>Model</code> 改变状态</li>
<li><code>Model</code> 将新的数据发送到 <code>View</code>，用户得到反馈</li>
</ul>
<p>各部分之间的通信方式</p>
<p><img src="http://image.beekka.com/blog/2015/bg2015020105.png" alt=""></p>
<h2 id="互动模式"><a href="#互动模式" class="headerlink" title="互动模式"></a>互动模式</h2><hr>
<ul>
<li>接受用户指令时，MVC 可以分成两种方式。一种是通过 View 接受指令，传递给 Controller</li>
</ul>
<p><img src="http://image.beekka.com/blog/2015/bg2015020106.png" alt=""></p>
<ul>
<li>另一种是直接通过controller接受指令</li>
</ul>
<p><img src="http://image.beekka.com/blog/2015/bg2015020107.png" alt=""></p>
<h2 id="二、MVP"><a href="#二、MVP" class="headerlink" title="二、MVP"></a>二、MVP</h2><hr>
<ul>
<li><code>MVP</code> 模式将 <code>Controller 改名为</code>Presenter`，同时改变了通信方向</li>
</ul>
<p><img src="http://image.beekka.com/blog/2015/bg2015020109.png" alt=""></p>
<ul>
<li>各部分之间的通信，都是双向的。</li>
<li><code>View</code> 与<code>Model</code> 不发生联系，都通过 <code>Presenter</code> 传递。</li>
<li><code>View</code> 非常薄，不部署任何业务逻辑，称为”被动视图”（Passive View），即没有任何主动性，而 Presenter非常厚，所有逻辑都部署在那里</li>
</ul>
<h2 id="三、MVVM"><a href="#三、MVVM" class="headerlink" title="三、MVVM"></a>三、MVVM</h2><hr>
<ul>
<li><code>MVVM</code> 模式将 <code>Presenter</code> 改名为 <code>ViewModel</code>，基本上与 <code>MVP</code> 模式完全一致</li>
<li>唯一的区别是，它采用双向绑定（data-binding）：<code>View</code>的变动，自动反映在 <code>ViewModel</code>，反之亦然</li>
</ul>
<p><img src="http://image.beekka.com/blog/2015/bg2015020110.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、MVC&quot;&gt;&lt;a href=&quot;#一、MVC&quot; class=&quot;headerlink&quot; title=&quot;一、MVC&quot;&gt;&lt;/a&gt;一、MVC&lt;/h2&gt;&lt;hr&gt;
&lt;h3 id=&quot;什么是MVC&quot;&gt;&lt;a href=&quot;#什么是MVC&quot; class=&quot;headerlink&quot; title=&quot;什么是MVC&quot;&gt;&lt;/a&gt;什么是MVC&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;MVC是一种模式，它将应用分为3个部分：数据（模型）、表现层（视图）、用户交互层（控制器）&lt;/li&gt;
&lt;li&gt;一个事件的处理大概是这样&lt;ul&gt;
&lt;li&gt;用户和应用产生交互&lt;/li&gt;
&lt;li&gt;控制器的事件处理器被触发&lt;/li&gt;
&lt;li&gt;控制器从模型中请求数据，并将其交给视图&lt;/li&gt;
&lt;li&gt;视图将数据呈现给用户&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="MVC" scheme="http://www.poetries.top/tags/MVC/"/>
    
  </entry>
  
  <entry>
    <title>Canvas 绘制八大行星</title>
    <link href="http://www.poetries.top/2016/12/02/Canvas-draw-sun/"/>
    <id>http://www.poetries.top/2016/12/02/Canvas-draw-sun/</id>
    <published>2016-12-02T15:50:24.000Z</published>
    <updated>2016-12-14T07:59:53.922Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文链接 <a href="http://blog.poetries.top/2016/12/02/Canvas-draw-sun/" target="_blank" rel="external">http://blog.poetries.top/2016/12/02/Canvas-draw-sun/</a><br>在线演示地址 <a href="http://codepen.io/poetries/pen/KNZLJZ" target="_blank" rel="external">http://codepen.io/poetries/pen/KNZLJZ</a></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"1000"</span> <span class="attr">height</span>=<span class="string">"1000"</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"background:#000;"</span>&gt;</span></div><div class="line">	您的浏览器不支持，请升级浏览器!</div><div class="line"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置2d绘图环境</span></div><div class="line"><span class="keyword">var</span> ctx = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>).getContext(<span class="string">"2d"</span>);</div><div class="line"></div><div class="line"><span class="comment">//轨道</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawTrack</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i++)&#123;</div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.arc(<span class="number">500</span>,<span class="number">500</span>,(i+<span class="number">1</span>) * <span class="number">50</span>,<span class="number">0</span>,<span class="number">360</span>,<span class="literal">false</span>);</div><div class="line">    ctx.strokeStyle = <span class="string">"#fff"</span>;<span class="comment">//设置笔触颜色</span></div><div class="line">    ctx.stroke();</div><div class="line">    ctx.closePath();</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//星球</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">x,y,radius,cycle,sColor,eColor</span>)</span>&#123;</div><div class="line">  <span class="comment">//画出星球需要的属性</span></div><div class="line">  <span class="comment">//星球的坐标点 星球的半径 星球的颜色（开始颜色、结束颜色）</span></div><div class="line">  <span class="comment">//公转周期</span></div><div class="line">  </div><div class="line">  <span class="comment">//星球坐标点</span></div><div class="line">  <span class="keyword">this</span>.x = x;</div><div class="line">  <span class="keyword">this</span>.y = y;</div><div class="line">  <span class="keyword">this</span>.radius = radius;</div><div class="line">  <span class="keyword">this</span>.cycle = cycle;</div><div class="line">  <span class="keyword">this</span>.eColor = eColor;</div><div class="line">  <span class="keyword">this</span>.sColor = sColor;</div><div class="line">  </div><div class="line">  </div><div class="line">  <span class="keyword">this</span>.color = <span class="literal">null</span>;<span class="comment">//渐变颜色空对象</span></div><div class="line">  <span class="keyword">this</span>.time = <span class="number">0</span>;<span class="comment">//设置一个计时器</span></div><div class="line">  </div><div class="line">  <span class="keyword">this</span>.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//save()可以这样理解 原来的画布内容不变 把save（）和restore()之间的内容画好了 在塞进来</span></div><div class="line">    ctx.save();<span class="comment">//保存之前的画布内容</span></div><div class="line">    ctx.translate(<span class="number">500</span>,<span class="number">500</span>);<span class="comment">//重置0,0坐标点</span></div><div class="line">    ctx.rotate(<span class="keyword">this</span>.time * (<span class="number">360</span>/<span class="keyword">this</span>.cycle) * <span class="built_in">Math</span>.PI / <span class="number">180</span>);<span class="comment">//设置旋转角度</span></div><div class="line">    </div><div class="line">    <span class="comment">//画星球</span></div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.arc(<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="keyword">this</span>.radius,<span class="number">0</span>,<span class="number">360</span>,<span class="literal">false</span>);</div><div class="line">    ctx.closePath();</div><div class="line">    </div><div class="line">    <span class="comment">//设置星球的填充颜色</span></div><div class="line">    </div><div class="line">    <span class="keyword">this</span>.color = ctx.createRadialGradient(<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="number">0</span>,<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="keyword">this</span>.radius);</div><div class="line">    <span class="keyword">this</span>.color.addColorStop(<span class="number">0</span>,<span class="keyword">this</span>.sColor);<span class="comment">//渐变颜色开始点</span></div><div class="line">    <span class="keyword">this</span>.color.addColorStop(<span class="number">0</span>,<span class="keyword">this</span>.eColor);<span class="comment">//渐变颜色结束点</span></div><div class="line">    ctx.fillStyle = <span class="keyword">this</span>.color;</div><div class="line">    ctx.fill();<span class="comment">//执行填充命令</span></div><div class="line">    </div><div class="line">    <span class="comment">//填充星球</span></div><div class="line">    </div><div class="line">    </div><div class="line">    ctx.restore();<span class="comment">//恢复之前保存的画布内容</span></div><div class="line">    <span class="keyword">this</span>.time +=<span class="number">1</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"> <span class="comment">//创建一个太阳对象的构造函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sun</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">0</span>,<span class="string">"#F00"</span>,<span class="string">"#f90"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//创建一个水星的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Mercury</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-50</span>,<span class="number">10</span>,<span class="number">87.70</span>,<span class="string">"#A69697"</span>,<span class="string">"#5C3E40"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//创建一个金星的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Venus</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-100</span>,<span class="number">10</span>,<span class="number">224.701</span>,<span class="string">"#C4BBAC"</span>,<span class="string">"#1F1315"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//创建一个地球的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Earth</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-150</span>,<span class="number">10</span>,<span class="number">365.224</span>,<span class="string">"#78B1E8"</span>,<span class="string">"#050C12"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//创建一个火星的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Mars</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-200</span>,<span class="number">10</span>,<span class="number">686.98</span>,<span class="string">"#CEC9B6"</span>,<span class="string">"#76422D"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//创建一个木星的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Jupiter</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-250</span>,<span class="number">10</span>,<span class="number">4332.589</span>,<span class="string">"#C0A48E"</span>,<span class="string">"#322222"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//创建一个土星的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Saturn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-300</span>,<span class="number">10</span>,<span class="number">10759.5</span>,<span class="string">"#F7F9E3"</span>,<span class="string">"#5C4533"</span>);</div><div class="line">&#125;</div><div class="line"> <span class="comment">//创建一个天王星的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Uranus</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-350</span>,<span class="number">10</span>,<span class="number">30799.095</span>,<span class="string">"#A7E1E5"</span>,<span class="string">"#19243A"</span>);</div><div class="line">&#125;</div><div class="line"><span class="comment">//创建一个海王星的对象构造方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Neptune</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  Star.call(<span class="keyword">this</span>,<span class="number">0</span>,<span class="number">-400</span>,<span class="number">10</span>,<span class="number">60152</span>,<span class="string">"#0661B2"</span>,<span class="string">"#1E3B73"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"> <span class="comment">//创建太阳对象实例</span></div><div class="line"><span class="keyword">var</span> sun=<span class="keyword">new</span> Sun();</div><div class="line"></div><div class="line"><span class="comment">//创建水星对象实例</span></div><div class="line"><span class="keyword">var</span> water=<span class="keyword">new</span> Mercury();</div><div class="line"></div><div class="line"><span class="comment">//创建金星对象实例</span></div><div class="line"><span class="keyword">var</span> gold=<span class="keyword">new</span> Venus();</div><div class="line"></div><div class="line"><span class="comment">//创建一个地球对象实例</span></div><div class="line"><span class="keyword">var</span> diqiu=<span class="keyword">new</span> Earth();</div><div class="line"></div><div class="line"><span class="comment">//创建一个火星对象实例</span></div><div class="line"><span class="keyword">var</span> fire=<span class="keyword">new</span> Mars();</div><div class="line"></div><div class="line"><span class="comment">//创建一个木星对象实例</span></div><div class="line"><span class="keyword">var</span> wood=<span class="keyword">new</span> Jupiter();</div><div class="line"></div><div class="line"><span class="comment">//创建一个土星对象实例</span></div><div class="line"><span class="keyword">var</span> soil=<span class="keyword">new</span> Saturn();</div><div class="line"></div><div class="line"><span class="comment">//创建一个天王星对象实例</span></div><div class="line"><span class="keyword">var</span> god=<span class="keyword">new</span> Uranus();</div><div class="line"></div><div class="line"><span class="comment">//创建一个海王星对象实例</span></div><div class="line"><span class="keyword">var</span> sea=<span class="keyword">new</span> Neptune();</div><div class="line"></div><div class="line"></div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>)</span>&#123;</div><div class="line">   <span class="comment">//清除画布</span></div><div class="line">   ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1000</span>,<span class="number">1000</span>);</div><div class="line">   <span class="comment">//画出轨道</span></div><div class="line">   drawTrack();</div><div class="line">   <span class="comment">//画出每个星球</span></div><div class="line">   sun.draw();</div><div class="line">   water.draw();</div><div class="line">   gold.draw();</div><div class="line">   diqiu.draw();</div><div class="line">   fire.draw();</div><div class="line">   wood.draw();</div><div class="line">   soil.draw();</div><div class="line">   god.draw();</div><div class="line">   sea.draw();</div><div class="line"> &#125;</div><div class="line"></div><div class="line"><span class="comment">//使让星球进行运动</span></div><div class="line">setInterval(move,<span class="number">10</span>);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文链接 &lt;a href=&quot;http://blog.poetries.top/2016/12/02/Canvas-draw-sun/&quot;&gt;http://blog.poetries.top/2016/12/02/Canvas-draw-sun/&lt;/a&gt;&lt;br&gt;在线演示地址 &lt;a href=&quot;http://codepen.io/poetries/pen/KNZLJZ&quot;&gt;http://codepen.io/poetries/pen/KNZLJZ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1000&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1000&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;background:#000;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	您的浏览器不支持，请升级浏览器!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="HTML5" scheme="http://www.poetries.top/tags/HTML5/"/>
    
      <category term="Canvas" scheme="http://www.poetries.top/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>Canvas 绘制粒子动画背景</title>
    <link href="http://www.poetries.top/2016/12/02/draw-particle-animator-with-canvas/"/>
    <id>http://www.poetries.top/2016/12/02/draw-particle-animator-with-canvas/</id>
    <published>2016-12-02T12:30:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span>您的浏览器不支持，请升级最新的版本!<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">	<span class="attribute">margin</span>:<span class="number">0px</span>;</div><div class="line">	<span class="attribute">padding</span>:<span class="number">0px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">body</span>&#123;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#000</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">canvas</span>&#123;</div><div class="line">	<span class="attribute">position</span>:absolute;</div><div class="line">	<span class="attribute">width</span>:<span class="number">100%</span>;</div><div class="line">	<span class="attribute">height</span>:<span class="number">100%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.requestAnimFrame = ( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="built_in">window</span>.requestAnimationFrame ||</div><div class="line">					<span class="built_in">window</span>.webkitRequestAnimationFrame ||</div><div class="line">					<span class="built_in">window</span>.mozRequestAnimationFrame ||</div><div class="line">					<span class="function"><span class="keyword">function</span>(<span class="params"> callback </span>) </span>&#123;</div><div class="line">						<span class="built_in">window</span>.setTimeout( callback, <span class="number">1000</span> / <span class="number">60</span> );</div><div class="line">					&#125;;</div><div class="line">		&#125;)();</div><div class="line">		<span class="keyword">var</span> can = <span class="built_in">document</span>.getElementById(<span class="string">"canvas"</span>);</div><div class="line">		<span class="keyword">var</span> cxt = can.getContext(<span class="string">"2d"</span>);</div><div class="line">		can.width = <span class="built_in">window</span>.innerWidth;</div><div class="line">		can.height = <span class="built_in">window</span>.innerHeight;</div><div class="line">		cxt.lineWidth = <span class="number">0.3</span>;</div><div class="line">		<span class="comment">//初始链接线条显示位置</span></div><div class="line">		<span class="keyword">var</span> mousePosition = &#123;</div><div class="line">			<span class="attr">x</span> : <span class="number">30</span>*can.width/<span class="number">100</span>,</div><div class="line">			<span class="attr">y</span> : <span class="number">30</span>*can.height/<span class="number">100</span></div><div class="line">		&#125;</div><div class="line">		<span class="comment">//圆形粒子对象参数</span></div><div class="line">		<span class="keyword">var</span> dots = &#123;</div><div class="line">			<span class="attr">n</span> : <span class="number">500</span>,<span class="comment">//圆形粒子个数</span></div><div class="line">			distance : <span class="number">50</span>,<span class="comment">//圆形粒子之间的距离</span></div><div class="line">			d_radius : <span class="number">100</span>,<span class="comment">//粒子距离鼠标点的距离</span></div><div class="line">			array : []<span class="comment">//保存n个圆形粒子对象</span></div><div class="line">		&#125;</div><div class="line">		<span class="comment">//创建随即颜色值</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">colorValue</span>(<span class="params">min</span>)</span>&#123;</div><div class="line">			<span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">255</span> + min);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">createColorStyle</span>(<span class="params">r,g,b</span>)</span>&#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"rgba("</span>+r+<span class="string">","</span>+g+<span class="string">","</span>+b+<span class="string">", 1)"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//混合两个圆形粒子的颜色</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">mixConnect</span>(<span class="params">c1,r1,c2,r2</span>)</span>&#123;<span class="comment">//圆的颜色 半径</span></div><div class="line">			<span class="keyword">return</span> (c1*r1+c2*r2)/(r1+r2);</div><div class="line">		&#125;;</div><div class="line">		<span class="comment">//生成线条的颜色</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">lineColor</span>(<span class="params">dot1,dot2</span>)</span>&#123;<span class="comment">//获取具体的圆的颜色再计算</span></div><div class="line">			<span class="keyword">var</span> color1 = dot1.color,</div><div class="line">				color2 = dot2.color;</div><div class="line">			<span class="keyword">var</span> r = mixConnect(color1.r,dot1.radius,color2.r,dot2.radius);</div><div class="line">			<span class="keyword">var</span> g = mixConnect(color1.g,dot1.radius,color2.g,dot2.radius);</div><div class="line">			<span class="keyword">var</span> b = mixConnect(color1.b,dot1.radius,color2.b,dot2.radius);</div><div class="line">			<span class="keyword">return</span> createColorStyle(<span class="built_in">Math</span>.floor(r),<span class="built_in">Math</span>.floor(g),<span class="built_in">Math</span>.floor(b));</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//生成圆形粒子的颜色对象</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">Color</span>(<span class="params">min</span>)</span>&#123;</div><div class="line">			min = min || <span class="number">0</span>;</div><div class="line">			<span class="keyword">this</span>.r = colorValue(min);</div><div class="line">			<span class="keyword">this</span>.g = colorValue(min);</div><div class="line">			<span class="keyword">this</span>.b = colorValue(min);</div><div class="line">			<span class="keyword">this</span>.style = createColorStyle(<span class="keyword">this</span>.r,<span class="keyword">this</span>.g,<span class="keyword">this</span>.b);</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//创建圆形粒子对象</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">Dot</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="comment">//圆形粒子随机圆心坐标点</span></div><div class="line">			<span class="keyword">this</span>.x = <span class="built_in">Math</span>.random()*can.width;</div><div class="line">			<span class="keyword">this</span>.y = <span class="built_in">Math</span>.random()*can.height;</div><div class="line">			<span class="comment">//x y 方向运动的速度值</span></div><div class="line">			<span class="keyword">this</span>.vx = <span class="number">-0.5</span> + <span class="built_in">Math</span>.random();</div><div class="line">			<span class="keyword">this</span>.vy = <span class="number">-0.5</span> + <span class="built_in">Math</span>.random();</div><div class="line">			<span class="keyword">this</span>.radius = <span class="built_in">Math</span>.random()*<span class="number">5</span>;</div><div class="line">			<span class="comment">//this.color = "#ff3333";</span></div><div class="line">			<span class="keyword">this</span>.color = <span class="keyword">new</span> Color();</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//绘制出圆形粒子</span></div><div class="line">		Dot.prototype.draw = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			cxt.beginPath();</div><div class="line">			cxt.fillStyle = <span class="keyword">this</span>.color.style;</div><div class="line">			cxt.arc(<span class="keyword">this</span>.x,<span class="keyword">this</span>.y,<span class="keyword">this</span>.radius,<span class="number">0</span>,<span class="built_in">Math</span>.PI*<span class="number">2</span>,<span class="literal">false</span>);</div><div class="line">			cxt.fill();</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//添加圆形粒子</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;dots.n ;i++ )</div><div class="line">			&#123;</div><div class="line">				dots.array.push(<span class="keyword">new</span> Dot());</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//绘制出圆形粒子</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">drawDots</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;dots.n ;i++ )</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">var</span> dot = dots.array[i];</div><div class="line">				dot.draw();</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="comment">//drawDots();</span></div><div class="line">		<span class="comment">//移动</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">moveDots</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;dots.n ;i++ )&#123;</div><div class="line">				<span class="keyword">var</span> dot = dots.array[i];</div><div class="line">				<span class="comment">//当圆形粒子对象碰壁的时候就反弹回来</span></div><div class="line">				<span class="keyword">if</span> (dot.y &lt; <span class="number">0</span> || dot.y &gt; can.height)</div><div class="line">				&#123;</div><div class="line">					dot.vx = dot.vx;</div><div class="line">					dot.vy = -dot.vy;</div><div class="line">				&#125;<span class="keyword">else</span> <span class="keyword">if</span> (dot.x &lt; <span class="number">0</span> || dot.x &gt; can.width)</div><div class="line">				&#123;</div><div class="line">					dot.vx = -dot.vx;</div><div class="line">					dot.vy = dot.vy;</div><div class="line">				&#125;</div><div class="line">				<span class="comment">//给圆形粒子圆心坐标加上速度值移动圆形粒子</span></div><div class="line">				dot.x += dot.vx;</div><div class="line">				dot.y += dot.vy;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//链接粒子对象</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">connectDots</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;dots.n ; i++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span> ( <span class="keyword">var</span> j=<span class="number">0</span>;j&lt;dots.n ; j++)</div><div class="line">				&#123;</div><div class="line">					iDot = dots.array[i];</div><div class="line">					jDot = dots.array[j];</div><div class="line">					<span class="keyword">if</span> ((iDot.x - jDot.x) &lt; dots.distance &amp;&amp; (iDot.y - jDot.y) &lt; dots.distance &amp;&amp; (iDot.x - jDot.x) &gt; -dots.distance &amp;&amp; (iDot.y - jDot.y) &gt; -dots.distance)</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">if</span> ((iDot.x - mousePosition.x) &lt; dots.d_radius &amp;&amp; (iDot.y - mousePosition.y) &lt; dots.d_radius &amp;&amp; (iDot.x - mousePosition.x) &gt; -dots.d_radius &amp;&amp; (iDot.y - mousePosition.y) &gt; -dots.d_radius)</div><div class="line">						&#123;</div><div class="line">							cxt.beginPath();</div><div class="line">							<span class="comment">//cxt.strokeStyle = "yellow";</span></div><div class="line">							cxt.strokeStyle = lineColor(iDot,jDot);</div><div class="line">							cxt.moveTo(iDot.x,iDot.y);</div><div class="line">							cxt.lineTo(jDot.x,jDot.y);</div><div class="line">							cxt.closePath();</div><div class="line">							cxt.stroke();</div><div class="line">						&#125;</div><div class="line">						</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		createCircle();</div><div class="line">		<span class="comment">//让圆形粒子不断的移动</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">animateDots</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			cxt.clearRect(<span class="number">0</span>,<span class="number">0</span>,can.width,can.height);</div><div class="line">			moveDots();</div><div class="line">			connectDots()</div><div class="line">			drawDots();</div><div class="line">			requestAnimFrame(animateDots);</div><div class="line">		&#125;</div><div class="line">		animateDots();</div><div class="line">		</div><div class="line">		can.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</div><div class="line">			<span class="keyword">var</span> ev = ev || <span class="built_in">window</span>.event;</div><div class="line">			mousePosition.x = ev.pageX;</div><div class="line">			mousePosition.y = ev.pageY;</div><div class="line">		&#125;</div><div class="line">		can.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			mousePosition.x = can.width/<span class="number">2</span>;</div><div class="line">			mousePosition.y = can.height/<span class="number">2</span>;</div><div class="line">		&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;您的浏览器不支持，请升级最新的版本!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="HTML5" scheme="http://www.poetries.top/tags/HTML5/"/>
    
      <category term="Canvas" scheme="http://www.poetries.top/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>Canvas 绘制动画时钟</title>
    <link href="http://www.poetries.top/2016/12/02/Canvas-draw-clock/"/>
    <id>http://www.poetries.top/2016/12/02/Canvas-draw-clock/</id>
    <published>2016-12-02T11:35:24.000Z</published>
    <updated>2016-12-14T07:59:53.922Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>在线演示地址 <a href="http://codepen.io/poetries/pen/gLoQzo" target="_blank" rel="external">http://codepen.io/poetries/pen/gLoQzo</a></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"clock"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"500"</span>&gt;</span></div><div class="line">    您的浏览器不支持此效果展示，请升级最新版本</div><div class="line"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> clock = <span class="built_in">document</span>.getElementById(<span class="string">"clock"</span>);</div><div class="line"><span class="keyword">var</span> context = clock.getContext(<span class="string">"2d"</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawClock</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  context.clearRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">500</span>,<span class="number">500</span>);<span class="comment">//清空画布 每画一次 都要清除前面的在重新画</span></div><div class="line">  <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">  <span class="keyword">var</span> sec = now.getSeconds();</div><div class="line">  <span class="keyword">var</span> min = now.getMinutes();</div><div class="line">  <span class="keyword">var</span> hour = now.getHours();</div><div class="line"></div><div class="line">  <span class="comment">//小时必须获取浮点类型（小时 + 分数转换成的小时）</span></div><div class="line">  hour = hour + min / <span class="number">60</span>;</div><div class="line">  </div><div class="line">  <span class="comment">//将24小时进制转换为12小时 不然就是 这样的形式不好了 18:30:10</span></div><div class="line">  hour = hour &gt; <span class="number">12</span> ? hour - <span class="number">12</span> : hour;</div><div class="line"></div><div class="line">  </div><div class="line">  <span class="comment">//表盘</span></div><div class="line"></div><div class="line">  context.lineWidth = <span class="number">10</span>;</div><div class="line">  context.strokeStyle = <span class="string">"greenblue"</span></div><div class="line">  context.beginPath();</div><div class="line">  context.arc(<span class="number">250</span>,<span class="number">250</span>,<span class="number">200</span>,<span class="number">0</span>,<span class="number">360</span>,<span class="literal">false</span>);<span class="comment">//true 顺时针</span></div><div class="line">  context.closePath();</div><div class="line">  context.stroke();</div><div class="line"></div><div class="line">  <span class="comment">//时刻度</span></div><div class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)&#123;</div><div class="line">    context.save();<span class="comment">//保存当前状态</span></div><div class="line">    context.lineWidth = <span class="number">7</span>;<span class="comment">//时针粗细</span></div><div class="line">    context.strokeStyle = <span class="string">"#000"</span>;<span class="comment">//时针颜色</span></div><div class="line">    context.translate(<span class="number">250</span>,<span class="number">250</span>);<span class="comment">//设置0,0点</span></div><div class="line">    context.rotate(i * <span class="number">30</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>);<span class="comment">//获得每次旋转之后的角度 设置旋转角度 角度 * Math.PI / 180 = 弧度</span></div><div class="line">    context.beginPath();</div><div class="line">    context.moveTo(<span class="number">0</span>,<span class="number">-170</span>);</div><div class="line">    context.lineTo(<span class="number">0</span>,<span class="number">-190</span>);</div><div class="line">    context.stroke(); <span class="comment">//笔触</span></div><div class="line">    context.closePath();</div><div class="line">    context.restore();<span class="comment">//恢复当前状态</span></div><div class="line">  &#125;</div><div class="line">  <span class="comment">//分刻度</span></div><div class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">60</span>; i++)&#123;</div><div class="line">     context.save();</div><div class="line">     context.lineWidth = <span class="number">5</span>;<span class="comment">//设置分刻度粗细</span></div><div class="line">     context.strokeStyle = <span class="string">"#000"</span>;</div><div class="line">     context.translate(<span class="number">250</span>,<span class="number">250</span>);<span class="comment">//重置0,0点</span></div><div class="line">     context.rotate(i * <span class="number">6</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>);<span class="comment">//设置旋转角度</span></div><div class="line">     context.beginPath();</div><div class="line">     context.moveTo(<span class="number">0</span>,<span class="number">-180</span>);</div><div class="line">     context.lineTo(<span class="number">0</span>,<span class="number">-190</span>);</div><div class="line">     context.stroke();</div><div class="line">     context.closePath();</div><div class="line"></div><div class="line">     context.restore();</div><div class="line">   &#125;</div><div class="line"></div><div class="line">  <span class="comment">//时针</span></div><div class="line"></div><div class="line">  context.save(); <span class="comment">//保存当前绘制的状态</span></div><div class="line">  <span class="comment">//设置时针风格</span></div><div class="line">  context.lineWidth = <span class="number">7</span>;</div><div class="line">  context.strokeStyle = <span class="string">"#000"</span>;</div><div class="line">  context.translate(<span class="number">250</span>,<span class="number">250</span>);<span class="comment">//设置异次元空间的0,0 点</span></div><div class="line">  context.rotate( hour * <span class="number">30</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>);<span class="comment">//设置旋转角度</span></div><div class="line">  context.beginPath();</div><div class="line">  context.moveTo(<span class="number">0</span>,<span class="number">-140</span>);</div><div class="line">  context.lineTo(<span class="number">0</span>,<span class="number">10</span>);</div><div class="line">  context.closePath();</div><div class="line">  context.stroke();</div><div class="line">  context.restore();</div><div class="line"></div><div class="line">  <span class="comment">//分针</span></div><div class="line">  context.save();</div><div class="line">  context.lineWidth = <span class="number">5</span>;<span class="comment">//设置分针风格</span></div><div class="line">  context.strokeStyle = <span class="string">"#000"</span>;</div><div class="line">  context.translate(<span class="number">250</span>,<span class="number">250</span>);</div><div class="line">  context.rotate(min * <span class="number">6</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>);<span class="comment">//设置旋转角度</span></div><div class="line">  context.beginPath();</div><div class="line">  context.moveTo(<span class="number">0</span>,<span class="number">-160</span>);</div><div class="line">  context.lineTo(<span class="number">0</span>,<span class="number">15</span>);</div><div class="line">  context.closePath();</div><div class="line">  context.stroke();</div><div class="line">  context.restore();</div><div class="line"></div><div class="line">  <span class="comment">//秒针</span></div><div class="line">  context.save();</div><div class="line">  context.lineWidth = <span class="number">3</span>;<span class="comment">//设置分针风格</span></div><div class="line">  context.strokeStyle = <span class="string">"#f00"</span>;</div><div class="line">  context.translate(<span class="number">250</span>,<span class="number">250</span>);</div><div class="line">  context.rotate(sec * <span class="number">6</span> * <span class="built_in">Math</span>.PI / <span class="number">180</span>);<span class="comment">//设置旋转角度 每秒走的角度是6度</span></div><div class="line">  context.beginPath();</div><div class="line">  context.moveTo(<span class="number">0</span>,<span class="number">-170</span>);</div><div class="line">  context.lineTo(<span class="number">0</span>,<span class="number">20</span>);</div><div class="line">  context.closePath();</div><div class="line">  context.stroke();</div><div class="line">  </div><div class="line">  </div><div class="line">  <span class="comment">//画时针 分针 秒针的交叉点</span></div><div class="line">  context.beginPath();</div><div class="line">  context.arc(<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">360</span>,<span class="literal">false</span>);<span class="comment">//FALSE 逆时针</span></div><div class="line">  context.closePath();</div><div class="line">  context.fillStyle = <span class="string">"gray"</span>;<span class="comment">//设置填充样式</span></div><div class="line">  context.fill();</div><div class="line">  context.stroke();</div><div class="line"> </div><div class="line">  <span class="comment">//设置秒针的小圆点</span></div><div class="line">  </div><div class="line">  context.beginPath();</div><div class="line">  context.arc(<span class="number">0</span>,<span class="number">-160</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">360</span>,<span class="literal">false</span>);<span class="comment">//FALSE 逆时针</span></div><div class="line">  context.closePath();</div><div class="line">  context.fillStyle = <span class="string">"blue"</span>;<span class="comment">//设置填充样式</span></div><div class="line">  context.fill();</div><div class="line">  context.stroke();</div><div class="line">  </div><div class="line">  context.restore();</div><div class="line">&#125;</div><div class="line">drawClock(); <span class="comment">//这一句必须加上 因为setInterval 第一秒不执行</span></div><div class="line">setInterval(drawClock,<span class="number">1000</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在线演示地址 &lt;a href=&quot;http://codepen.io/poetries/pen/gLoQzo&quot;&gt;http://codepen.io/poetries/pen/gLoQzo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;clock&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;500&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;500&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    您的浏览器不支持此效果展示，请升级最新版本&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="HTML5" scheme="http://www.poetries.top/tags/HTML5/"/>
    
      <category term="Canvas" scheme="http://www.poetries.top/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>HTML5之API总结</title>
    <link href="http://www.poetries.top/2016/11/26/h5-api/"/>
    <id>http://www.poetries.top/2016/11/26/h5-api/</id>
    <published>2016-11-26T06:35:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Canvas-API"><a href="#一、Canvas-API" class="headerlink" title="一、Canvas API"></a>一、Canvas API</h3><hr>
<p><code>canvas API</code>是<code>H5</code>标准中最复杂的部分， 它提供几种属性和方法，可以在<code>canvas</code>元素上创建图形应用</p>
<h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><hr>
<a id="more"></a>
<p>以下方法专门用于调用canvas API</p>
<ul>
<li><p><code>getContext(context)</code>创建可绘制图形的画布上下文，接受两个值，<code>2d</code>和<code>3d</code></p>
</li>
<li><p><code>fillRect(x,y,width,height)</code>绘制实心矩形</p>
</li>
<li><p><code>strokeRect(x,y,width,height)</code>绘制矩形轮廓</p>
</li>
<li><p><code>clearRect(x,y,width,height)</code>清除画布指定区域内容</p>
</li>
<li><p><code>createLinearGradient(x1,y1,x2,y2)</code>创建一个线性渐变效果</p>
</li>
<li><p><code>createRadialGradient(x1,y1,r1,x2,y2,r2)</code>创建一个放射渐变效果</p>
</li>
<li><p><code>addColorStop(position,color)</code>用于声明渐变颜色<code>position</code>范围是<code>0.0-1.0</code> 用于确定颜色开始变化位置</p>
</li>
<li><p><code>beginPath()</code>开始一条新路径</p>
</li>
<li><p><code>closePath()</code>在路径最后实现封闭该路径，它会生成一条直线，连接笔触的最后一个位置与路径的起点。如想要保持路径开放，使用<code>fill()</code>绘图，不用这个方法</p>
</li>
<li><p><code>stroke()</code> 用于创建路径轮廓</p>
</li>
<li><p><code>fill()</code>用于绘制实心形状</p>
</li>
<li><p><code>clip()</code>用于创建一个由路径定义的裁剪区域，只有在落入形状内的内容才绘制到画布上</p>
</li>
<li><p><code>moveTo(x,y)</code>将虚拟笔触移到新位置，下一个方法会从改点的开始继续设置路径</p>
</li>
<li><p><code>lineTo(x,y)</code>在新路径上添加一条直线</p>
</li>
<li><p><code>rect(x,y,width,height)</code>在路径为<code>(x,y)</code>位置上添加<code>width</code>和<code>height</code>矩形</p>
</li>
<li><p><code>arc(x,y,radius,startAngle,endAngle,direction)</code>在路径上添加一条弧线 ,<code>x</code>,<code>y</code>指定弧线的中心，角度单位为弧度，<code>direction</code>是一个表示顺时针或逆时针的布尔值。使用公式 <code>Math.PI/180x</code>角度，将角度转换为半径</p>
</li>
<li><p><code>strokeText(text,x,y,max)</code> 直接在画布上绘制文字轮廓。可选参数，max声明文字最大尺寸</p>
</li>
<li><p><code>fillText(text,x,y,max)</code>直接在画布上绘制实心文字。可选参数，<code>max</code>声明文字最大尺寸</p>
</li>
<li><p><code>translate(x,y)</code>将画布原点移到点<code>(x,y)</code>处，原点<code>（0,0）</code>初始位置位于<code>canvas</code>所在区域的左上角</p>
</li>
<li><p><code>rorate(angle)</code>这个方法可以使画布原点为中心发生旋转，角度必须是弧度。使用公式<code>Math.PI/180x</code> 将角度转换为弧度</p>
</li>
<li><p><code>scale(x,y)</code> 改变画布比例 默认值是<code>（1.0,1.0）</code>这些值可以是负值</p>
</li>
<li><p><code>transform（m1,m2,m3,m4,dx,dy）</code>修改画布的转换矩阵。新矩阵是基于之前的矩阵得到的</p>
</li>
<li><p><code>setTransform（m1,m2,m3,m4,dx,dy）</code>修改画布的转换矩阵。重置之前的值，声明新的值</p>
</li>
<li><p><code>save()</code>保存画布状态，包括转换矩阵、样式属性、裁剪遮罩</p>
</li>
<li><p><code>restore()</code> 恢复上一次保存的状态</p>
</li>
<li><p><code>drawImage()</code> 在画布上绘制图像</p>
</li>
</ul>
<h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><hr>
<p><code>canvas API</code>专用属性列表</p>
<ul>
<li><code>rect( x, y, width, height )</code>  绘制矩形</li>
<li><code>fillRect( x, y, width, height )</code> 绘制被填充的矩形</li>
<li><code>strokeRect( x, y, width, height )</code> 绘制矩形（无填充）</li>
<li><p><code>clearRect( x, y, width, height )</code> 清除指定的矩形内的像素</p>
</li>
<li><p><code>fill()</code> 填充当前绘图（路径）</p>
</li>
<li><code>stroke()</code>绘制已定义的路径</li>
<li><code>beginPath()</code>  起始（重置）当前路径</li>
<li><code>moveTo( x, y )</code> 将笔触移动到指定的坐标(x,y)</li>
<li><code>lineTo( x, y )</code>  绘制一条从当前位置到指定的坐标(x,y)的直线</li>
<li><code>clip()</code> 从原始画布剪切任意形状和尺寸的区域</li>
<li><code>quadraticCurveTo()</code> 创建二次贝塞尔曲线</li>
<li><code>bezierCurveTo()</code>   创建三次贝塞尔曲线</li>
<li><code>arc( x, y, radius, startAngle, endAngle, anticlockwise)</code> 绘制圆或圆弧</li>
<li><code>arcTo( x1, y1, x2, y2, radius)</code> 根据给定点画圆弧，再以直线连接两个点</li>
<li><p><code>isPointInPath( x, y )</code>  检测指定的点是否在当前路径中，在则返回true。</p>
</li>
<li><p><code>fillStyle</code>  设置或返回用于填充绘画的颜色、渐变或模式</p>
</li>
<li><code>strokeStyle</code> 设置或返回用于笔触的颜色、渐变或模式</li>
<li><code>shadowColor</code> 设置或返回用于阴影的颜色</li>
<li><code>shadowBlur</code>   设置或返回用于阴影的模糊级别</li>
<li><code>shadowOffsetX</code> 设置或返回阴影与形状的水平距离</li>
<li><p><code>shadowOffsetY</code> 设置或返回阴影与形状的垂直距离</p>
</li>
<li><p><code>lineCap</code> 设置或返回线条的结束点样式（<code>butt</code>、<code>round</code>、<code>square</code>）</p>
</li>
<li><code>lineJoin</code> 设置或返回当两条线交汇时，边角的类型（<code>bevel</code>、<code>round</code>、miter）</li>
<li><code>lineWidth</code> 设置或返回当前的线条宽度</li>
<li><p><code>miterLimit</code> 设置或返回最大斜接长度</p>
</li>
<li><p><code>createLinearGradient( x0, y0, x1, y1 )</code> 创建线性渐变</p>
</li>
<li><code>createPattern( image/canvas/video, repeat )</code> 在指定的方向内重复绘制指定的元素</li>
<li><code>createRadialGradient( x0, y0, r0, x1, y1, r1 )</code>创建径向渐变</li>
<li><p><code>addColorStop( stop, color )</code> 规定渐变对象中的颜色和停止位置</p>
</li>
<li><p><code>font</code>  设置或返回文本内容的当前字体属性（和css的font一样）</p>
</li>
<li><code>textAlign</code> 设置或返回文本内容的当前对齐方式</li>
<li><code>textBaseline</code> 设置或返回在绘制文本时使用的当前文本基线</li>
<li><code>fillText( text, x, y )</code> 在画布上绘制“被填充”的文本</li>
<li><code>strokeText( text, x, y )</code> 在画布上绘制文本（无填充）</li>
<li><p><code>measureText( text )</code>  返回包含指定文本宽度的对象（属性width获取宽度）</p>
</li>
<li><p><code>drawImage( image/canvas, x, y )</code>、drawImage( image/canvas, x, y, width, height )、drawImage( image/canvas, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight )`  在画布上绘制图像、画布或视频</p>
</li>
<li><p><code>createImageData( width, height )</code>、createImageData(imageData)  绘制ImageData对象</p>
</li>
<li><code>getImageData( x, y, width, height )</code>  返回ImageData对象，该对象为画布上指定的矩形复制像素数据。</li>
<li><code>putImageData( ImageData, x, y )</code>、putImageData( imageData, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight )  把图像数据放回画布上。</li>
<li><code>width</code>  返回ImageData对象的宽度</li>
<li><code>height</code>  返回<code>ImageData</code>对象的高度</li>
<li><p><code>data</code>  返回一个对象，包含指定的ImageData对象的图像数据</p>
</li>
<li><p><code>globalAlpha</code>  设置或返回绘图的当前alpha或透明度</p>
</li>
<li><p><code>globalCompositeOperation</code>  设置或返回新图像如何绘制到已有的图像上。</p>
</li>
<li><p><code>scale( x, y )</code> 缩放当前绘图</p>
</li>
<li><code>translate( x, y )</code> 重新设置画布上的(0,0)位置</li>
<li><code>rotate( angle )</code> 选择当前绘图，单位为“弧度”，角度转弧度公式<code>（ degrees*Math.PI/180）</code></li>
<li><code>transform( m11, m12, m21, m22, dx, dy )</code> 替换绘图的当前转换矩阵</li>
<li><p><code>setTransform()</code> 将当前转换重置为单元矩阵，然后运行transform()</p>
</li>
<li><p><code>save()</code>  保存当前环境的状态</p>
</li>
<li><p><code>restore()</code>  恢复之前保存过的路径状态和属性</p>
</li>
<li><p><code>getContext(&#39;2d&#39;)</code>  获取<code>2d</code>对象</p>
</li>
<li><code>toDataURL()</code> 将canvas转换成图片，返回地址</li>
</ul>
<h4 id="canvas常用总结"><a href="#canvas常用总结" class="headerlink" title="canvas常用总结"></a>canvas常用总结</h4><hr>
<ul>
<li>标签 <code>&lt;canvas&gt;</code><ul>
<li>不支持<code>canvas</code> 的浏览器可以看到的内容</li>
</ul>
</li>
<li><code>&lt;canvas&gt;</code> 绘制环境<ul>
<li><code>getContext(&quot;2d&quot;)</code>;目前支持<code>2d</code>的场景</li>
</ul>
</li>
</ul>
<ul>
<li>绘制矩形<ul>
<li><code>rect(L,T,W,H)</code>:创建一个矩形</li>
<li><code>fillRect(L,T,W,H)</code>:绘制填充的矩形</li>
<li><code>strokeRect(L,T,W,H)</code>绘制矩形(无填充)<ul>
<li>默认一像素黑色边框</li>
</ul>
</li>
</ul>
</li>
<li>设置绘图<ul>
<li><code>fillStyle</code>:填充颜色(绘制<code>canvas</code>是有顺序的)</li>
<li><code>lineWidth</code>:线宽度，笔迹粗细</li>
<li><code>strokeStyle</code>:边线颜色</li>
</ul>
</li>
<li><p>绘制路径</p>
<ul>
<li><code>stroke</code> ：绘制，划线(黑色默认)</li>
<li><code>fill</code> :填充(黑色默认)</li>
<li><code>rect(矩形区域)</code> </li>
<li><code>clearRect</code> 擦除一个矩形区域</li>
<li><code>save</code> 进入到XXX（高逼格）状态</li>
<li><code>restore</code> 退出xxx（高逼格）状态</li>
</ul>
</li>
<li><p>绘制圆形</p>
<ul>
<li><code>arc(x,y,半径,起始弧度,结束弧度,旋转方向)</code></li>
<li><code>x</code>，<code>y</code>起始位置</li>
<li>弧度与角度：<code>弧度=角度 x π / 180</code></li>
<li>旋转方向：顺时针（默认：<code>false</code>），逆时针（<code>true</code>）</li>
</ul>
</li>
<li><strong>绘制字体</strong><ul>
<li><code>font</code>：设置字体大小</li>
<li><code>fillText</code>：填充字体</li>
<li><code>strokeText</code>：绘制字体</li>
</ul>
</li>
</ul>
<h3 id="二、视频音频"><a href="#二、视频音频" class="headerlink" title="二、视频音频"></a>二、视频音频</h3><hr>
<ul>
<li>视频音频格式的简单介绍<ul>
<li>常见的视频格式<ul>
<li>视频的组成部分：画面、音频、编码格式</li>
<li>视频编码：H.264、Theora、VP8(google开源)</li>
</ul>
</li>
<li>常见的音频格式<ul>
<li>视频编码：ACC、MP3、Vorbis</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><code>HTML5</code>能在完全脱离插件的情况下播放音视频,但是不是所有格式都支持。</li>
<li>支持的视频格式：<ul>
<li><code>Ogg=</code>带有<code>Theora</code>视频编码<code>+Vorbis</code>音频编码的<code>Ogg</code>文件</li>
<li><code>MEPG4=</code>带有H.264视频编码<code>+AAC</code>音频编码的<code>MPEG4</code>文件</li>
<li><code>WebM=</code>带有<code>VP8</code>视频编码<code>+Vorbis</code>音频编码的<code>WebM</code>格式</li>
</ul>
</li>
</ul>
<h4 id="Video的使用"><a href="#Video的使用" class="headerlink" title="Video的使用"></a><code>Video</code>的使用</h4><hr>
<ul>
<li>单独用法<ul>
<li><code>&lt;video src=&quot;文件地址&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt;</code></li>
</ul>
</li>
<li>带提示用法</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt; <span class="attr">video</span> <span class="attr">src</span>=<span class="string">"文件地址"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></div><div class="line">	您的浏览器暂不支持video标签。播放视频</div><div class="line"><span class="tag">&lt;/ <span class="attr">video</span> &gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>兼容用法</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt; <span class="attr">video</span>  <span class="attr">controls</span>=<span class="string">"controls"</span>  <span class="attr">width</span>=<span class="string">"300"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"move.ogg"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span> &gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"move.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span> &gt;</span></div><div class="line">	您的浏览器暂不支持video标签。播放视频</div><div class="line"><span class="tag">&lt;/ <span class="attr">video</span> &gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>Video</code>的常见属性</li>
</ul>
<table>
<thead>
<tr>
<th>属性</th>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Autoplay</td>
<td>Autoplay</td>
<td>视频就绪自动播放</td>
</tr>
<tr>
<td>controls</td>
<td>controls</td>
<td>向用户显示播放控件</td>
</tr>
<tr>
<td>Width</td>
<td>Pixels(像素)</td>
<td>设置播放器宽度</td>
</tr>
<tr>
<td>Height</td>
<td>Pixels(像素)</td>
<td>设置播放器高度</td>
</tr>
<tr>
<td>Loop</td>
<td>Loop</td>
<td>播放完是否继续播放该视频，循环播放</td>
</tr>
<tr>
<td>Preload</td>
<td>load{auto,meta,none}</td>
<td>规定是否预加载视频。</td>
</tr>
<tr>
<td>Src</td>
<td>url</td>
<td>视频url地址</td>
</tr>
<tr>
<td>Poster</td>
<td>Imgurl</td>
<td>加载等待的画面图片</td>
</tr>
<tr>
<td>Autobuffer</td>
<td>Autobuffer</td>
<td>设置为浏览器缓冲方式，不设置autoply才有效</td>
</tr>
</tbody>
</table>
<ul>
<li><code>Video</code>的<code>API</code>方法</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>属性</th>
<th>事件</th>
</tr>
</thead>
<tbody>
<tr>
<td>play()</td>
<td>currentSrc</td>
<td>play</td>
</tr>
<tr>
<td>pause()</td>
<td>currentTime</td>
<td>pause</td>
</tr>
<tr>
<td>load()</td>
<td>videoWidth</td>
<td>progress</td>
</tr>
<tr>
<td>canPlayType()</td>
<td>videoHeight</td>
<td>error</td>
</tr>
</tbody>
</table>
<h3 id="三、地理信息与本地存储"><a href="#三、地理信息与本地存储" class="headerlink" title="三、地理信息与本地存储"></a>三、地理信息与本地存储</h3><hr>
<h4 id="地理位置"><a href="#地理位置" class="headerlink" title="地理位置"></a>地理位置</h4><hr>
<ul>
<li>经度  :   南北极的连接线</li>
<li><p>纬度  :   东西连接的线</p>
</li>
<li><p>位置信息从何而来</p>
<ul>
<li><code>IP</code>地址</li>
<li><code>GPS</code>全球定位系统</li>
<li><code>Wi-Fi</code>无线网络</li>
<li>基站</li>
</ul>
</li>
<li><p><code>avigator.geolocation</code></p>
<ul>
<li>单次定位请求  ：<code>getCurrentPosition</code>(请求成功,请求失败,数据收集方式)</li>
<li><p>请求成功函数</p>
<ul>
<li>经度 :  <code>coords.longitude</code></li>
<li>纬度 :  <code>coords.latitude</code></li>
<li>准确度 :  <code>coords.accuracy</code></li>
<li>海拔 : <code>coords.altitude</code></li>
<li>海拔准确度 :  <code>coords.altitudeAcuracy</code></li>
<li>行进方向 :  <code>coords.heading</code></li>
<li>地面速度 :  <code>coords.speed</code></li>
<li>请求的时间: <code>new Date(position.timestamp)</code></li>
</ul>
</li>
<li><p>请求失败函数</p>
<ul>
<li>失败编号  ：<code>code</code><ul>
<li>0  :  不包括其他错误编号中的错误</li>
<li>1  :  用户拒绝浏览器获取位置信息</li>
<li>2  :  尝试获取用户信息，但失败了</li>
<li>3  :   设置了<code>timeout</code>值，获取位置超时了</li>
</ul>
</li>
</ul>
</li>
<li><p>数据收集 :  json的形式</p>
<ul>
<li><code>enableHighAcuracy</code>  :  更精确的查找，默认<code>false</code></li>
<li><code>timeout</code> :  获取位置允许最长时间，默认<code>infinity</code></li>
<li><code>maximumAge</code> :  位置可以缓存的最大时间，默认<code>0</code></li>
</ul>
</li>
<li><p>多次定位请求*  : <code>watchPosition</code></p>
<ul>
<li>移动设备有用，位置改变才会触发</li>
<li>配置参数：<code>frequency</code> 更新的频率</li>
<li>关闭更新请求  :  <code>clearWatch</code></li>
</ul>
</li>
<li><p>百度地图<code>API</code></p>
</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=qZfInp9MaT9Qa0PoNy4Rmx3Y9W9ZXMfw"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h4 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h4><hr>
<ul>
<li><p><code>Storage</code></p>
<ul>
<li><code>sessionStorage</code><ul>
<li><code>session</code>临时回话，从页面打开到页面关闭的时间段</li>
<li>窗口的临时存储，页面关闭，本地存储消失</li>
</ul>
</li>
<li><code>localStorage</code><ul>
<li>永久存储（可以手动删除数据）</li>
</ul>
</li>
</ul>
</li>
<li><p><code>Storage</code>的特点</p>
<ul>
<li>存储量限制 ( 5M )</li>
<li>客户端完成，不会请求服务器处理</li>
<li><code>sessionStorage</code>数据是不共享、 <code>localStorage</code>共享</li>
</ul>
</li>
<li><p><code>Storage API</code></p>
<ul>
<li><code>setItem()</code>:<ul>
<li>设置数据，(<code>key</code>,<code>value</code>)类型，类型都是字符串</li>
<li>可以用获取属性的形式操作</li>
</ul>
</li>
<li><code>getItem():</code><ul>
<li>获取数据，通过<code>key</code>来获取到相应的<code>value</code></li>
</ul>
</li>
<li><code>removeItem()</code>:<ul>
<li>删除数据，通过key来删除相应的<code>value</code></li>
</ul>
</li>
<li><code>clear()</code>:<ul>
<li>删除全部存储的值</li>
</ul>
</li>
</ul>
</li>
<li><p>存储事件:</p>
<ul>
<li>当数据有修改或删除的情况下，就会触发<code>storage</code>事件</li>
<li>在对数据进行改变的窗口对象上是不会触发的`</li>
<li><code>Key</code> : 修改或删除的<code>key</code>值，如果调用<code>clear()</code>,<code>key</code>为<code>null</code></li>
<li><code>newValue</code>  :  新设置的值，如果调用<code>removeStorage()</code>,<code>key</code>为<code>null</code></li>
<li><code>oldValue</code> :  调用改变前的<code>value</code>值</li>
<li><code>storageArea</code> : 当前的<code>storage</code>对象</li>
<li><code>url</code> :  触发该脚本变化的文档的url</li>
<li>注：<code>session</code>同窗口才可以,例子：<code>iframe</code>操作</li>
</ul>
</li>
</ul>
<h3 id="四、HTML5拖拽"><a href="#四、HTML5拖拽" class="headerlink" title="四、HTML5拖拽"></a>四、HTML5拖拽</h3><hr>
<ul>
<li>图片自带拖拽功能</li>
<li>其他元素可设置<code>draggable</code>属性</li>
<li><p><code>draggable ：true</code></p>
<ul>
<li>拖拽元素(被拖拽元素对象)事件 :  <ul>
<li><code>ondragstart</code> : 拖拽前触发 </li>
<li><code>ondrag</code> :拖拽前、拖拽结束之间，连续触发</li>
<li><code>ondragend</code> :拖拽结束触发</li>
</ul>
</li>
<li>目标元素(拖拽元素被拖到的对象)事件 :  <ul>
<li><code>ondragenter</code> :进入目标元素触发</li>
<li><code>ondragover</code>:进入目标、离开目标之间，连续触发</li>
<li><code>ondragleave</code> :离开目标元素触发</li>
<li><code>ondrop</code> :在目标元素上释放鼠标触发<ul>
<li>需要在<code>ondragover</code>事件里面阻止默认事件</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>拖拽兼容问题</p>
<ul>
<li><p>火狐浏览器下需设置<code>dataTransfer</code>对象才可以拖拽除图片外的其他标签</p>
<ul>
<li><code>dataTransfer</code>对象</li>
<li><code>setData()</code> : 设置数据 <code>key</code>和<code>value</code>(必须是字符串)</li>
<li><code>getData()</code> : 获取数据，根据<code>key</code>值，获取对应的<code>value</code></li>
<li><p><code>effectAllowed</code> : 设置光标样式(<code>none</code>, <code>copy</code>, <code>copyLink</code>, <code>copyMove</code>, <code>link</code>, <code>linkMove</code>,<code>move</code>, <code>all</code> 和<code>uninitialized</code>)</p>
</li>
<li><p><code>setDragImage</code> ：三个参数（指定的元素，坐标<code>X</code>，坐标<code>Y</code>）</p>
</li>
<li><code>files</code>： 获取外部拖拽的文件，返回一个<code>filesList</code>列表<ul>
<li><code>filesList</code>下有个<code>type</code>属性，返回文件的类型</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>读取文件信息<ul>
<li><code>FileReader</code>(读取文件信息)<ul>
<li><code>readAsDataURL</code></li>
</ul>
</li>
<li>参数为要读取的文件对象<ul>
<li><code>onload</code>当读取文件成功完成的时候触发此事件</li>
<li><code>this. result</code> 获取读取的文件数据</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="五、跨文档操作"><a href="#五、跨文档操作" class="headerlink" title="五、跨文档操作"></a>五、跨文档操作</h3><hr>
<ul>
<li><p>跨文档请求</p>
</li>
<li><p>同域跨文档</p>
<ul>
<li><code>iframe</code>内页：<ul>
<li>父页面操作子页面：<code>contentWindow</code></li>
<li>子页面操作父页面：<code>window.top</code>(找到最顶级的父页面)/<code>parent</code>(第一父页面)</li>
<li>新窗口页：<ul>
<li>父页面操作子页面：<code>window.open</code></li>
<li>子页面操作父页面：<code>window.opener</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>不同域跨文档</p>
<ul>
<li><code>postMessage（“发送的数据”,”接收的域”）</code><ul>
<li><code>message</code>事件监听</li>
<li><code>ev.origin</code>发送数据来源的域</li>
<li><code>ev.data</code> 发送的数据</li>
</ul>
</li>
<li>通过判断发送的数据来执行相应的需求</li>
</ul>
</li>
<li><p>ajax跨域</p>
<ul>
<li><p><code>XMLHttpRequest</code> 新增功能</p>
<ul>
<li>跨域请求：修改服务端头信息<ul>
<li>I<code>E</code>兼容：<code>XDomaiRequest</code></li>
</ul>
</li>
</ul>
</li>
<li><p>进度事件：</p>
<ul>
<li><code>upload.onprogress(ev)</code> 上传进度(实现文件上传进度条)<ul>
<li><code>ev.total</code>  发送文件的总量</li>
<li><code>ev.loaded</code> 已发送的量</li>
</ul>
</li>
<li><code>FormData</code>  构建提交二进制数据</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、Canvas-API&quot;&gt;&lt;a href=&quot;#一、Canvas-API&quot; class=&quot;headerlink&quot; title=&quot;一、Canvas API&quot;&gt;&lt;/a&gt;一、Canvas API&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;code&gt;canvas API&lt;/code&gt;是&lt;code&gt;H5&lt;/code&gt;标准中最复杂的部分， 它提供几种属性和方法，可以在&lt;code&gt;canvas&lt;/code&gt;元素上创建图形应用&lt;/p&gt;
&lt;h4 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h4&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="HTML5" scheme="http://www.poetries.top/tags/HTML5/"/>
    
      <category term="API" scheme="http://www.poetries.top/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>Ajax总结篇</title>
    <link href="http://www.poetries.top/2016/11/26/Ajax-summary/"/>
    <id>http://www.poetries.top/2016/11/26/Ajax-summary/</id>
    <published>2016-11-26T06:35:24.000Z</published>
    <updated>2016-12-14T07:59:53.922Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文出处 <a href="http://blog.poetries.top/2016/11/26/Ajax-summary" target="_blank" rel="external">http://blog.poetries.top/2016/11/26/Ajax-summary</a></p>
</blockquote>
<p>本文主要总结整理<code>Ajax</code>的一些常用的基础知识，适合初学者。</p>
<h3 id="一、Ajax简介、优劣势、应用场景以及技术"><a href="#一、Ajax简介、优劣势、应用场景以及技术" class="headerlink" title="一、Ajax简介、优劣势、应用场景以及技术"></a>一、Ajax简介、优劣势、应用场景以及技术</h3><hr>
<ul>
<li>Ajax简介 :<ul>
<li><code>Asynchronous Javascript And XML</code> （异步的<br><code>JavaScript</code>和<code>XML</code>）</li>
<li>它并不是一种单一的技术，而是有机利用一系列交互式网页应用相关的技术所形成的结合体</li>
<li><code>AJAX</code> 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，<code>AJAX</code> 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。<a id="more"></a></li>
</ul>
</li>
<li><p>优点：</p>
<ul>
<li>页面无刷新，用户体验好。</li>
<li>异步通信，更加快的响应能力。</li>
<li>减少冗余请求，减轻了服务器负担</li>
<li>基于标准化的并被广泛支持的技术，不需要下载插件或者小程序</li>
</ul>
</li>
<li><p>缺点：</p>
<ul>
<li><code>ajax</code>干掉了<code>back</code>按钮，即对浏览器后退机制的破坏。</li>
<li>存在一定的安全问题。</li>
<li>对搜索引擎的支持比较弱。</li>
<li>破坏了程序的异常机制。</li>
<li>无法用<code>URL</code>直接访问</li>
</ul>
</li>
<li><p><code>ajax</code>应用场景</p>
<ul>
<li>场景 1. 数据验证</li>
<li>场景 2. 按需取数据</li>
<li>场景 3. 自动更新页面</li>
</ul>
</li>
<li><p><code>AJAX</code> 包含以下五个部分：<br><code>ajax</code>并非一种新的技术，而是几种原有技术的结合体。它由下列技术组合而成。</p>
<ul>
<li>使用<code>CSS</code>和<code>XHTML</code>来表示。</li>
<li>使用<code>DOM</code>模型来交互和动态显示。</li>
<li>数据互换和操作技术，使用<code>XML</code>与<code>XSLT</code></li>
<li>使用<code>XMLHttpRequest</code>来和服务器进行异步通信。</li>
<li>使用<code>javascript</code>来绑定和调用。</li>
</ul>
</li>
</ul>
<p>在上面几中技术中，除了<code>XmlHttpRequest</code>对象以外，其它所有的技术都是基于<code>web</code>标准并且已经得到了广泛使用的，<code>XMLHttpRequest</code>虽然目前还没有被<code>W3C</code>所采纳，但是它已经是一个事实的标准，因为目前几乎所有的主流浏览器都支持它</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-6937419905da762f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="两张著名的AJAX 介绍的图"></p>
<ul>
<li>第一张图尤其说明了传统<code>Web</code> 应用程序的结构与采用了 <code>AJAX</code> 技术的 <code>Web</code><br>应用程序的结构上的差别</li>
<li>主要的差别，其实不是 <code>JavaScript</code>，不是 <code>HTML/XHTML</code>和 <code>CSS</code>，而是采用<br>了 <code>XMLHttpRequest</code> 来向服务器异步的请求 <code>XML</code> 数据</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-13adc82666fac3a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="AJAX 介绍的图"></p>
<ul>
<li>再来看第二张图，传统的 <code>Web</code> 应用模式，用户的体验是割裂的，点击-&gt;等待-&gt;<br>看到新的页面-&gt;再点击-&gt;再等待。而采用了<code>AJAX</code>技术之后，大部分的计算工作，都是在用户不察觉的情况下，交由服务器去完成了</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-4c6beed36bb246c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="XMLHttpRequest对象的属性"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-1092e842e08d9012.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="XMLHttpRequest对象的方法"></p>
<h3 id="二、创建ajax的步骤"><a href="#二、创建ajax的步骤" class="headerlink" title="二、创建ajax的步骤"></a>二、创建ajax的步骤</h3><hr>
<blockquote>
<p><code>Ajax</code>的原理简单来说通过<code>XmlHttpRequest</code>对象来向服务器发异步请求，从服务器获得数据，然后用<code>javascript</code>来操作<code>DOM</code>而更新页面。这其中最关键的一步就是从服务器获得请求数据。原生创建<code>ajax</code>可分为以下四步</p>
</blockquote>
<h4 id="1、创建XMLHttpRequest对象"><a href="#1、创建XMLHttpRequest对象" class="headerlink" title="1、创建XMLHttpRequest对象"></a>1、创建<code>XMLHttpRequest</code>对象</h4><hr>
<p><code>Ajax</code>的核心是<code>XMLHttpRequest</code>对象，它是<code>Ajax</code>实现的关键，发送异步请求、接受响应以及执行回调都是通过它来完成</p>
<p>所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。</p>
<ul>
<li><p>创建 <code>XMLHttpRequest</code>对象的语法：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div></pre></td></tr></table></figure>
</li>
<li><p>老版本的 <code>Internet Explorer</code>（IE5 和 IE6）使用<code>ActiveX</code> 对象：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
<p>为了应对所有的现代浏览器，包括 <code>IE5</code> 和 <code>IE6</code>，请检查浏览器是否支持 <code>XMLHttpRequest</code>对象。如果支持，则创建<code>XMLHttpRequest</code>对象。如果不支持，则创建<code>ActiveXObject</code>：</p>
<ul>
<li>兼容各个浏览器的创建<code>Ajax</code>的工具函数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createRequest</span> (<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">	&#125;<span class="keyword">catch</span> (tryMS)&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Msxm12.XMLHTTP"</span>);</div><div class="line">		&#125; <span class="keyword">catch</span> (otherMS) &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">			&#125;<span class="keyword">catch</span> (failed) &#123;</div><div class="line">				xhr = <span class="literal">null</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> xhr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="2、准备请求"><a href="#2、准备请求" class="headerlink" title="2、准备请求"></a>2、准备请求</h4><hr>
<ul>
<li><p>初始化该<code>XMLHttpRequest</code>对象，接受三个参数：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.open(method,url,<span class="keyword">async</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>第一个参数表示请求类型的字符串，其值可以是<code>GET</code>或者<code>POST</code>。</p>
</li>
<li><p><code>GET</code>请求：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"GET"</span>,demo.php?name=tsrot&amp;age=<span class="number">24</span>,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
</li>
<li><p><code>POST</code>请求：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"POST"</span>,demo.php,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>第二个参数是要作为请求发送目标的URL。</p>
</li>
<li>第三个参数是<code>true</code>或<code>false</code>，表示请求是以异步还是同步的模式发出。（默认为<code>true</code>，一般不建议为<code>false</code>）<ul>
<li><code>false</code>：同步模式发出的请求会暂停所有javascript代码的执行，知道服务器获得响应为止，如果浏览器在连接网络时或者在下载文件时出了故障，页面就会一直挂起。 </li>
<li><code>true</code>：异步模式发出的请求，请求对象收发数据的同时，浏览器可以继续加载页面，执行其他javascript代码</li>
</ul>
</li>
</ul>
<h4 id="3、发送请求"><a href="#3、发送请求" class="headerlink" title="3、发送请求"></a>3、发送请求</h4><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.send();</div></pre></td></tr></table></figure>
<p>一般情况下，使用<code>Ajax</code>提交的参数多是些简单的字符串，可以直接使用<code>GET</code>方法将要提交的参数写到<code>open</code>方法的<code>url</code>参数中，此时<code>send</code>方法的参数为<code>null</code>或为空。</p>
<ul>
<li><p><code>GET</code>请求：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"GET"</span>,demo.php?name=tsrot&amp;age=<span class="number">24</span>,<span class="literal">true</span>);</div><div class="line">xhr.send(<span class="literal">null</span>);</div></pre></td></tr></table></figure>
</li>
<li><p><code>POST</code>请求：<br>如果需要像 <code>HTML</code> 表单那样 <code>POST</code> 数据，请使用 <code>setRequestHeader()</code>来添加 <code>HTTP</code> 头。然后在<code>send()</code>方法中规定您希望发送的数据：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"POST"</span>,demo.php,<span class="literal">true</span>);</div><div class="line">xhr.setRequestHeder(<span class="string">"Content-Type"</span>,<span class="string">"application/x-www-form-urlencoded;charset=UTF-8"</span>);</div><div class="line">xhr.sen</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4、处理响应"><a href="#4、处理响应" class="headerlink" title="4、处理响应"></a>4、处理响应</h4><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>)&#123;</div><div class="line">		<span class="built_in">console</span>.log(xhr.responseText);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>onreadystatechange</code> ：当处理过程发生变化的时候执行下面的函数</p>
</li>
<li><p><code>readyState</code> ：<code>ajax</code>处理过程</p>
<ul>
<li>0：请求未初始化（还没有调用 <code>open()</code>）。</li>
<li>1：请求已经建立，但是还没有发送（还没有调用 <code>send()</code>）。</li>
<li>2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。</li>
<li>3：请求在处理中；通常响应中已有部分数据可用了，但是服务器还没有完成响应的生成。</li>
<li>4：响应已完成；您可以获取并使用服务器的响应了。</li>
</ul>
</li>
<li><p><code>status</code>属性：</p>
<ul>
<li>200:”OK”</li>
<li>404: 未找到页面</li>
</ul>
</li>
<li><p><code>responseText</code>：获得字符串形式的响应数据</p>
</li>
<li><code>responseXML</code>：获得 <code>XML</code>形式的响应数据</li>
<li>对象转换为JSON格式使用<code>JSON.stringify</code></li>
<li><code>json</code>转换为对象格式用<code>JSON.parse()</code></li>
<li><p>返回值一般为<code>json</code>字符串，可以用<code>JSON.parse(xhr.responseText)</code>转化为<code>JSON</code>对象</p>
</li>
<li><p><strong>从服务器传回的数据是json格式，这里做一个例子说明，如何利用</strong></p>
<ul>
<li>1、首先需要从<code>XMLHttpRequest</code>对象取回数据这是一个<code>JSON</code>串，把它转换为真正的<code>JavaScript</code>对象。使用<code>JSON.parse(xhr.responseText)</code>转化为<code>JSON</code>对象</li>
<li>2、遍历得到的数组，向<code>DOM</code>中添加新元素</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">example</span>(<span class="params">responseText</span>)</span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">var</span> saleDiv= <span class="built_in">document</span>.getElementById(<span class="string">"sales"</span>);</div><div class="line"><span class="keyword">var</span> sales = <span class="built_in">JSON</span>.parse(responseText);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;sales.length;i++)&#123;</div><div class="line">        <span class="keyword">var</span> sale = sales[i];</div><div class="line">         <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">         div.setAttribute(<span class="string">"class"</span>,<span class="string">"salseItem"</span>);</div><div class="line">        div.innerHTML = sale.name + sale.sales;</div><div class="line">        salseDiv.appendChild(div);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-ae7614423c64ebb1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HTTP状态码"></p>
<h4 id="5、完整例子"><a href="#5、完整例子" class="headerlink" title="5、完整例子"></a>5、完整例子</h4><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="literal">false</span>;</div><div class="line"></div><div class="line"> <span class="keyword">if</span>(XMLHttpRequest)&#123;</div><div class="line">	xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line"> &#125;<span class="keyword">else</span>&#123;</div><div class="line">	xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(xhr) &#123;<span class="comment">//如果xhr创建失败，还是原来的false</span></div><div class="line">   xhr.open(<span class="string">"GET"</span>,<span class="string">"./data.json"</span>,<span class="literal">true</span>);</div><div class="line">   xhr.send();</div><div class="line"></div><div class="line">   xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>)&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(xhr.responseText).name);</div><div class="line">	&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>data.json</code></li>
</ul>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="attr">"name"</span>:<span class="string">"tsrot"</span>,</div><div class="line">	<span class="attr">"age"</span>:<span class="number">24</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>这个过程是一定要记在脑子里的</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">url, success, fail</span>)</span>&#123;</div><div class="line">    <span class="comment">// 1. 创建连接</span></div><div class="line">    <span class="keyword">var</span> xhr = <span class="literal">null</span>;</div><div class="line">    xhr = <span class="keyword">new</span> XMLHttpRequest()</div><div class="line">    <span class="comment">// 2. 连接服务器</span></div><div class="line">    xhr.open(<span class="string">'get'</span>, url, <span class="literal">true</span>)</div><div class="line">    <span class="comment">// 3. 发送请求</span></div><div class="line">    xhr.send(<span class="literal">null</span>);</div><div class="line">    <span class="comment">// 4. 接受请求</span></div><div class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</div><div class="line">            <span class="keyword">if</span>(xhr.status == <span class="number">200</span>)&#123;</div><div class="line">                success(xhr.responseText);</div><div class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// fail</span></div><div class="line">                fail &amp;&amp; fail(xhr.status);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-9ea8be2721ca01c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="XMLHttpRequest 在异步请求远程数据时的工作流程"></p>
<h5 id="谈谈JSONP"><a href="#谈谈JSONP" class="headerlink" title="谈谈JSONP"></a>谈谈JSONP</h5><hr>
<ul>
<li>要访问web服务器的数据除了XMLHttpRequest外还有一种方法是JSONP</li>
<li><p>如果HTML和JavaScript与数据同时在同一个机器上，就可以使用XMLHttpRequest</p>
</li>
<li><p>什么是JSONP？</p>
<ul>
<li>JSONP(JSON with Padding)是一个非官方的协议，它允许在服务器端集成Script tags返回至客户端，通过javascript callback的形式实现跨域访问（这仅仅是JSONP简单的实现形式）</li>
</ul>
</li>
<li>JSONP有什么用？<ul>
<li>由于同源策略的限制，XmlHttpRequest只允许请求当前源（域名、协议、端口）的资源，为了实现跨域请求，可以通过script标签实现跨域请求，然后在服务端输出JSON数据并执行回调函数，从而解决了跨域的数据请求</li>
</ul>
</li>
<li><p>如何使用JSONP？</p>
<ul>
<li>在客户端声明回调函数之后，客户端通过script标签向服务器跨域请求数据，然后服务端返回相应的数据并动态执行回调函数</li>
</ul>
</li>
<li><p>用XMLHttpRequest时，我们得到一个字符串；要用JSON.parse把字符串转化成对象，使用jsonp时，script标志会解析并执行返回的代码，等我们处理数据时，已经是一个JavaScript对象了</p>
</li>
<li><p>简单实例</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> /&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript">  </span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">jsonpCallback</span>(<span class="params">result</span>) </span>&#123;  </div><div class="line">        alert(result.a);  </div><div class="line">        alert(result.b);  </div><div class="line">        alert(result.c);  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> result) &#123;  </div><div class="line">            alert(i+<span class="string">":"</span>+result[i]);<span class="comment">//循环输出a:1,b:2,etc.  </span></div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://crossdomain.com/services.php?callback=jsonpCallback"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </div><div class="line"><span class="comment">&lt;!--callback参数指示生成JavaScript代码时要使用的函数jsonpcallback--&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>注意浏览器的缓存问题<ul>
<li>在末尾增加一个随机数可避免频繁请求同一个链接出现的缓存问题</li>
<li>`<script type="text/javascript" src="http://crossdomain.com/services.php?callback=jsonpCallback&random=(new Date()).getTime()"></script>  </li>
</ul>
</li>
</ul>
<h3 id="三、-jQuery中的Ajax"><a href="#三、-jQuery中的Ajax" class="headerlink" title="三、 jQuery中的Ajax"></a>三、 jQuery中的Ajax</h3><hr>
<ul>
<li>jQuery中的<code>ajax</code>封装案例</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//ajax请求后台数据</span></div><div class="line"><span class="keyword">var</span> btn =  <span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>];</div><div class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	</div><div class="line">	ajax(&#123;<span class="comment">//json格式</span></div><div class="line">		type:<span class="string">"post"</span>,</div><div class="line">		<span class="attr">url</span>:<span class="string">"post.php"</span>,</div><div class="line">		<span class="attr">data</span>:<span class="string">"username=poetries&amp;pwd=123456"</span>,</div><div class="line">		<span class="attr">asyn</span>:<span class="literal">true</span>,</div><div class="line">		<span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">			<span class="built_in">document</span>.write(data);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">//封装ajax</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">aJson</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> ajx = <span class="literal">null</span>;</div><div class="line">	<span class="keyword">var</span> type = aJson.type || <span class="string">"get"</span>;</div><div class="line">	<span class="keyword">var</span> asyn = aJson.asyn || <span class="literal">true</span>;</div><div class="line">	<span class="keyword">var</span> url = aJson.url;		<span class="comment">// url 接收 传输位置</span></div><div class="line">	<span class="keyword">var</span> success = aJson.success;<span class="comment">// success 接收 传输完成后的回调函数</span></div><div class="line">	<span class="keyword">var</span> data = aJson.data || <span class="string">''</span>;<span class="comment">// data 接收需要附带传输的数据</span></div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)&#123;<span class="comment">//兼容处理</span></div><div class="line">		ajx = <span class="keyword">new</span> XMLHttpRequest();<span class="comment">//一般浏览器</span></div><div class="line">	&#125;<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		ajx = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);<span class="comment">//IE6+</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (type == <span class="string">"get"</span> &amp;&amp; data)</div><div class="line">	&#123;</div><div class="line">		url +=<span class="string">"/?"</span>+data+<span class="string">"&amp;"</span>+<span class="built_in">Math</span>.random();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">//初始化ajax请求</span></div><div class="line">	ajx.open( type , url , asyn );</div><div class="line">	<span class="comment">//规定传输数据的格式</span></div><div class="line">	ajx.setRequestHeader(<span class="string">'content-type'</span>,<span class="string">'application/x-www-form-urlencoded'</span>);</div><div class="line">	<span class="comment">//发送ajax请求（包括post数据的传输）</span></div><div class="line">	type == <span class="string">"get"</span> ?ajx.send():ajx.send(aJson.data);</div><div class="line">	</div><div class="line">	<span class="comment">//处理请求</span></div><div class="line">	ajx.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params">aJson</span>)</span>&#123;</div><div class="line">		</div><div class="line">	<span class="keyword">if</span>(ajx.readState == <span class="number">4</span>)&#123;</div><div class="line">			</div><div class="line">		<span class="keyword">if</span> (ajx.status == <span class="number">200</span> &amp;&amp; ajx.status&lt;<span class="number">300</span>)<span class="comment">//200是HTTP 请求成功的状态码</span></div><div class="line">		&#123;</div><div class="line">			<span class="comment">//请求成功处理数据</span></div><div class="line">			success &amp;&amp; success(ajx.responseText);</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			alert(<span class="string">"请求出错"</span>+ajx.status);</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h4 id="jQuery中的Ajax的一些方法"><a href="#jQuery中的Ajax的一些方法" class="headerlink" title="jQuery中的Ajax的一些方法"></a>jQuery中的Ajax的一些方法</h4><hr>
<p><code>jquery</code>对<code>Ajax</code>操作进行了封装，在<code>jquery</code>中的<code>$.ajax()</code>方法属于最底层的方法，第<code>2</code>层是<code>load()</code>、<code>$.get()</code>、<code>$.post();</code>第<code>3</code>层是<code>$.getScript()</code>、<code>$.getJSON()</code>，第<code>2</code>层使用频率很高 </p>
<h5 id="load-方法"><a href="#load-方法" class="headerlink" title="load()方法"></a><code>load()</code>方法</h5><hr>
<ul>
<li><code>load()</code>方法是<code>jquery</code>中最简单和常用的<code>ajax</code>方法，能载入远程<code>HTML</code>代码并插入<code>DOM</code>中 结构为：<code>load(url,[data],[callback])</code><ul>
<li>使用<code>url</code>参数指定选择符可以加载页面内的某些元素 <code>load</code>方法中<code>url</code>语法：<code>url selector</code> 注意：<code>url</code>和选择器之间有一个空格</li>
</ul>
</li>
<li>传递方式<ul>
<li><code>load()</code>方法的传递方式根据参数<code>data</code>来自动指定，如果没有参数传递，则采用<code>GET</code>方式传递，反之，采用<code>POST</code></li>
</ul>
</li>
<li>回调参数<ul>
<li>必须在加载完成后才执行的操作，该函数有三个参数 分别代表请求返回的内容、请求状态、<code>XMLHttpRequest</code>对象</li>
<li>只要请求完成，回调函数就会被触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#testTest"</span>).load(<span class="string">"test.html"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">responseText,textStatus,XMLHttpRequest</span>)</span>&#123;</div><div class="line">    <span class="comment">//respnoseText 请求返回的内容</span></div><div class="line">    <span class="comment">//textStatus 请求状态 ：sucess、error、notmodified、timeout</span></div><div class="line">    <span class="comment">//XMLHttpRequest </span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><strong>load方法参数</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数名称</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>请求<code>HTML</code>页面的<code>URL</code>地址</td>
</tr>
<tr>
<td><code>data(可选)</code></td>
<td><code>Object</code></td>
<td>发送至服务器的<code>key</code> / <code>value</code>数据</td>
</tr>
<tr>
<td><code>callback(可选)</code></td>
<td><code>Function</code></td>
<td>请求完成时的回调函数，无论是请求成功还是失败</td>
</tr>
</tbody>
</table>
<h5 id="get-和-post-方法"><a href="#get-和-post-方法" class="headerlink" title="$.get()和$.post()方法"></a><code>$.get()</code>和<code>$.post()</code>方法</h5><hr>
<p><code>load()</code>方法通常用来从web服务器上获取静态的数据文件。在项目中需要传递一些参数给服务器中的页面，那么可以使用<code>$.get()</code>和<code>$.post()</code>或<code>$.ajax()</code>方法</p>
<ul>
<li><p>注意：<code>$.get()</code>和<code>$.post()</code>方法是<code>jquery</code>中的全局函数</p>
</li>
<li><p><strong>$.get()方法</strong></p>
<ul>
<li><code>$.get()</code>方法使用<code>GET</code>方式来进行异步请求</li>
<li>结构为：<code>$.get(url,[data],callback,type)</code><ul>
<li>如果服务器返回的内容格式是<code>xml</code>文档，需要在服务器端设置<code>Content-Type</code>类型 代码如下：<code>header(&quot;Content-Type:text/xml:charset=utf-8&quot;)</code> //<code>php</code></li>
</ul>
</li>
</ul>
</li>
<li><strong><code>$.get()</code>方法参数解析</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>请求<code>HTML</code>页的地址</td>
</tr>
<tr>
<td><code>data(可选)</code></td>
<td><code>Object</code></td>
<td>发送至服务器的<code>key</code>/ <code>value</code> 数据会作为<code>QueryString</code>附加到请求URL中</td>
</tr>
<tr>
<td><code>callback(可选)</code></td>
<td><code>Function</code></td>
<td>载入成功的回调函数（只有当<code>Response</code>的返回状态是success才调用该方法）</td>
</tr>
<tr>
<td><code>type(可选)</code></td>
<td><code>String</code></td>
<td>服务器返回内容的格式，包括<code>xml</code>、<code>html</code>、<code>script</code>、<code>json</code>、<code>text</code>和<code>_default</code></td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong>$.post()方法</strong></p>
<ul>
<li>它与<code>$.get()</code>方法的结构和使用方式相同，有如下区别<ul>
<li><code>GET</code>请求会将参数跟张乃URL后进行传递，而<code>POST</code>请求则是作为<code>Http</code>消息的实体内容发送给web服务器，在<code>ajax</code>请求中，这种区别对用户不可见<ul>
<li><code>GET</code>方式对传输数据有大小限制（通常不能大于<code>2KB</code>），而使用<code>POST</code>方式传递的数据量要比<code>GET</code>方式大得多（理论不受限制）</li>
<li><code>GET</code>方式请求的数据会被浏览器缓存起来，因此其他人可以从浏览器的历史纪录中读取这些数据，如：账号、密码。在某种情况下，<code>GET</code>方式会带来严重的安全问题，而<code>POST</code>相对来说可以避免这些问题</li>
<li><code>GET</code>和<code>POST</code>方式传递的数据在服务端的获取也不相同。在<code>PHP</code>中，<code>GET</code>方式用<code>$_GET[]</code>获取；<code>POST</code>方式用<code>$_POST[]</code>获取;两种方式都可用<code>$_REQUEST[]</code>来获取 </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>总结</strong></p>
<ul>
<li>使用<code>load()</code>、<code>$.get()</code>和<code>$.post()</code>方法完成了一些常规的<code>Ajax</code>程序，如果还需要复杂的<code>Ajax</code>程序，就需要用到<code>$.ajax()</code>方式</li>
</ul>
</li>
</ul>
<h5 id="ajax-方法"><a href="#ajax-方法" class="headerlink" title="$.ajax()方法"></a>$.ajax()方法</h5><hr>
<ul>
<li><code>$.ajax()</code>方法是<code>jquery</code>最底层的<code>Ajax</code>实现，它的结构为<code>$.ajax(options)</code></li>
<li>该方法只有一个参数，但在这个对象里包含了<code>$.ajax()</code>方式所需要的请求设置以及回调函等信息，参数以<code>key</code> / <code>value</code>存在，所有参数都是可选的</li>
<li><strong>$.ajax()方式常用参数解析</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>(默认为当前页地址)发送请求的地址</td>
</tr>
<tr>
<td><code>type</code></td>
<td><code>String</code></td>
<td>请求方式（<code>POST</code>或<code>GET</code>）默认为<code>GET</code></td>
</tr>
<tr>
<td><code>timeout</code></td>
<td><code>Number</code></td>
<td>设置请求超时时间（毫秒）</td>
</tr>
<tr>
<td><code>dataType</code></td>
<td><code>String</code></td>
<td>预期服务器返回的类型。可用的类型如下<br><br> <strong>xml</strong>:返回<code>XML</code>文档，可用<code>jquery</code>处理<br><strong>html</strong>:返回纯文本的<code>HTML</code>信息，包含的<code>script</code>标签也会在插入<code>DOM</code>时执行<br><strong>script</strong>：返回纯文本的<code>javascript</code>代码。不会自动缓存结果，除非设置<code>cache</code>参数。注意：在远程请求时，所有的<code>POST</code>请求都将转为<code>GET</code>请求<br><strong>json</strong>:返回<code>JSON</code>数据<br><strong>jsonp</strong>:<code>JSONP</code>格式，使用<code>jsonp</code>形式调用函数时，例如：<code>myurl?call back=?,jquery</code>将自动替换后一个<code>？</code>为正确的函数名，以执行回调函数<br><strong>text</strong>:返回纯文本字符串</td>
</tr>
<tr>
<td><code>beforeSend</code></td>
<td><code>Function</code></td>
<td>发送请求前可以修改<code>XMLHttpRequest</code>对象的函数，例如添加自定义<code>HTTP</code>头。在<code>beforeSend</code>中如果返回<code>false</code>可以取消本次<code>Ajax</code>请求。<code>XMLHttpRequest</code>对象是唯一的参数<br> function(XMLHttpRequest){<br>          <code>this</code>;//调用本次<code>Ajax</code>请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>complete</code></td>
<td><code>Function</code></td>
<td>请求完成后的回调函数（请求成功或失败时都调用）<br> 参数：<code>XMLHttpRequest</code>对象和一个描述成功请求类型的字符串<br>function(XMLHttpRequest,textStatus){<br>         <code>this</code>;//调用本次Ajax请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>success</code></td>
<td><code>Function</code></td>
<td>请求成功后调用的回调函数，有两个参数<br>(1)由服务器返回，并根据<code>dataTyppe</code>参数进行处理后的数据<br>(2)描述状态的字符串<br><code>function</code>(data,textStatus){<br>         //<code>data</code>可能是<code>xmlDoc、``jsonObj</code>、<code>html</code>、<code>text</code>等<br>         <code>this</code>;//调用本次<code>Ajax</code>请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>error</code></td>
<td><code>Function</code></td>
<td>请求失败时被调用的函数</td>
</tr>
<tr>
<td><code>global</code></td>
<td><code>Boolean</code></td>
<td>默认为<code>true</code>。表示是否触发全局<code>Ajax</code>事件，设置为<code>false</code>将不会触发。<code>AjaxStart</code>或<code>AjaxStop</code>可用于控制各种<code>Ajax</code>事件</td>
</tr>
</tbody>
</table>
<ul>
<li>参考<ul>
<li>锋利的<code>jQuery</code></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文出处 &lt;a href=&quot;http://blog.poetries.top/2016/11/26/Ajax-summary&quot;&gt;http://blog.poetries.top/2016/11/26/Ajax-summary&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文主要总结整理&lt;code&gt;Ajax&lt;/code&gt;的一些常用的基础知识，适合初学者。&lt;/p&gt;
&lt;h3 id=&quot;一、Ajax简介、优劣势、应用场景以及技术&quot;&gt;&lt;a href=&quot;#一、Ajax简介、优劣势、应用场景以及技术&quot; class=&quot;headerlink&quot; title=&quot;一、Ajax简介、优劣势、应用场景以及技术&quot;&gt;&lt;/a&gt;一、Ajax简介、优劣势、应用场景以及技术&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Ajax简介 :&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Asynchronous Javascript And XML&lt;/code&gt; （异步的&lt;br&gt;&lt;code&gt;JavaScript&lt;/code&gt;和&lt;code&gt;XML&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;它并不是一种单一的技术，而是有机利用一系列交互式网页应用相关的技术所形成的结合体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AJAX&lt;/code&gt; 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，&lt;code&gt;AJAX&lt;/code&gt; 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="Ajax" scheme="http://www.poetries.top/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>前端开发的一些实践规范</title>
    <link href="http://www.poetries.top/2016/11/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%80%E4%BA%9B%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.poetries.top/2016/11/23/前端开发一些实践/</id>
    <published>2016-11-23T08:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、HTML实践"><a href="#一、HTML实践" class="headerlink" title="一、HTML实践"></a>一、HTML实践</h3><hr>
<ul>
<li>使用标准的<code>HTML5</code>简化的定义的方式<ul>
<li>定义文档类型  <code>&lt;!DOCTYPE html&gt;</code></li>
<li>定义页面的编码 <code>&lt;meata charset=&quot;UTF-8&quot;&gt;</code></li>
<li>样式和页脚的引用，不需要写<code>type</code>类型，如<code>link</code> <code>script</code></li>
</ul>
</li>
<li>停止使用不标准的标签和属性，如<code>mqrquee</code></li>
<li>不推荐在<code>HTML</code>标签中添加样式属性，如<code>img</code>标签中添加宽高</li>
<li>不要使用<code>@import</code>，此方式最大的缺点是引用<code>css</code>文件不能同时并行下载<a id="more"></a></li>
<li>增加<code>JavaScript</code>禁用的提示信息，最常用的方式是使用<code>&lt;noscript&gt;</code></li>
<li>添加必要的<code>meta</code>标签</li>
<li>使用频率较高的语义化标签<ul>
<li><code>p</code> <code>ul</code> <code>dl</code> <code>p</code> <code>em</code> <code>strong</code> <code>table</code> <code>site</code> <code>blockquote</code></li>
<li><code>nav</code> <code>header</code> <code>footer</code> <code>article</code> <code>section</code> <code>aside</code> <code>hground</code></li>
</ul>
</li>
<li>样式和结构的分离：把<code>HTML</code>中用于表达外观的部分从HTML中删除，并用css实现。如<code>&lt;span&gt;|&lt;/span&gt;</code>中的<code>|</code> 用css的伪类实现即可</li>
<li>如果图片作为页面内容的一部分，应该使用<code>img</code>标签，如果图片仅仅是装饰作用，应该使用背景图片方式</li>
<li>提高表单易用性的手段<ul>
<li>使用<code>label</code>标签，并设置<code>label</code>标签的<code>for</code>属性</li>
<li>给输入控件设置合理的<code>placehoder</code></li>
<li>如有必要，给输入控件设置<code>tab</code>顺序，<code>tabindex</code>用来设置输入控件的切换顺序   <code>&lt;input type=&quot;text&quot; tabindex=&quot;2&quot;&gt;</code></li>
<li>使用<code>HTML5</code>中引入的表单控件<code>url email date search</code> </li>
<li>精简<code>HTML</code>代码</li>
<li>删除多余的容器</li>
<li>装饰性的元素使用<code>css</code>实现</li>
<li>避免使用<code>table</code>布局</li>
</ul>
</li>
</ul>
<h3 id="二、CSS实践"><a href="#二、CSS实践" class="headerlink" title="二、CSS实践"></a>二、CSS实践</h3><hr>
<ul>
<li>推荐的<code>css</code>类的命名规则和元素的<code>id</code>命名规则相似，只是组成类名的关键字的连接符为中划线<code>-</code> <code>.reder-content-title</code><ul>
<li>为了避免<code>class</code>命名的重复，命名时取父元素的<code>class</code>作为前缀</li>
</ul>
</li>
<li>使用<code>css reset</code>统一浏览器的显示效果</li>
<li>给<code>css</code>样式定义排序，最佳是按类型分组排序<ul>
<li>显示与浮动、定位、尺寸、边框相关属性、字体样式、背景、其他样式</li>
</ul>
</li>
<li>合理利用<code>css</code>的权重，提高代码的重用性<ul>
<li><code>css</code>样式中尽量不要使用<code>ID</code>选择器，最佳实践尽可能使用较低权重的选择器作为基础样式</li>
<li>减少自选择器的层级</li>
<li>使用组合的<code>css</code>选择器</li>
<li><code>em</code> <code>px</code> <code>%</code><ul>
<li><code>w3c</code>把尺寸单位分为相对长度单位和绝对长度单位两种。</li>
<li>相对长度单位又分为字体相对单位和视窗相对单位<ul>
<li>字体相对单位包括：<code>em</code> <code>ex</code> <code>ch</code> <code>rem</code></li>
<li>视窗相对单位包括：<code>vw</code>  <code>vh</code> <code>vmin</code> <code>vmax</code></li>
<li>使用最广泛的是<code>em</code> <code>px</code> 百分比</li>
</ul>
</li>
<li><code>em</code>计算是相对自身元素的字体尺寸的，<code>rem</code>相对于根元素的字体大小计算， 百分比是相对于父元素的尺寸的</li>
<li>如何设置元素的尺寸和字体大小最佳实践<ul>
<li>尽量设置相对尺寸（局部的尺寸要尽量使用相对尺寸，即局部自适应）</li>
<li>只有在可预知元素尺寸的情况下才使用绝对尺寸</li>
<li>使用<code>em</code>设置字体大小</li>
</ul>
</li>
</ul>
</li>
<li><code>css</code>选择器定义最佳实践<ul>
<li>避免使用通配符</li>
<li>避免使用标签选择器及单个属性选择器作为关键选择器</li>
<li>不要在<code>id</code>选择器前使用标签名</li>
<li>尽量不要使在选择符中定义过多的层级，最好不要超过三层</li>
</ul>
</li>
</ul>
</li>
<li><code>css</code>相关图片处理<ul>
<li>不要设置图片尺寸</li>
<li>使用<code>css</code>雪碧图技术</li>
<li>减少<code>css</code>代码量<ul>
<li>定义简洁的<code>css</code>规则</li>
<li>合并相关的<code>css</code>规则</li>
<li>定义简洁的属性值合并相同的定义</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="三、JavaScript实践"><a href="#三、JavaScript实践" class="headerlink" title="三、JavaScript实践"></a>三、JavaScript实践</h3><hr>
<ul>
<li>避免定义全局变量或函数<ul>
<li>使用<code>var</code></li>
<li>使用<code>JavaScript</code>的严格模式<code>use strict;</code></li>
</ul>
</li>
<li>使用简化的编码方式<ul>
<li>对象创建<code>pserson={age:22,name:&quot;poetries&quot;}</code></li>
<li>数组创建<code>list=[12,23,55]</code></li>
</ul>
</li>
<li>使用<code>===</code>和<code>!==</code>而不是<code>==</code>和<code>!=</code></li>
<li>避免使用<code>with</code>语句和<code>eval()</code></li>
<li>使用更严格的编码格式<ul>
<li>使用严格模式遵循：<ul>
<li>不要在全局中启用严格模式</li>
<li>在已有代码中谨慎使用严格模式</li>
</ul>
</li>
<li>严格模式主要对不合理的地方做了改进<ul>
<li>禁用<code>width</code>关键字</li>
<li>防止意外的全局变量</li>
<li>函数中的<code>this</code>不在默认指向全局</li>
<li>防止函数参数重命名</li>
<li>更安全的使用<code>eval()</code></li>
</ul>
</li>
<li>事件处理和业务逻辑相分离</li>
<li>配置数据和代码逻辑相分离</li>
<li>逻辑与结构相似相分离<ul>
<li>从<code>JavaScript</code>逻辑中分离<code>css</code>样式</li>
<li>从<code>JavaScript</code>中分离<code>HTML</code>结构</li>
</ul>
</li>
<li><code>JavaScript</code>模块化的开发，提高代码的可维护性<ul>
<li><code>JavaScript</code>的两种模块化规范 <code>ComonJS</code> <code>AMD</code></li>
<li>两者的主要区别在加载模块的方式上</li>
<li><code>ComonJS</code> 以同步的方式加载，使用<code>require()</code>方法来加载模块</li>
<li><code>AMD</code>以异步的方式加载模块</li>
</ul>
</li>
</ul>
</li>
<li>合理使用<code>Ajax</code>技术，适合的使用场景有<ul>
<li>前端会根据用户的需求动态取得后端数据，然后更新网页界面</li>
<li>期望通过不刷新页面取得任何资源或页面</li>
<li>动态进行用户输入的认证</li>
</ul>
</li>
</ul>
<h3 id="四、附录"><a href="#四、附录" class="headerlink" title="四、附录"></a>四、附录</h3><hr>
<h4 id="附录一-DIV命名规范"><a href="#附录一-DIV命名规范" class="headerlink" title="附录一 DIV命名规范"></a>附录一 DIV命名规范</h4><hr>
<ul>
<li><p>企业<code>DIV</code>使用频率高的命名方法</p>
</li>
<li><p><strong>网页内容类</strong></p>
<ul>
<li><p>标题: <code>title</code></p>
<ul>
<li>摘要: <code>summary</code></li>
<li>箭头： <code>arrow</code></li>
<li>商标： <code>label</code></li>
<li>网站标志： <code>logo</code></li>
<li>转角/圆角：<code>corner</code></li>
<li>横幅广告： <code>banner</code></li>
<li>子菜单： <code>subMenu</code></li>
<li>搜索： <code>search</code></li>
<li>搜索框： <code>searchBox</code></li>
<li>登录： <code>login</code></li>
<li>登录条：<code>loginbar</code></li>
<li>工具条： <code>toolbar</code></li>
<li>下拉： <code>drop</code></li>
<li>标签页： <code>tab</code></li>
<li>当前的： <code>current</code></li>
<li>列表： <code>list</code></li>
<li>滚动： <code>scroll</code></li>
<li>服务： <code>service</code></li>
<li>提示信息： <code>msg</code></li>
<li>热点：<code>hot</code></li>
<li>新闻： <code>news</code></li>
<li>小技巧： <code>tips</code></li>
<li>下载： <code>download</code></li>
<li>栏目标题： <code>title</code></li>
<li>热点： <code>hot</code></li>
<li>加入：<code>joinus</code></li>
<li>注册： <code>regsiter</code></li>
<li>指南： <code>guide</code></li>
<li>友情链接： <code>friendlink</code></li>
<li>状态： <code>status</code></li>
<li>版权： <code>copyright</code></li>
<li>按钮： <code>btn</code></li>
<li>合作伙伴： <code>partner</code></li>
<li>投票： <code>vote</code></li>
<li>左右中：<code>left</code>  <code>right</code>  <code>center</code></li>
</ul>
<hr>
</li>
<li>注释的写法: <code>/* Footer */</code> 内容区<code>/* End Footer */</code></li>
</ul>
</li>
<li><p><strong>id的命名:</strong></p>
<ul>
<li><p>页面结构</p>
<ul>
<li>容器: <code>container</code></li>
<li>页头：<code>header</code></li>
<li>内容：<code>content</code>/<code>container</code></li>
<li>页面主体：<code>main</code></li>
<li>页尾：<code>footer</code></li>
<li>导航：<code>nav</code></li>
<li>侧栏：<code>sidebar</code></li>
<li>栏目：<code>column</code></li>
<li>页面外围控制整体布局宽度：<code>wrapper</code></li>
<li>左右中：<code>left</code> <code>right</code> <code>center</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>导航</p>
<ul>
<li>导航：<code>nav</code></li>
<li>主导航：<code>mainbav</code></li>
<li>子导航：<code>subnav</code></li>
<li>顶导航：<code>topnav</code></li>
<li>边导航：<code>sidebar</code></li>
<li>左导航：<code>leftsidebar</code></li>
<li>右导航：<code>rightsidebar</code></li>
<li>菜单：<code>menu</code></li>
<li>子菜单：<code>submenu</code></li>
<li>标题: <code>title</code></li>
<li>摘要: <code>summary</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>功能</p>
<ul>
<li>标志：<code>logo</code></li>
<li>广告：<code>banner</code></li>
<li>登陆：<code>login</code></li>
<li>登录条：<code>loginbar</code></li>
<li>注册：<code>regsiter</code></li>
<li>搜索：<code>search</code></li>
<li>功能区：<code>shop</code></li>
<li>标题：<code>title</code></li>
<li>加入：<code>joinus</code></li>
<li>状态：<code>status</code></li>
<li>按钮：<code>btn</code></li>
<li>滚动：<code>scroll</code></li>
<li>标签页：<code>tab</code></li>
<li>文章列表：<code>list</code></li>
<li>提示信息：<code>msg</code></li>
<li>当前的:<code>current</code></li>
<li>小技巧：<code>tips</code></li>
<li>图标: <code>icon</code></li>
<li>注释：<code>note</code></li>
<li>指南：<code>guild</code></li>
<li>服务：<code>service</code></li>
<li>热点：<code>hot</code></li>
<li>新闻：<code>news</code></li>
<li>下载：<code>download</code></li>
<li>投票：<code>vote</code></li>
<li>合作伙伴：<code>partner</code></li>
<li>友情链接：<code>link</code></li>
<li>版权：<code>copyright</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p><strong><code>class</code>的命名:</strong></p>
<ul>
<li><p>颜色:使用颜色的名称或者16进制代码,如</p>
<ul>
<li><code>.red { color: red; }</code></li>
<li><code>.f60 { color: #f60; }</code></li>
<li><code>.ff8600 { color: #ff8600; }</code></li>
</ul>
</li>
<li><p>字体大小,直接使用”font+字体大小”作为名称,如</p>
<ul>
<li><code>.font12px { font-size: 12px; }</code></li>
<li><code>.font9px {font-size: 9pt; }</code></li>
</ul>
</li>
<li><p>对齐样式,使用对齐目标的英文名称,如</p>
<ul>
<li><code>.left { float:left; }</code></li>
<li><code>.bottom { float:bottom; }</code></li>
</ul>
</li>
<li><p>标题栏样式,使用”类别+功能”的方式命名,如</p>
<ul>
<li><code>.barnews { }</code></li>
<li><code>.barproduct { }</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p><strong>注意事项::</strong></p>
<ul>
<li>一律小写;</li>
<li>尽量用英文;</li>
<li>不加中杠和下划线;</li>
<li>尽量不缩写，除非一看就明白的单词.</li>
</ul>
</li>
</ul>
<hr>
</li>
</ul>
</li>
<li><p><strong>推荐的 <code>CSS</code> 书写顺序：</strong></p>
<ul>
<li><p>显示属性</p>
<ul>
<li><code>display</code></li>
<li><code>list-style</code></li>
<li><code>position</code></li>
<li><code>float</code></li>
<li><code>clear</code></li>
</ul>
</li>
<li><p>自身属性</p>
<ul>
<li><code>width</code></li>
<li><code>height</code></li>
<li><code>margin</code></li>
<li><code>padding</code></li>
<li><code>border</code></li>
<li><code>background</code></li>
</ul>
</li>
<li><p>文本属性</p>
<ul>
<li><code>color</code></li>
<li><code>font</code></li>
<li><code>text-decoration</code></li>
<li><code>text-align</code></li>
<li><code>vertical-align</code></li>
<li><code>white-space</code></li>
<li><code>other text</code></li>
<li><code>content</code>    </li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="附录二-CSS精灵"><a href="#附录二-CSS精灵" class="headerlink" title="附录二 CSS精灵"></a>附录二 CSS精灵</h4><hr>
<ul>
<li>CSS精灵原理以及应用<ul>
<li><code>CSS</code>雪碧的基本原理是把你的网站上用到的一些图片整合到一张单独的图片中，从而减少你的网站的HTTP请求数量。<ul>
<li>该图片使用<code>CSS</code>   <code>background和background-position</code>属性渲染，这也就意味着你的标签变得更加复杂了，图片是在<code>CSS</code>中定义，而非<code>&lt;img&gt;</code>标签。</li>
</ul>
</li>
</ul>
</li>
<li>一个简单的例子：<ul>
<li>一张图片作出一个按钮的三个状态</li>
<li>一个链接用<code>CSS</code>做成按钮的样式，我们可以使用同一张图片，完成按钮的三个状态，<code>a:link</code>，<code>a:hover</code>，<code>a:active</code> <code>&lt;a class=&quot;button&quot; href=&quot;#&quot;&gt;链接&lt;/a&gt;</code></li>
<li>加入右侧的图片为：<code>200px 65px</code>的三个按钮图拼合而成的图片<code>button.png</code>，从上到下一次为按钮的普通、鼠标滑过、鼠标点击的状态。则可以使用<code>CSS</code>进行定义。</li>
</ul>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">display</span>:block; </div><div class="line">    <span class="attribute">width</span>:<span class="number">200px</span>; </div><div class="line">    <span class="attribute">height</span>:<span class="number">65px</span>; </div><div class="line">    <span class="attribute">line-height</span>:<span class="number">65px</span>; <span class="comment">/*定义状态*/</span></div><div class="line">    <span class="attribute">text-indent</span>:-<span class="number">2015px</span>; <span class="comment">/*隐藏文字*/</span></div><div class="line">    <span class="attribute">background-image</span>:<span class="built_in">url</span>(button.png); <span class="comment">/*定义背景图片*/</span></div><div class="line">    <span class="attribute">background-position</span>:<span class="number">0</span> <span class="number">0</span>;</div><div class="line">    <span class="comment">/*定义链接的普通状态，此时图像显示的是顶上的部分*/</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">66px</span>;</div><div class="line">    <span class="comment">/*定义链接的滑过状态，此时显示的为中间部分，向下取负值*/</span></div><div class="line">&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</div><div class="line">    <span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">132px</span>;                      </div><div class="line">    <span class="comment">/*定 义链接的普通状态，此时显示的是底部的部分，向下取负值*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>更多的<code>CSS</code>雪碧，图片更复杂，背景定位更精确。可能会用到大量的数值<ul>
<li>如：<code>background:url(nav.png) -180px 24pxno-repeat</code>; 来达到更精确的定位</li>
</ul>
</li>
<li><strong>优点：</strong><ul>
<li>减少加载网页图片时对服务器的请求次数</li>
<li>可以合并多数背景图片和小图标，方便在任何位置使用，这样不同位置的请求只需要调用一个图片，从而减少对服务器的请求次数，降低服务器压力，同时提高了页面的加载速度，节约服务器的流量。</li>
<li>提高页面的加载速度</li>
<li><code>sprite</code>技术的其中一个好处是图片的加载时间(在有许多 <code>sprite</code> 时，单张图片的加载时间)。由所需图片拼成的一张 <code>GIF</code>图片的尺寸会明显小于所有图片拼合前的大小。单张的 <code>GIF</code>只有相关的一个色表，而单独分割的每一张 <code>GIF</code> 都有自己的一个色表，这就增加了总体的大小。因此，单独的一张 <code>JPEG</code> 或者 <code>PNG</code> <code>sprite</code> 在大小上非常可能比把一张图分成多张得来的图片总尺寸小。</li>
<li>减少鼠标滑过的一些<code>bug</code></li>
<li><code>IE6</code>不会主动预加载鼠标滑过即<code>a:hover</code>中的背景图片，所以，如果使用多张图片，鼠标滑过会出现闪白的现象。使用<code>CSS</code>雪碧，由于一张图片即可，所以不会出现这种现象。</li>
</ul>
</li>
<li>不足：<ul>
<li><code>CSS</code>雪碧的最大问题是内存使用</li>
<li>影响浏览器的缩放功能</li>
<li>拼图维护比较麻烦</li>
<li>使<code>CSS</code>的编写变得困难</li>
<li><code>CSS</code> 雪碧调用的图片不能被打印</li>
<li>错误得使用 <code>Sprites</code> 影响可访问性</li>
</ul>
</li>
</ul>
<h4 id="附录三-一些tips解决方案"><a href="#附录三-一些tips解决方案" class="headerlink" title="附录三 一些tips解决方案"></a>附录三 一些tips解决方案</h4><hr>
<h5 id="页面优化实践"><a href="#页面优化实践" class="headerlink" title="页面优化实践"></a>页面优化实践</h5><hr>
<ul>
<li><p>从下面的几个方面可以进行页面的优化：</p>
<ul>
<li>减少请求数</li>
<li>图片合并</li>
<li><code>CSS</code>文件合并</li>
<li>减少内联样式</li>
<li>避免在 <code>CSS</code>中使用 <code>import</code></li>
<li>减少文件大小</li>
<li>选择适合的图片格式</li>
<li>图片压缩</li>
<li><code>CSS</code> 值缩写（<code>Shorthand Property</code>)</li>
<li>文件压缩</li>
<li>页面性能</li>
<li>调整文件加载顺序</li>
<li>减少标签数量</li>
<li>调整选择器长度</li>
<li>尽量使用<code>CSS</code> 制作显示表现</li>
<li>增强代码可读性与可维护性</li>
<li>规范化</li>
<li>语义化</li>
<li>模块化</li>
</ul>
</li>
</ul>
<h5 id="写DIV-CSS-的一些常识"><a href="#写DIV-CSS-的一些常识" class="headerlink" title="写DIV+CSS 的一些常识"></a>写DIV+CSS 的一些常识</h5><hr>
<ul>
<li><p>不要使用过小的图片做背景平铺</p>
<ul>
<li>这就是为何很多人都不用 <code>1px</code> 的原因，这才知晓。宽高 <code>1px</code> 的图片平铺出一个宽高 <code>200px</code> 的区域，需要 <code>200200=40, 000</code> 次，占用资源</li>
</ul>
</li>
<li><p>无边框</p>
<ul>
<li>推荐的写法是 <code>border:none</code>;，哈哈，我一直在用这个。 <code>border:0;</code> 只是定义边框宽度为零，但边框样式、颜色还是会被浏览器解析，占用资源</li>
</ul>
</li>
<li><p>慎用 通配符</p>
<ul>
<li>所谓通配符，就是将<code>CSS</code> 中的所有标签均初始化，不管用的不用的，过时的先进的，一视同仁，这样，大大的占用资源。要有选择的初始化标签。</li>
</ul>
</li>
<li><p><code>CSS</code>的十六进制颜色代码缩写</p>
<ul>
<li>习惯了缩写及小写，这才知道，原来不是推荐的写法，为的是减少解析所占用的资源。但同时会增加文件体积。孰优孰劣，有待仔细考证。</li>
</ul>
</li>
<li><p>样式放头上，脚本放脚下。不内嵌，只外链</p>
</li>
<li><p>坚决不用 <code>CSS</code>表达式</p>
</li>
<li><p>使用 引用样式表，而不是通过<code>@import</code> 导入。</p>
</li>
<li><p>一般来说，<code>PNG</code>比 <code>GIF</code> 要小，小得多。再者，<code>GIF</code> 中有多少颜色是被浪费的，很值得优化。</p>
</li>
<li><p>千万不要在 <code>HTML</code>中缩放图片，一者不好看，二者占资源。</p>
</li>
<li><p>正文字体最好用偶数</p>
<ul>
<li><code>12px</code>、<code>14px</code>、<code>16px</code>，效果非常好。特例，<code>15px</code>。</li>
</ul>
</li>
<li><p><code>block</code>、<code>ul</code>、<code>ol</code>等上下留出至少一倍行距，左侧至少两倍行距，右侧随意。</p>
</li>
<li><p>段落之间，至少要有一倍行距</p>
</li>
<li><p>强行指定某些元素的 <code>line-height</code>，正文 <code>1.6</code>倍于文字大小，标题<code>1.3</code>倍。</p>
</li>
<li><p>中文标点用全角</p>
<ul>
<li>英文夹杂在中文中，左右空格，半角。</li>
</ul>
</li>
<li><p>中文字体的粗体和斜体，远离较好</p>
</li>
<li><p><strong>[建议] HTML 标签的使用应该遵循标签的语义</strong></p>
<ul>
<li>下面是常见标签语义<ul>
<li><code>p</code> - 段落</li>
<li><code>h1,h2,h3,h4,h5,h6</code> - 层级标题</li>
<li><code>strong,em</code> - 强调</li>
<li><code>ins</code> - 插入</li>
<li><code>del</code> - 删除</li>
<li><code>abbr</code>- 缩写</li>
<li><code>code</code> - 代码标识</li>
<li><code>cite</code> - 引述来源作品的标题</li>
<li><code>q</code> - 引用</li>
<li><code>blockquote</code> - 一段或长篇引用</li>
<li><code>ul</code> - 无序列表</li>
<li><code>ol</code> - 有序列表</li>
<li><code>dl,dt,dd</code> - 定义列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="常用代码片段"><a href="#常用代码片段" class="headerlink" title="常用代码片段"></a>常用代码片段</h5><hr>
<ul>
<li>雅虎工程师提供的<code>CSS</code>初始化示例代码【仅供参考】<ul>
<li>可以在<code>html</code>头文件中直接引用，从而避免浏览器的不兼容带来的错误。</li>
</ul>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">body,</div><div class="line">div,</div><div class="line">dl,</div><div class="line">dt,</div><div class="line">dd,</div><div class="line">ul,</div><div class="line">ol,</div><div class="line">li,</div><div class="line">h1,</div><div class="line">h2,</div><div class="line">h3,</div><div class="line">h4,</div><div class="line">h5,</div><div class="line">h6,</div><div class="line">pre,</div><div class="line">code,</div><div class="line">form,</div><div class="line">fieldset,</div><div class="line">legend,</div><div class="line">input,</div><div class="line">button,</div><div class="line">textarea,</div><div class="line">p,</div><div class="line">blockquote,</div><div class="line">th,</div><div class="line">td &#123; </div><div class="line">    margin:0; padding:0; </div><div class="line">&#125;</div><div class="line">body &#123;</div><div class="line">    background:#fff; </div><div class="line">    color:#555; </div><div class="line">    font-size:14px; </div><div class="line">    font-family: Verdana, Arial, Helvetica, sans-serif; </div><div class="line">&#125;</div><div class="line">td,</div><div class="line">th,</div><div class="line">caption &#123; </div><div class="line">    font-size:14px;</div><div class="line">&#125;</div><div class="line">h1, </div><div class="line">h2, </div><div class="line">h3, </div><div class="line">h4, </div><div class="line">h5, </div><div class="line">h6 &#123; </div><div class="line">    font-weight:normal; </div><div class="line">    font-size:100%; </div><div class="line">&#125;</div><div class="line"></div><div class="line">address, </div><div class="line">caption,</div><div class="line">cite, </div><div class="line">code, </div><div class="line">dfn, </div><div class="line">em, </div><div class="line">strong,</div><div class="line">th, </div><div class="line">var &#123; </div><div class="line">    font-style:normal; </div><div class="line">    font-weight:normal;</div><div class="line">&#125;</div><div class="line">a &#123; </div><div class="line">    color:#555; </div><div class="line">    text-decoration:none; </div><div class="line">&#125;</div><div class="line">a:hover &#123; </div><div class="line">    text-decoration:underline; </div><div class="line">&#125;</div><div class="line">img &#123;</div><div class="line">    border:none;</div><div class="line">&#125;</div><div class="line">ol,ul,li &#123; </div><div class="line">    list-style:none; </div><div class="line">&#125;</div><div class="line">input, </div><div class="line">textarea, </div><div class="line">select, </div><div class="line">button &#123; </div><div class="line">    font:14px Verdana,Helvetica,Arial,sans-serif; </div><div class="line">&#125;</div><div class="line">table &#123; </div><div class="line">    border-collapse:collapse; </div><div class="line">&#125;</div><div class="line">html &#123;</div><div class="line">    overflow-y: scroll;</div><div class="line">&#125; </div><div class="line">.clearfix:after &#123;</div><div class="line">    content: "."; </div><div class="line">    display: block; </div><div class="line">    height:0; </div><div class="line">    clear:both; </div><div class="line">    visibility: hidden;</div><div class="line">&#125;</div><div class="line">.clearfix &#123; </div><div class="line">    *zoom:1; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>现代浏览器<code>cssreset</code>解决方案【推荐使用这个】</p>
<ul>
<li><a href="https://necolas.github.io/normalize.css/" target="_blank" rel="external">normalize.css</a></li>
</ul>
</li>
<li><p><code>mobile meta</code>标签</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">”viewport”</span> <span class="attr">content</span>=<span class="string">”width</span>=<span class="string">320,target-densitydpi</span>=<span class="string">dpi_value,initial-scale</span>=<span class="string">1,</span> <span class="attr">user-scalable</span>=<span class="string">no”/</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>表格不被撑开</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table-layout</span>: <span class="selector-tag">fixed</span>; <span class="selector-tag">word-break</span>: <span class="selector-tag">break-all</span>;;<span class="selector-tag">border-collapse</span>: <span class="selector-tag">collapse</span></div></pre></td></tr></table></figure>
<ul>
<li>不设宽高居中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">”abc”</span> <span class="attr">style</span>=<span class="string">”display:table;text-align:center;width:100%;height:100%;”</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">”background:#f00;</span> <span class="attr">display:table-cell</span>; <span class="attr">vertical-align:middle</span>;”&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”button”</span> <span class="attr">value</span>=<span class="string">”item1″</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>透明度的兼容代码</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">filter:alpha(opacity=50); /*1-100*/</div><div class="line">-moz-opacity:0.5; /*0-1.0*/</div><div class="line">-khtml-opacity:0.5; /*0-1.0*/</div><div class="line">opacity:0.5; /*0-1.0*/</div></pre></td></tr></table></figure>
<ul>
<li><p>文本溢出的几种处理方法</p>
</li>
<li><p>简单隐藏</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.hide</span>&#123;<span class="attribute">overflow</span>:hidden&#125;</div></pre></td></tr></table></figure>
<ul>
<li>使用滚动条</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.scroll</span>&#123;<span class="attribute">overflow</span>:scroll&#125;</div></pre></td></tr></table></figure>
<ul>
<li>简单裁切</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.clip</span>&#123;</div><div class="line">	<span class="attribute">border</span>:<span class="number">1px</span> solid;</div><div class="line">	<span class="attribute">overflow</span>:hidden;<span class="comment">/*超出隐藏*/</span></div><div class="line">	<span class="attribute">white-space</span>:nowrap;<span class="comment">/*强制在一行显示*/</span></div><div class="line">	<span class="attribute">text-overflow</span>:clip;<span class="comment">/*裁切*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>超出部分省略号</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.elli</span>&#123;</div><div class="line">	<span class="attribute">overflow</span>:hidden;</div><div class="line">	<span class="attribute">white-space</span>:nowrap;</div><div class="line">	<span class="attribute">text-overflow</span>:ellipsis;<span class="comment">/*使用省略号*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>清除浮动的几种方法</p>
<ul>
<li><p>方法一：<code>投机取巧法</code> – 不推荐</p>
<ul>
<li>直接一个放到当作最后一个子标签放到父标签那儿，此方法屡试不爽，兼容性强</li>
</ul>
</li>
<li><p>方法二：<code>overflow + zoom</code>方法  –不推荐<br> <code>.fix{overflow:hidden; zoom:1;}</code></p>
<ul>
<li>此方法优点在于代码简洁，涵盖所有浏览器</li>
</ul>
</li>
<li><p>方法三：<code>after + zoom</code>方法 -推荐–此方法可以说是综合起来最好的方法了</p>
<ul>
<li><code>clearfix</code>只应用在包含浮动子元素的父级元素上</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span>&#123;<span class="attribute">zoom</span>:<span class="number">1</span>;&#125;</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</div><div class="line">     <span class="attribute">display</span>:block; </div><div class="line">     <span class="attribute">content</span>:<span class="string">'clear'</span>; </div><div class="line">     <span class="attribute">clear</span>:both;</div><div class="line">     <span class="attribute">line-height</span>:<span class="number">0</span>; </div><div class="line">     <span class="attribute">visibility</span>:hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>方法四 在方法三的基础上的最优雅的做法【推荐】</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span> &#123;<span class="comment">/*before 是为了防止浏览器顶部空白的崩溃*/</span>   </div><div class="line">     <span class="attribute">content</span>: <span class="string">" "</span>;   </div><div class="line">     <span class="attribute">display</span>: table;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;    </div><div class="line">    <span class="attribute">clear</span>: both;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>清除浮动的原理是触发<code>BFC</code>，这里只有<code>clear:both</code>起清除浮动作用，其他的<code>line-height:0;  visibility:hidden;</code>都是为了隐藏生的内容需要的</p>
<ul>
<li>拓展阅读<ul>
<li><a href="http://www.jianshu.com/p/09bd5873bed4" target="_blank" rel="external">CSS中的浮动和清除浮动</a></li>
<li><a href="http://www.jianshu.com/p/e878122a92a3" target="_blank" rel="external">实用的60个CSS代码片段</a></li>
</ul>
</li>
</ul>
<h5 id="一些总结"><a href="#一些总结" class="headerlink" title="一些总结"></a>一些总结</h5><hr>
<ul>
<li><p>自动继承属性：</p>
<ul>
<li><code>color</code></li>
<li><code>font</code></li>
<li><code>text-align</code></li>
<li><code>list-style</code><br>…</li>
</ul>
</li>
<li><p>非继承属性：</p>
<ul>
<li><code>background</code></li>
<li><code>border</code></li>
<li><code>position</code><br>…</li>
</ul>
</li>
<li><p>具有破坏性的元素：</p>
<ul>
<li><code>float</code></li>
<li><code>display:none;</code></li>
<li><code>position:absoblute/fixed/sticky;</code></li>
</ul>
</li>
<li><p>具有包裹性的元素：</p>
<ul>
<li><p><code>display:inline-block/table-cell</code></p>
</li>
<li><p><code>position:absolute/fixed/sticky</code></p>
</li>
<li><p><code>overflow:hidden/scroll</code></p>
</li>
</ul>
</li>
<li><p>消除图片底部间隙的方法</p>
<ul>
<li><p>图片块状化-无基线对齐<br><code>img{display:block;}</code></p>
</li>
<li><p>图片底线对齐<br><code>img{vertical-align:bottom;}</code></p>
</li>
<li><p>行高足够小 - 基线位置上移<br><code>.box{line-height:0;}</code></p>
</li>
</ul>
</li>
<li><p>参考</p>
<ul>
<li><code>web</code>前端开发最佳实践</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、HTML实践&quot;&gt;&lt;a href=&quot;#一、HTML实践&quot; class=&quot;headerlink&quot; title=&quot;一、HTML实践&quot;&gt;&lt;/a&gt;一、HTML实践&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;使用标准的&lt;code&gt;HTML5&lt;/code&gt;简化的定义的方式&lt;ul&gt;
&lt;li&gt;定义文档类型  &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;定义页面的编码 &lt;code&gt;&amp;lt;meata charset=&amp;quot;UTF-8&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;样式和页脚的引用，不需要写&lt;code&gt;type&lt;/code&gt;类型，如&lt;code&gt;link&lt;/code&gt; &lt;code&gt;script&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;停止使用不标准的标签和属性，如&lt;code&gt;mqrquee&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不推荐在&lt;code&gt;HTML&lt;/code&gt;标签中添加样式属性，如&lt;code&gt;img&lt;/code&gt;标签中添加宽高&lt;/li&gt;
&lt;li&gt;不要使用&lt;code&gt;@import&lt;/code&gt;，此方式最大的缺点是引用&lt;code&gt;css&lt;/code&gt;文件不能同时并行下载
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="规则" scheme="http://www.poetries.top/tags/%E8%A7%84%E5%88%99/"/>
    
      <category term="实践" scheme="http://www.poetries.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap笔记总结</title>
    <link href="http://www.poetries.top/2016/11/19/bootstrap-review/"/>
    <id>http://www.poetries.top/2016/11/19/bootstrap-review/</id>
    <published>2016-11-19T08:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.930Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、-bootstrap简介"><a href="#一、-bootstrap简介" class="headerlink" title="一、 bootstrap简介"></a>一、 <code>bootstrap</code>简介</h4><hr>
<ul>
<li><code>Bootstrap</code>，来自 <code>Twitter</code>（全国最大的微博），是目前最受欢迎的前端框架。</li>
<li><code>bootstrap</code>下载及演示 <a href="http://v3.bootcss.com" target="_blank" rel="external">http://v3.bootcss.com</a><ul>
<li>什么是<code>bootstrap</code>？<ul>
<li><code>Bootstrap</code>是基于 <code>HTML</code>、<code>CSS</code>、<code>JAVASCRIPT</code> 的开源框架，它简洁、直观、强悍、灵活，使得 <code>Web</code>开发更加快捷，</li>
</ul>
</li>
<li>用于开发响应式布局、移动设备优先的 <code>WEB</code>项目。</li>
<li>为什么使用 <code>Bootstrap</code>？<ul>
<li>跨设备</li>
<li>跨浏览器（<code>chrome</code>，<code>IE9</code>以上，<code>Firefox</code>，<code>Safari</code>，<code>Opera</code>…）</li>
<li>响应式布局</li>
<li>具有实用性强的组件</li>
<li>内置<code>jquery</code>插件</li>
</ul>
</li>
<li><code>bootstrap</code>的结构</li>
<li>主要分为三大核心模块：<code>css</code>、<code>js</code>、<code>font</code><a id="more"></a>
<h4 id="二、bootstrap排版样式"><a href="#二、bootstrap排版样式" class="headerlink" title="二、bootstrap排版样式"></a>二、<code>bootstrap</code>排版样式</h4></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><strong>标题</strong><ul>
<li>从 <code>h1</code> 到 <code>h6</code></li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> //36px</div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> //30px</div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> //24px</div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h4</span>&gt;</span> //18px</div><div class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h5</span>&gt;</span> //14px</div><div class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h6</span>&gt;</span> //12px</div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"lead"</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>内联文本元素<ul>
<li>添加标记，<code>&lt;mark&gt;</code>元素或<code>.mark</code> 类</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Bootstrap<span class="tag">&lt;<span class="name">mark</span>&gt;</span>排版<span class="tag">&lt;/<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--各种加线条的文本--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">del</span>&gt;</span>  //删除的文本</div><div class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">s</span>&gt;</span>  //无用的文本</div><div class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>  //插入的文本</div><div class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">u</span>&gt;</span>  //效果同上，下划线文本</div><div class="line"></div><div class="line"><span class="comment">&lt;!--各种强调的文本--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">small</span>&gt;</span>  //标准字号的 85%</div><div class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>    //加粗 700</div><div class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">em</span>&gt;</span>    //倾斜</div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-left"</span>&gt;</span>向左对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>居中对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-right"</span>&gt;</span>向右对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-justify"</span>&gt;</span>对齐文本。该段落会根据屏幕的大小对超出屏幕的文字进行换行<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-nowrap"</span>&gt;</span>该段落不会根据屏幕的大小对超出屏幕的文字进行换行。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-lowercase"</span>&gt;</span>BOOTSTROP<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-uppercase"</span>&gt;</span>bootstrap<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-capitalize"</span>&gt;</span>bootstrap<span class="tag">&lt;/<span class="name">p</span>&gt;</span> //单词首字母大写</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>缩略语</strong></p>
<ul>
<li><code>HTML</code>元素提供了用于缩写的标记，比如 <code>WWW</code> 或 <code>HTTP</code>。<code>Bootstrap</code> 定义 <code>&lt;abbr&gt;</code> 元素的样式为显示在文本底部的一条虚线边框</li>
<li>当鼠标悬停在上面时会显示完整的文本（只要您为 <code>&lt;abbr&gt;</code> title 属性添加了文本）。为了得到一个更小字体的文本，</li>
<li>请添加 <code>.initialism</code> 到 <code>&lt;abbr&gt;</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"World Wide Web"</span>&gt;</span>WWW<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"Real Simple Syndication"</span> <span class="attr">class</span>=<span class="string">"initialism"</span>&gt;</span>RSS<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><strong>地址</strong><ul>
<li><code>address</code>默认为 <code>display:block</code>;，需要使用标签来为封闭的地址文本添加换行</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Twitter, Inc.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  795 Folsom Ave, Suite 600<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  San Francisco, CA 94107<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"Phone"</span>&gt;</span>P:<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> (123) 456-7890</div><div class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Full Name<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:#"</span>&gt;</span>first.last@example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>引用</strong><ul>
<li>默认样式引用，增加了左边线，设定了字体大小和内外边距<br><code>&lt;blockquote&gt; Bootstrap 框架 &lt;/blockquote&gt;</code></li>
<li>反向<br><code>&lt;blockquote class=&quot;blockquote-reverse &quot;&gt; Bootstrap 框架 &lt;/blockquote&gt;</code></li>
<li>多种引用样式</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"text-right"</span>&gt;</span>Someone famous in <span class="tag">&lt;<span class="name">cite</span> <span class="attr">title</span>=<span class="string">"Source Title"</span>&gt;</span>Source Title<span class="tag">&lt;/<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>列表</strong></p>
<ul>
<li>有序列表、无序列表、自定义列表<ul>
<li><code>.list-unstyled</code></li>
<li><code>.list-inline</code></li>
<li><code>.dl-horizontal</code>  应用于<code>&lt;dl&gt;</code>元素和<code>&lt;dt&gt;</code>元素中</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>代码</strong></p>
<ul>
<li><code>.pre-scrollable</code>  使 <code>&lt;pre&gt;</code> 元素可滚动 <code>scrollable</code></li>
<li>内联代码   <code>&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;</code></li>
<li>用户输入   <code>press &lt;kbd&gt;ctrl + ,&lt;/kbd&gt;</code></li>
<li>标记变量   <code>&lt;var&gt;y&lt;/var&gt; = &lt;var&gt;m&lt;/var&gt;&lt;var&gt;x&lt;/var&gt; + &lt;var&gt;b&lt;/var&gt;</code></li>
<li>程序输出   <code>&lt;samp&gt;This text is meant to be treated as sample output from a computer program.&lt;/samp&gt;</code></li>
<li>代码块     <code>&lt;pre&gt;&amp;lt;article&amp;gt;Please input...&amp;lt;/article&amp;gt;&lt;/pre&gt;</code></li>
</ul>
</li>
</ul>
<h4 id="三、表格、按钮、图片"><a href="#三、表格、按钮、图片" class="headerlink" title="三、表格、按钮、图片"></a>三、表格、按钮、图片</h4><hr>
<ul>
<li><p><strong>表格</strong></p>
<ul>
<li>基本表格 <code>&lt;table class=&quot;table&quot;&gt;</code></li>
<li>条纹表格 <code>&lt;table class=&quot;table table-striped&quot;&gt;</code></li>
<li>边框表格  <code>&lt;table class=&quot;table table-bordered&quot;&gt;</code></li>
<li>悬停表格<code>&lt;table class=&quot;table table-hover&quot;&gt;</code></li>
<li>精简表格<code>&lt;table class=&quot;table table-condensed&quot;&gt;</code></li>
<li>状态表格<code>active</code>、<code>success</code>、<code>info</code>、<code>warning</code>、<code>danger</code></li>
<li>隐藏某一行<code>&lt;tr class=&quot;sr-only&quot;&gt;</code></li>
<li>响应式表格<ul>
<li>表格父元素设置响应式，小于 <code>768px</code> 出现边框<br><code>&lt;div class=&quot;table-responsive&quot;&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>按钮</strong></p>
<ul>
<li>按钮标签<ul>
<li>转化成普通按钮</li>
<li><code>&lt;a href=&quot;###&quot; class=&quot;btn btn-default&quot;&gt;Link&lt;/a&gt;</code></li>
<li><code>&lt;button class=&quot;btn btn-default&quot;&gt;Button&lt;/button&gt;</code></li>
<li><code>&lt;input type=&quot;button&quot; class=&quot;btn btn-default&quot; value=&quot;input&quot;&gt;</code></li>
<li>注意：为了跨浏览器展现，尽量使用<code>button</code></li>
</ul>
</li>
<li>按钮大小<ul>
<li><code>.btn-lg</code>    这会让按钮看起来比较大。</li>
<li><code>.btn-sm</code>    这会让按钮看起来比较小。</li>
<li><code>.btn-xs</code>    这会让按钮看起来特别小。</li>
</ul>
</li>
<li>预定义样式<ul>
<li><code>.btn-default</code>    默认/标准按钮</li>
<li><code>.btn-primary</code>    首选项样式</li>
<li><code>.btn-success</code>    成功样式</li>
<li><code>.btn-info</code>一般信息样式</li>
<li><code>.btn-warning</code>    警告样式</li>
<li><code>.btn-danger</code>    危险样式</li>
<li><code>.btn-link</code>    链接样式</li>
</ul>
</li>
<li>块级按钮<ul>
<li><code>.btn-block</code>    块级按钮(拉伸至父元素100%的宽度)</li>
</ul>
</li>
<li>激活状态<ul>
<li><code>&lt;button class=&quot;btn active&quot;&gt;Button&lt;/button&gt;</code></li>
</ul>
</li>
<li>禁用状态<ul>
<li><code>&lt;button class=&quot;btn active disabled&quot;&gt;Button&lt;/button&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>图片</strong></p>
<ul>
<li><code>.img-rounded</code>   圆角 (<code>IE8</code> 不支持)</li>
<li><code>.img-circle</code> 圆形 (<code>IE8</code> 不支持)</li>
<li><code>.img-thumbnail</code>  缩略图功能</li>
<li><code>.img-responsive</code>    图片响应式 (将很好地扩展到父元素)</li>
</ul>
</li>
</ul>
<h4 id="四、栅格系统、表单"><a href="#四、栅格系统、表单" class="headerlink" title="四、栅格系统、表单"></a>四、栅格系统、表单</h4><hr>
<ul>
<li><p><strong>栅格系统</strong></p>
<ul>
<li>响应式网格系统随着屏幕或视口（<code>viewport</code>）尺寸的增加，系统会自动分为最多<code>12</code>列。</li>
<li>工作原理<ul>
<li>行必须放置在<code>.container</code>(固定宽度)或者<code>.container-fluid(100%宽度)</code>  <code>class</code>内，获得适当的对齐<code>(alignment)</code>和内边距<code>(padding)</code></li>
<li>内容放置在列中，唯有列可以是行的直接子元素</li>
<li>预定义的网格类，比如 <code>.row</code> 和 <code>.col-lg-4</code>，可用于快速创建网格布局</li>
<li>列通过内边距<code>（padding）</code>来创建列内容之间的间隙</li>
</ul>
</li>
<li>媒体查询<ul>
<li>超小设备（手机，小于 <code>768px</code>） </li>
<li>没有任何媒体查询相关的代码，因为这在 Bootstrap 中是默认的（还记得 <code>Bootstrap</code> 是移动设备优先的吗？）</li>
<li>小型设备（平板电脑，大于等于<code>768px</code>）<code>@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) { ... }</code></li>
<li>中型设备（台式电脑，大于等于<code>992px</code>）<code>@media (min-width: @screen-md-min) and (max-width: @screen-md-max) { ... }</code></li>
<li>大型设备（大台式电脑，大于等于<code>1200px</code>）<code>@media (min-width: @screen-lg-min) { ... }</code></li>
</ul>
</li>
<li><p>栅格参数</p>
<ul>
<li>超小屏幕 手机 (<code>&lt;768px</code>)    </li>
<li>小屏幕 平板 (<code>≥768px</code>)    </li>
<li>中等屏幕 桌面显示器 (<code>≥992px</code>)    </li>
<li>大屏幕 大桌面显示器 (<code>≥1200px</code>)</li>
<li>栅格系统行为     <ul>
<li>总是水平排列    </li>
<li>开始是堆叠在一起的，当大于这些阈值时将变为水平排列C</li>
</ul>
</li>
<li><code>.container</code> 最大宽度    <code>None</code>（自动）<code>750px</code>  <code>970px</code>  <code>1170px</code></li>
<li>类前缀 <code>.col-xs-</code>  <code>.col-sm-</code>     <code>.col-md-</code>      <code>.col-lg-</code></li>
<li>列（<code>column</code>）数    <code>12</code></li>
<li>最大列（<code>column</code>）宽    自动 <code>~62px</code> <code>~81px</code>    <code>~97px</code></li>
<li>间隙宽度     <code>30px</code> （每列左右均有 <code>15px</code>）</li>
</ul>
</li>
<li><p>四种屏幕分类全部激活</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6 col-xs-12 a"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6 col-xs-12 a"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6 col-xs-12 a"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         ....</div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>可以设置列偏移，让中间保持空隙</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-8"</span>&gt;</span>1-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-md-offset-1"</span>&gt;</span>10-12<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>可以嵌套，嵌满也是 12 列</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-9"</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-8"</span>&gt;</span>1-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4"</span>&gt;</span>9-12<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3"</span>&gt;</span> 10-12 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>可以把两个列交换位置，<code>push</code> 向右移动（推），<code>pull</code> 向左移动（拉）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-8 col-md-push-4"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-pull-8"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>表单</strong></p>
<ul>
<li>垂直或基本表单</li>
<li>内联表单<ul>
<li>让表单左对齐浮动，并表现为 <code>inline-block</code>内联块结构<code>&lt;form class=&quot;form-inline&quot;&gt;</code><br>注：当小于 <code>768px</code>，会恢复独占样式</li>
</ul>
</li>
<li>水平表单<ul>
<li>让表单内的元素保持水平排列</li>
</ul>
</li>
<li>表单组合<ul>
<li>前后增加片段<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>￥<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>输入框、文本域</p>
<ul>
<li>原生的<code>HTML5</code>的<code>input</code>类型的支持</li>
<li>包括：<ul>
<li><code>text</code></li>
<li><code>password</code></li>
<li><code>datetime</code></li>
<li><code>datetime-local</code></li>
<li><code>date</code></li>
<li><code>month</code></li>
<li><code>time</code></li>
<li><code>week</code></li>
<li><code>number</code></li>
<li><code>email</code></li>
<li><code>url</code></li>
<li><code>search</code></li>
<li><code>tel</code></li>
<li><code>color</code></li>
</ul>
</li>
<li><code>&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;文本输入&quot;&gt;</code></li>
<li><code>&lt;textarea class=&quot;form-control&quot; rows=&quot;3&quot;&gt;&lt;/textarea&gt;</code><ul>
<li>复选框（<code>Checkbox</code>）和单选框（<code>Radio</code>）<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>选项 1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"optionsRadios"</span> <span class="attr">id</span>=<span class="string">"optionsRadios1"</span></span></div><div class="line">	   <span class="attr">value</span>=<span class="string">"option1"</span> <span class="attr">checked</span>&gt; 选项 1</div><div class="line"> <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>内联的复选框和单选框</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"inlineCheckbox1"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 选项 1</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"optionsRadiosinline"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 选项 1</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>选择框    <code>multiple</code>多行显示</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">multiple</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>静态控件   <code>.form-control-static</code></p>
</li>
<li>表单控件状态<ul>
<li>输入框焦点</li>
<li>当输入框 <code>input</code> 接收到<code>:focus</code> 时，输入框的轮廓会被移除，同时应用 <code>box-shadow</code>。</li>
<li>禁用的输入框 <code>input</code></li>
<li>如果您想要禁用一个输入框 <code>input</code>，只需要简单地添加 <code>disabled</code> 属性，这不仅会禁用输入框，还会改变输入框的样式以及当鼠标的指针悬停在元素上时鼠标指针的样式。</li>
<li>禁用的字段集 <code>fieldset</code></li>
<li>对 <code>&lt;fieldset&gt;</code> 添加 <code>disabled</code> 属性来禁用<code>&lt;fieldset&gt;</code> 内的所有控件。</li>
<li>校验状态<ul>
<li><code>.has-warning</code>、<code>.has-error</code> 或 <code>.has-success</code> 类到这些控件的父元素即可。</li>
</ul>
</li>
<li>任何包含在此元素之内的 <code>.control-label</code>、<code>.form-control</code> 和 <code>.help-block</code> 元素都将接受这些校验状态的样式。</li>
</ul>
</li>
<li><p>表单帮助文本</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">""</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span>一个较长的帮助文本块，超过一行，需要扩展到下一行。本实例中的帮助文本总共有两行。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>控件尺寸</p>
<ul>
<li><code>.input-lg</code>和<code>col-lg-*</code>来设置表单的高度和宽度<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control input-lg"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"input-lg"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"col-lg-2"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"col-lg-3"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-4"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"col-lg-4"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="五、辅助类、响应式工具、菜单、图标"><a href="#五、辅助类、响应式工具、菜单、图标" class="headerlink" title="五、辅助类、响应式工具、菜单、图标"></a>五、辅助类、响应式工具、菜单、图标</h4><hr>
<h4 id="辅助类"><a href="#辅助类" class="headerlink" title="辅助类"></a>辅助类</h4><hr>
<ul>
<li><strong>文本</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted"</span>&gt;</span>本行内容是减弱的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-primary"</span>&gt;</span>本行内容带有一个 primary class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-success"</span>&gt;</span>本行内容带有一个 success class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-info"</span>&gt;</span>本行内容带有一个 info class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-warning"</span>&gt;</span>本行内容带有一个 warning class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span>本行内容带有一个 danger class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>背景</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-primary"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-success"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-info"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-warning"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-danger"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>关闭按钮   <code>close</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>下拉式菜单  <code>caret</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>浮动 <code>pull-left</code>   <code>pull-right</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-left"</span>&gt;</span>向左快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-right"</span>&gt;</span>向右快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>清除浮动   <code>clearfix</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>  <span class="attr">style</span>=<span class="string">"background: #D8D8D8;border: 1px solid #000;padding: 10px;"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-left"</span> <span class="attr">style</span>=<span class="string">"background:#58D3F7;"</span>&gt;</span>向左快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-right"</span> <span class="attr">style</span>=<span class="string">"background: #DA81F5;"</span>&gt;</span>向右快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>块级内容居中 <code>center-block</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center-block"</span> <span class="attr">style</span>=<span class="string">"width:200px;background-color:#ccc;"</span>&gt;</span></div><div class="line">	这是 center-block</div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>显示、隐藏  <code>show</code> <code>hide</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">style</span>=<span class="string">"padding: 91px 100px 19px 50px;"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"show"</span> <span class="attr">style</span>=<span class="string">"width:300px;background-color:#ccc;"</span>&gt;</span></div><div class="line">	这是 show class</div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hidden"</span> <span class="attr">style</span>=<span class="string">"width:200px;background-color:#ccc;"</span>&gt;</span></div><div class="line">	这是 hide class</div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>屏幕阅读器和键盘导航  <code>.sr-only</code> 来把元素对所有设备隐藏，除了屏幕阅读器    <code>.sr-only-focusable</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">style</span>=<span class="string">"padding: 91px 100px 19px 50px;"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"sr-only"</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>Email 地址<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Enter email"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"sr-only"</span> <span class="attr">for</span>=<span class="string">"pass"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sr-only sr-only-focusable"</span> <span class="attr">href</span>=<span class="string">"#content"</span>&gt;</span>Skip to main content<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>响应式工具</strong></p>
<ul>
<li><code>visible-xs</code> <code>visible-sm</code>  <code>visible-md</code>  <code>visible-lg</code></li>
<li><code>hidden-xs</code>   <code>hidden-sm</code>   <code>hidden-md</code>   <code>hidden-lg</code></li>
<li>以超小屏幕（<code>xs</code>）为例，可用的 <code>.visible-*-*</code> 类是：<code>visible-xs-block</code>、<code>visible-xs-inline</code> 和 <code>visible-xs-inline-block</code></li>
<li><code>visible-print-block</code>    <code>visible-print-inline</code>    <code>visible-print-inline-block</code>  浏览器隐藏   打印机可见<pre><code>`hidden-print`  浏览器可见   打印机隐藏 `visible-print`
</code></pre></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"padding: 40px;"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-xs"</span>&gt;</span>特别小型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-xs"</span>&gt;</span>✔ 在特别小型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-sm"</span>&gt;</span>小型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-sm"</span>&gt;</span>✔ 在小型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-md"</span>&gt;</span>中型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-md"</span>&gt;</span>✔ 在中型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-lg"</span>&gt;</span>大型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-lg"</span>&gt;</span>✔ 在大型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>字体图标</strong></p>
<ul>
<li>用法：<code>&lt;span class=&quot;glyphicon glyphicon-search&quot;&gt;&lt;/span&gt;</code></li>
</ul>
</li>
<li><p>下拉菜单</p>
<ul>
<li>基本的下拉菜单</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html5+css3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>对齐 <code>dropdown-menu-right</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown-header"</span>&gt;</span>Dropdown header<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>分隔线</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>禁用的菜单项</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenu4"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Regular link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Disabled link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>让菜单默认显示 <code>&lt;div class=&quot;dropdown open&quot;&gt;</code></li>
</ul>
<h4 id="六、按钮、输入框组件"><a href="#六、按钮、输入框组件" class="headerlink" title="六、按钮、输入框组件"></a>六、按钮、输入框组件</h4><hr>
<h4 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h4><hr>
<ul>
<li><strong>基本的按钮组</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮工具栏</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-toolbar"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮的大小</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-lg"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-sm"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-xs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>嵌套</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>按钮 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>垂直的按钮组</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group-vertical"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>按钮 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>两端对齐排列的按钮组</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-justified"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-justified"</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;div class="btn-group"&gt;--&gt;</span>    为了浏览器兼容问题使用btn-group包裹</div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;div class="btn-group"&gt;--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;div class="btn-group"&gt;--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>按钮式下拉菜单</strong></p>
</li>
<li><p>单按钮下拉菜单   <code>btn-default</code>  <code>btn-success</code>  <code>btn-primary</code>   <code>btn-info</code>   <code>btn-danger</code>   <code>btn-warning</code></p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Default <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>分裂式按钮下拉菜单</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮下拉菜单的大小   <code>btn-lg</code>   <code>btn-sm</code>   <code>btn-xs</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Default <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>向上弹出式菜单    <code>dropup</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group dropup"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Default <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>输入框</strong></p>
</li>
<li><p>基本的输入框组</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>@<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>$<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>输入框组的大小    <code>input-group-lg</code>  <code>input-group-xs</code>  <code>input-group-sm</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group input-group-lg"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>@<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>复选框和单选框插件</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></div><div class="line">			   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>/&gt;</span></div><div class="line">		   <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">	   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮插件   <code>input-group-btn</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Go<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮式下拉菜单</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>dropdown<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>分裂式按钮下拉菜单</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>dropdown<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="七、导航、导航条、面包屑导航组件"><a href="#七、导航、导航条、面包屑导航组件" class="headerlink" title="七、导航、导航条、面包屑导航组件"></a>七、导航、导航条、面包屑导航组件</h4><hr>
<p><strong>导航（标签） <code>nav</code></strong></p>
<ul>
<li>标签页   <code>nav-tabs</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>胶囊式标签页 <code>nav-pills</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>垂直的胶囊式标签页  <code>nav-stacked</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills nav-stacked"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>两端对齐的标签页 <code>nav-justified</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills nav-justified"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>禁用链接  <code>disabled</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带有下拉菜单的标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带下拉菜单的胶囊式标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>导航条 <code>navbar</code>    <code>&lt;nav&gt;</code>标签中添加 <code>class</code> <code>.navbar</code>、<code>.navbar-default</code></strong></p>
<ul>
<li>默认的导航栏</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>潭州教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>响应式的导航栏</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"navbar-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#navbar-collapse"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>潭州教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span> <span class="attr">id</span>=<span class="string">"navbar-collapse"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>导航栏中的表单</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"navbar-form navbar-right"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Search"</span>/&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>导航栏中的按钮   <code>navbar-btn</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default navbar-btn"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>导航栏中的文本    <code>navbar-text</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"navbar-text"</span>&gt;</span>Signed in as Thomas<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>固定到顶部、底部   <code>navbar-fixed-top</code>    <code>navbar-fixed-bottom</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default navbar-fixed-top"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>潭州教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>静态的顶部 <code>navbar-static-top</code></p>
</li>
<li><p>倒置的导航栏  带有黑色背景白色文本的倒置的导航栏    <code>navbar-inverse</code></p>
</li>
<li><p>面包屑导航</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>详情<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件"><a href="#八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件" class="headerlink" title="八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件"></a>八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件</h4><hr>
<p><strong>分页</strong></p>
<ul>
<li>默认的分页</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>禁用和激活状态</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>分页的尺寸  <code>pagination-lg</code>    <code>pagination-sm</code></p>
</li>
<li><p>翻页（<code>Pager</code>）</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pager"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>next<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>对齐的链接</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pager"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"previous"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;larr; previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>next &amp;rarr;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>可选的禁用状态</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pager"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"previous disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;larr; previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>next &amp;rarr;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>标签</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-default"</span>&gt;</span>Default<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-primary"</span>&gt;</span>Primary<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>Success<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-info"</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-warning"</span>&gt;</span>Warning<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>徽章<code>badge</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Messages <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Messages <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>巨幕 <code>jumbotron</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jumbotron"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world!!!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured</div><div class="line">            content or information.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Learn more<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>页头 <code>page-header</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-header"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Example page header</div><div class="line">  <span class="tag">&lt;<span class="name">small</span>&gt;</span>Subtext for header<span class="tag">&lt;/<span class="name">small</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>缩略图</strong></p>
<ul>
<li>默认样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-sm-6"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/kittens.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>自定义内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-sm-6"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/kittens.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span>  <span class="comment">&lt;!--text-center--&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>缩略图标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">p</span>&gt;</span>一些示例文本。一些示例文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">			   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">			   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span>按钮 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>警告框</strong></p>
<ul>
<li>基本默认样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span>成功！很好地完成了提交。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-info"</span>&gt;</span>信息！请注意这个信息。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning"</span>&gt;</span>警告！请不要提交。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger"</span>&gt;</span>错误！请进行一些更改。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>可关闭的警告框<code>&lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;&amp;times;&lt;/button&gt;</code></p>
</li>
<li><p>警告中的链接</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>成功！很好地完成了提交。<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="九、进度条、媒体对象、列表组、面板、响应式插入组件"><a href="#九、进度条、媒体对象、列表组、面板、响应式插入组件" class="headerlink" title="九、进度条、媒体对象、列表组、面板、响应式插入组件"></a>九、进度条、媒体对象、列表组、面板、响应式插入组件</h4><hr>
<p><strong>进度条</strong></p>
<ul>
<li>默认的进度条</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>情景变化的进度条</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-info"</span> <span class="attr">style</span>=<span class="string">"width:60%;"</span>&gt;</span>60%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-success"</span> <span class="attr">style</span>=<span class="string">"width:25%;"</span>&gt;</span>25%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-danger"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-warning"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>条纹的进度条 <code>progress-striped</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress progress-striped"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>动画的进度条<code>active</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress progress-striped active"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>堆叠的进度条</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-warning"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-success"</span> <span class="attr">style</span>=<span class="string">"width:25%;"</span>&gt;</span>25%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>媒体对象</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"pull-left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"media-object"</span> <span class="attr">src</span>=<span class="string">"images/kittens.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"95"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media-body"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"media-heading"</span>&gt;</span>媒体标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>列表组</strong></p>
<ul>
<li>向列表组添加国徽</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>免费域名注册 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge pull-right"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>免费 Window 空间托管<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>每年更新成本<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>向列表组添加链接</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"list-group-item active"</span>&gt;</span>免费域名注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>免费 Window 空间托管<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>每年更新成本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>向列表组添加自定义内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Cras justo odio<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Dapibus ac facilisis in<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Morbi leo risus<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Porta ac consectetur ac<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Vestibulum at eros<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>面板</strong></p>
<ul>
<li>面板标题</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>面板脚注</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-footer text-right"</span>&gt;</span>by zichen<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>面板主题</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-success"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-info"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-warning"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-danger"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带表格的面板</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span>Panel heading<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">td</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带列表组的面板</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-danger"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span>面板内容显示区域<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>免费域名注册<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>免费 Window 空间托管<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>图像的数量<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>24*7 支持<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>每年更新成本<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-footer text-right"</span>&gt;</span>by zichen<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>响应式嵌入组件</strong></p>
<ul>
<li>根据被嵌入内容的外部容器的宽度，自动创建一个固定的比例，从而让浏览器自动确定 内容的尺寸，能够在各种设备上缩放<br> 这些规则可以直接用于<code>&lt;iframe&gt;</code>、<code>&lt;embed&gt;</code>、<code>&lt;video&gt;</code>和<code>&lt;object&gt;</code>元素。</li>
<li><code>16:9</code> 响应式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">embed</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>4:3</code> 响应式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-4by3"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">embed</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"embed-responsive-item"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-4by3"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"embed-responsive-item"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong><code>well</code></strong></p>
<ul>
<li>基本的<code>well</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well"</span>&gt;</span>您好，我在大的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>尺寸大小 <code>well-lg</code>   <code>well-sm</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well well-lg"</span>&gt;</span>您好，我在大的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well well-sm"</span>&gt;</span>您好，我在小的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="十、弹出框、警告框、标签页和工具提示插件插件"><a href="#十、弹出框、警告框、标签页和工具提示插件插件" class="headerlink" title="十、弹出框、警告框、标签页和工具提示插件插件"></a>十、弹出框、警告框、标签页和工具提示插件插件</h4><hr>
<p><strong>弹出框</strong></p>
<ul>
<li>弹出框点击一个元素，弹出一个包含标题和内容的容器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//基本用法</div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-danger"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">data-toggle</span>=<span class="string">"popover"</span> <span class="attr">title</span>=<span class="string">"弹出框"</span> <span class="attr">data-content</span>=<span class="string">"这是一个弹出框插件"</span>&gt;</span></div><div class="line">	点击弹出/隐藏弹出框</div><div class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>JavaScript</code> 初始化  <code>$(&#39;button&#39;).popover();</code></p>
</li>
<li><p><code>Popover</code> 插件中的属性：</p>
<ul>
<li><code>data-animation</code>   默认 <code>true</code>，在 <code>popover</code> 上应用一个 <code>CSS</code> <code>fade</code> 动画。 如果设置 <code>false</code>，则不应用。</li>
<li><code>data-html</code>        默认 <code>false</code>，不允许提示内容格式为 <code>html</code>。如果设置 为 <code>true</code>，则可以设置 <code>html</code> 格式的提示内容</li>
<li><code>data-placement</code>   默认值 <code>top</code>，还有 <code>bottom</code>、<code>left</code>、<code>right</code> 和 <code>auto</code>。 如果<code>auto</code>会自行调整合适的位置，如果是<code>auto</code> <code>left</code> 则会尽量在左边显示，但左边不行就靠右边。</li>
<li><code>data-selector</code>   默认 <code>false</code>，可以选择绑定指定的选择器。</li>
<li><code>data-original-title</code> 默认空字符串，弹出框的标题。优先级比 <code>title</code> 低</li>
<li><code>title</code>          默认字空符串，弹出框的标题。</li>
<li><code>data-trigger</code>     默认值 <code>click</code>，表示怎么触发 <code>popover</code>，其他值为： <code>hover</code>、<code>focus</code>、<code>manual</code>。多个值用空格隔开，manual 手动不能和其他同时设置。</li>
<li><code>data-delay</code>       默认值 <code>0</code>，延迟触发 <code>popover(毫秒)</code>，如果传数字则， 表示 <code>show</code>/<code>hide</code> 的毫秒数，如果传对象，结构为： {show:500,hide:100}</li>
<li><code>data-container</code>   默认值 <code>false</code>，将 <code>popover</code> 附加到特定的元素上。比 如组合按钮组提示，容器不够，可以附加 <code>body</code> 上。<code>container : &#39;body&#39;</code></li>
<li><code>data-template</code>   更改提示框的 <code>HTML</code> 提示语的模版，默认值为：</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"popover"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arrow"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"popover-title"</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"popover-content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>data-content</code>    默认值为空，弹出框的内容。</li>
<li><code>data-viewport</code>    设置外围容器的边际，具体代码看示例。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> $(<span class="string">'button'</span>).popover(&#123;</div><div class="line"><span class="attr">trigger</span>:<span class="string">"click"</span>,</div><div class="line"><span class="attr">placement</span>:<span class="string">"right"</span>,</div><div class="line"><span class="attr">viewport</span> : &#123;</div><div class="line">	<span class="attr">selector</span> : <span class="string">'#view'</span></div><div class="line">&#125;</div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<ul>
<li><p><code>Popover</code> 插件中的方法：</p>
<ul>
<li>显示 <code>$(&#39;button&#39;).popover(&#39;show&#39;);</code></li>
<li>隐藏 <code>$(&#39;button&#39;).popover(&#39;hide&#39;);</code></li>
<li>反转显示和隐藏 <code>$(&#39;button&#39;).popover(&#39;toggle&#39;);</code></li>
<li>隐藏并销毁 <code>$(&#39;button&#39;).popover(&#39;destroy&#39;);</code></li>
</ul>
</li>
<li><p><code>Popover</code> 插件中的事件：</p>
<ul>
<li><code>show.bs.popover</code> 在调用 <code>show</code> 方法时触发</li>
<li><code>shown.bs.popover</code> 在显示整个弹窗时时触发</li>
<li><code>hide.bs.popover</code> 在调用 <code>hide</code> 方法时触发</li>
<li><code>hidden.bs.popover</code> 在完全关闭整个弹出时触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'show.bs.tab'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'调用 show 方法时触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>警告框</strong></p>
<ul>
<li>警告框即为点击小时的信息框</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//基本实例</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">span</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>警告：您的浏览器不支持！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>添加淡入淡出效果   <code>&lt;div class=&quot;alert alert-warning fade in&quot;&gt;</code></p>
</li>
<li><p>如果用 <code>JavaScript</code>，可以代替 <code>data-dismiss=&quot;alert&quot;</code></p>
</li>
<li><code>Alert</code> 插件中的方法：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'.close'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     $(<span class="string">'#alert'</span>).alert(<span class="string">'close'</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><code>Alert</code> 插件中的事件：<ul>
<li><code>close.bs.alert</code>   当 <code>close</code> 方法被调用后立即触发</li>
<li><code>closed.bs.alert</code>  当警告框被完全关闭后立即触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#alert'</span>).on(<span class="string">'close.bs.alert'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'当 close 方法被触发时调用！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>标签页</strong></p>
<ul>
<li>标签页也就是通常所说的选项卡功能</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//基本用法</div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#html5"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#bootstrap"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Bootstrap<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#jquery"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#extjs"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>ExtJS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-content"</span> <span class="attr">style</span>=<span class="string">"padding: 10px;"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane active"</span> <span class="attr">id</span>=<span class="string">"html5"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"bootstrap"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"jquery"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"extjs"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>可以设置淡入淡出效果 fade，而 in 表示首选的内容默认显示</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade in active"</span> <span class="attr">id</span>=<span class="string">"html5"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>也可以换成胶囊式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>data-target</code>    使用 <code>data-target</code> 绑定或不绑定效果都是一样的</p>
</li>
<li><p><code>Tab</code> 插件中的方法：</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#nav a'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">     e.preventDefault();</div><div class="line">     $(<span class="keyword">this</span>).tab(<span class="string">'show'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>Tab</code> 插件中的事件：<ul>
<li><code>show.bs.tab</code>      在调用 <code>tab</code> 方法时触发</li>
<li><code>shown.bs.tab</code>     在显示整个标签时触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#nav a'</span>).on(<span class="string">'show.bs.tab'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'调用 tab 时触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>工具提示</strong></p>
<ul>
<li>工具提示就是通过鼠标移动选定在特定的元素上时，显示相关的提示语</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//基本实例</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">data-toggle</span>=<span class="string">"tooltip"</span> <span class="attr">title</span>=<span class="string">"超文本标识符"</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>JavaScript</code> 初始化 <code>$(&#39;#section&#39;).tooltip();</code></p>
</li>
<li><p><code>data-animation</code>   默认 <code>true</code>，在 <code>tooltip</code> 上应用一个 <code>CSS fade</code> 动画。 如果设置 <code>false</code>，则不应用。</p>
</li>
<li><code>data-html</code>       默认 <code>false</code>，不允许提示内容格式为 <code>html</code>。如果设置 为 <code>true</code>，则可以设置 <code>html</code> 格式的提示内容。</li>
<li><code>data-placement</code>   默认值 <code>top</code>，还有 <code>bottom</code>、<code>left</code>、<code>right</code> 和 <code>auto</code>。 如果<code>auto</code>会自行调整合适的位置，如果是<code>auto</code> <code>left</code> 则会尽量在左边显示，但左边不行就靠右边。</li>
<li><code>data-selector</code>    默认 <code>false</code>，可以选择绑定指定的选择器。 <code>rel=&quot;tooltip&quot;</code></li>
<li><code>data-original-title</code> 默认空字符串，提示语的内容。优先级比 title 低</li>
<li><code>title</code>           默认字空符串，提示语的内容。</li>
<li><code>data-trigger</code>     默认值 <code>hover</code> <code>foucs</code>，表示怎么触发 <code>tooltip</code>，其 他值为：<code>click</code>、<code>manual</code>。多个值用空格隔开，<code>manual</code> 手动不能和其他同时设置。</li>
<li><code>data-delay</code>       默认值 <code>0</code>，延迟触发 <code>tooltip(毫秒)</code>，如果传数字则， 表示 <code>show</code>/<code>hide</code> 的毫秒数，如果传对象，结构为：<code>{   show:500,hide:100   }</code></li>
<li><code>data-containe</code>r   默认值 <code>false</code>，将<code>tooltip</code> 附加到特定的元素上。比 如组合按钮组提示，容器不够，可以附加 <code>body</code> 上。<code>container : &#39;body&#39;</code></li>
<li><code>data-template</code>    更改提示框的 <code>HTML</code> 提示语的模版，默认值为：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tooltip'</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tooltip-arrow'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tooltip-inner'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">rel</span>=<span class="string">"tooltip"</span></span></div><div class="line">	<span class="attr">data-toggle</span>=<span class="string">"tooltip"</span></div><div class="line">	<span class="attr">title</span>=<span class="string">"超文本标识符"</span></div><div class="line">	<span class="attr">data-animation</span>=<span class="string">"false"</span></div><div class="line">	<span class="attr">data-html</span>=<span class="string">"true"</span></div><div class="line">	<span class="attr">data-placement</span>=<span class="string">"auto"</span></div><div class="line">	<span class="attr">data-selector</span>=<span class="string">"a[rel=tooltip]"</span></div><div class="line">	<span class="attr">data-trigger</span>=<span class="string">"click"</span></div><div class="line">	<span class="attr">data-delay</span>=<span class="string">"500"</span></div><div class="line">	<span class="attr">data-template</span>=<span class="string">"&lt;b&gt;123&lt;/b&gt;"</span> &gt;HTML5</div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#selector a'</span>).tooltip(&#123;</div><div class="line">	<span class="attr">delay</span> : &#123;</div><div class="line">		<span class="attr">show</span> : <span class="number">500</span>,</div><div class="line">		<span class="attr">hide</span> : <span class="number">100</span>,</div><div class="line">	&#125;,</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><p><code>Tooltip</code>插件中的方法：</p>
<ul>
<li>显示   <code>$(&#39;#section a&#39;).tooltip(&#39;show&#39;);</code></li>
<li>隐藏              <code>$(&#39;#section a&#39;).tooltip(&#39;hide&#39;);</code></li>
<li>反转显示和隐藏    <code>$(&#39;#section a&#39;).tooltip(&#39;toggle&#39;);</code></li>
<li>隐藏并销毁        <code>$(&#39;#section a&#39;).tooltip(&#39;destroy&#39;);</code></li>
</ul>
</li>
<li><p><code>Tooltip</code>插件中的事件：</p>
<ul>
<li><code>show.bs.tooltip</code>  在 <code>show</code> 方法调用时立即触发</li>
<li><code>shown.bs.tooltip</code> 在提示框完全显示给用户之后触发</li>
<li><code>hide.bs.tooltip</code>  在 <code>hide</code> 方法调用时立即触发</li>
<li><code>hidden.bs.tooltip</code> 在提示框完全隐藏之后触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#select a'</span>).on(<span class="string">'show.bs.tooltip'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'调用 show 时触发！'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//data-selector</span></div><div class="line">$(<span class="string">"#selector"</span>).tooltip(&#123;</div><div class="line">     <span class="attr">selector</span>:<span class="string">"a[rel='tooltip']"</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>data-container</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">title</span>=<span class="string">"超文本标记符"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">title</span>=<span class="string">"超文本标记符"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">title</span>=<span class="string">"超文本标记符"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"button"</span>).tooltip(&#123;</div><div class="line">    <span class="attr">delay</span>:&#123;</div><div class="line">        <span class="attr">show</span>:<span class="number">500</span>,</div><div class="line">        <span class="attr">hide</span>:<span class="number">100</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">container</span>:<span class="string">"body"</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="十一、下拉菜单、滚动监听、按钮和折叠插件"><a href="#十一、下拉菜单、滚动监听、按钮和折叠插件" class="headerlink" title="十一、下拉菜单、滚动监听、按钮和折叠插件"></a>十一、下拉菜单、滚动监听、按钮和折叠插件</h4><hr>
<p><strong>下拉菜单插件</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span> 下拉菜单 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>产品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>如果按钮在容器外部，可以通过 <code>data-target</code> 进行绑定</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">data-target</span>=<span class="string">"#dropdown"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>Dropdown</code>插件的方法：，但仍然需要 <code>data-*</code></p>
<ul>
<li><code>$(&#39;#btn&#39;).dropdown();</code></li>
<li><code>$(&#39;#btn&#39;).dropdown(&#39;toggle&#39;);</code></li>
</ul>
</li>
<li><p><code>Dropdown</code>插件的事件：</p>
<ul>
<li><code>show.bs.dropdown</code>    在 <code>show</code> 方法调用时立即触发。</li>
<li><code>shown.bs.dropdown</code>   在下拉菜单完全显示出来，并且等 <code>CSS</code> 动画完成之后 触发。</li>
<li><code>hide.bs.dropdown</code>     在 <code>hide</code> 方法调用时，但还未关闭隐藏时触发。</li>
<li><code>hidden.bs.dropdown</code>   在下拉菜单完全隐藏之后，并且等 <code>CSS</code> 动画完成之后 触发。</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#dropdown'</span>).on(<span class="string">'show.bs.dropdown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'在调用 show 方法时立即触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>滚动监听插件</strong></p>
<ul>
<li><code>data-offset</code>  默认值为 <code>10</code>，固定弄内容距滚动容器 <code>10</code> 像素以内， 就高亮显示所对应的菜单</li>
<li><code>data-spy</code>    设置 <code>scroll</code>，将设置滚动容器监听</li>
<li><p><code>data-target</code>  设置<code>#nav</code>，绑定指定监听的菜单</p>
</li>
<li><p><code>scroll</code>插件的方法：</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#scroll"</span>).scrollspy(&#123;</div><div class="line">     <span class="comment">//offset: 0,</span></div><div class="line">     target: <span class="string">"#nav"</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>activate.bs.scrollspy</code>    每当一个新条目被激活后都将由滚动监听插件触 发此事件。</li>
<li>事件绑定在导航上</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#nav'</span>).on(<span class="string">'activate.bs.scrollspy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'新条目被激活后触发此事件！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>滚动监听还有一个更新容器 <code>DOM</code> 的方法<ul>
<li><code>refresh</code>  更新容器 <code>DOM</code> 的方法</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeSec</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    $(e).parents(<span class="string">'.sec'</span>).remove();</div><div class="line">    $(<span class="string">'#content'</span>).scrollspy(<span class="string">'refresh'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>按钮插件</strong></p>
<ul>
<li>单个切换</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"button"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span>单个切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>注：在 <code>Firefox</code> 多次页面加载时，按钮可能保持表单的禁用或选择状态。解决方案是： 添加<code>autocomplete=&quot;off&quot;。</code></p>
</li>
<li><p>单选按钮</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary active"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">checked</span>&gt;</span> 男</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 女</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>复选按钮</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary active"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">checked</span>&gt;</span> 音乐</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 体育</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 美术</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 电脑</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>加载状态</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"myButton"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">data-loading-text</span>=<span class="string">"Loading..."</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 加载状态 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myButton'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     <span class="keyword">var</span> btn = $(<span class="keyword">this</span>).button(<span class="string">'loading'</span>);</div><div class="line">     setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">         btn.button(<span class="string">'reset'</span>);</div><div class="line">     &#125;, <span class="number">1000</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>Button</code> 插件中的 <code>button</code> 方法中有三个参数：<code>toggle</code>、<code>reset</code>、<code>string</code>(比如 <code>loading</code>、 <code>complete</code>)。</li>
<li>可代替    <code>data-toggle=&quot;button&quot;</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     $(<span class="keyword">this</span>).button(<span class="string">'toggle'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>折叠插件</strong></p>
<ul>
<li>基本实例</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#content"</span>&gt;</span> Bootstrap <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse"</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well"</span>&gt;</span></div><div class="line">         Bootstrap 是 Twitter 推出的一个用于前端开发的开源工具包。它由 Twitter 的设计师 Mark Otto 和 Jacob Thornton 合作开发,是一个 CSS/HTML 框架。目 前,Bootstrap 最新版本为 3.0 。</div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>Collapse</code>插件的方法：<code>hide</code>、<code>show</code>、<code>toggle</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     $(<span class="string">'#collapseOne'</span>).collapse(<span class="string">'toggle'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>Collapse</code>插件的事件：<ul>
<li><code>show.bs.collapse</code>     在 <code>show</code> 方法调用时立即触发</li>
<li><code>shown.bs.collapse</code>   折叠区完全显示出来是触发</li>
<li><code>hide.bs.collapse</code>    在 <code>hide</code> 方法调用时触发</li>
<li><code>hidden.bs.collapse</code>   该事件在折叠区域完全隐藏之后触发</li>
</ul>
</li>
</ul>
<h4 id="十二、模态框、轮播插件"><a href="#十二、模态框、轮播插件" class="headerlink" title="十二、模态框、轮播插件"></a>十二、模态框、轮播插件</h4><hr>
<p>  <strong>模态框插件</strong></p>
<ul>
<li>模态框的弹窗组件需要三层 <code>div</code> 容器元素，分别为 <code>modal</code>(模态声明层)、 <code>dialog</code>(窗口声明层)、<code>content</code>(内容层)</li>
<li>在内容层里面，还有三层，分别为 <code>header</code>(头部)、<code>body</code>(主体)、<code>footer</code>(注脚)</li>
<li>模态框去掉 <code>show</code>，增加一个 <code>id</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal"</span> <span class="attr">id</span>=<span class="string">"myModal"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 点击触发模态框显示 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-lg"</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span> <span class="attr">data-target</span>=<span class="string">"#myModal"</span>&gt;</span> 点击弹窗 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 弹窗的大小有三种，默认情况下是正常，还有 lg(大)和 sm(小) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog modal-lg"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog sm-lg"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 可设置淡入淡出效果 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>所有的插件，都是基于 <code>JavaScript</code>/<code>jQuery</code> 的。</li>
<li><p>四个要素：用法、参数、方法和事件。</p>
</li>
<li><p><strong>用法</strong></p>
<ul>
<li>可以通过 <code>data</code> 属性 <code>data-toggle</code>  <code>data-toggle=&quot;modal&quot;</code>  <code>data-target=&quot;#myModal&quot;</code></li>
<li><code>data-toggle</code> 表示触发类型</li>
<li><code>data-target</code> 表示触发的节点</li>
<li>如果不是使用<code>&lt;button&gt;</code>，而是<code>&lt;a&gt;</code>，其中 <code>data-target</code> 也可以使用 <code>href=&quot;#myModal&quot;</code>取代</li>
<li>建议使用 <code>data-target</code>。除了 <code>data-toggle</code> 和 <code>data-target</code> 两个声明 属性外，还有一些可以用选项</li>
</ul>
</li>
<li><p><strong>参数</strong></p>
<ul>
<li><code>data-backdrop</code>    布尔值或 <code>&#39;static&#39;</code>   默认值 <code>true</code>，表示背景存在黑灰透明 遮罩，且单击空白背景可关闭弹窗；</li>
<li>如果为 <code>false</code>，表示背景不存在黑灰 透明遮罩，且点击空白背景不可关闭 弹窗；</li>
<li>如果是字符串<code>&#39;static&#39;</code>，表示背景存 在黑灰透明遮罩，且点击空白不可关 闭弹窗。</li>
<li><code>data-keyboard</code>   布尔值 <code>true</code>   如果是 <code>true</code>，按 <code>esc</code> 键会关闭窗口； 如果是 <code>false</code>，按 <code>esc</code> 键会不会关闭。</li>
<li><code>data-show</code>   布尔值 <code>true</code>   如果是 <code>true</code>，初始化时，默认显示； 如果是 <code>false</code>，初始化时，默认隐藏。</li>
<li><code>remote</code>   <code>url</code> 路径 空值   如果值不是以<code>#</code>号开头，则表示一个 <code>url</code> 地址，加载 <code>url</code> 内容到 <code>modal-content</code> 容器里，并只加载一 次。</li>
<li>如果是<code>#</code>号，就是取代 <code>data-target</code> 的方法。</li>
<li>在 <code>JavaScript</code> 直接设置</li>
<li>通过 <code>jQuery</code> 方式声明</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myModal'</span>).modal(&#123;</div><div class="line">     <span class="attr">show</span> : <span class="literal">true</span>,</div><div class="line">     <span class="attr">backdrop</span> : <span class="literal">false</span>,</div><div class="line">     <span class="attr">keyboard</span> : <span class="literal">false</span>,</div><div class="line">     <span class="attr">remote</span> : <span class="string">'index.html'</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><strong>方法</strong><ul>
<li><code>toggle .modal(&#39;toggle&#39;)</code>; 触发时，反转切换弹窗状态</li>
<li><code>show .modal(&#39;show&#39;)</code>; 触发时，显示弹窗</li>
<li><code>hide .modal(&#39;hide&#39;)</code>; 触发时，关闭弹窗</li>
<li>点击显示弹窗<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	$(<span class="string">'#myModal'</span>).modal(<span class="string">'show'</span>);</div><div class="line">&#125;);</div><div class="line">$(<span class="string">'#myModal'</span>).modal(&#123;</div><div class="line">	   <span class="attr">show</span> : <span class="literal">false</span>,</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p><strong>事件</strong></p>
<ul>
<li><code>show.bs.modal</code>    在<code>show</code> 方法调用时立即触发。</li>
<li><code>shown.bs.modal</code>  在模态框完全显示出来，并且等 <code>CSS</code> 动画完成之后触 发。</li>
<li><code>hide.bs.modal</code>    在 <code>hide</code> 方法调用时，但还未关闭隐藏时触发。</li>
<li><code>hidden.bs.modal</code>  在模态框完全隐藏之后，并且等 <code>CSS</code> 动画完成之后触 发</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myModal'</span>).on(<span class="string">'show.bs.modal'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	alert(<span class="string">'在 show 方法调用时立即触发！'</span>);</div><div class="line">&#125;);</div><div class="line">$(<span class="string">'#myModal'</span>).on(<span class="string">'loaded.bs.modal'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	alert(<span class="string">'远程数据加载完毕后触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>轮播图插件</strong></p>
<ul>
<li><code>data</code> 属性解释：<ul>
<li><code>data-slide</code> 接受关键字 <code>prev</code> 或 <code>next</code>，用来改变幻灯片相对于当前位置的位置；</li>
<li><code>data-slide-to</code> 来向轮播底部创建一个原始滑动索引，<code>data-slide-to=&quot;2&quot;</code>将把滑 动块移动到一个特定的索引，索引从 0 开始计数。</li>
<li><code>data-ride=&quot;carousel&quot;</code>属性用户标记轮播在页面加载时开始动画播放。</li>
<li><code>data-interval</code>   默认值 <code>5000</code>，幻灯片的等待时间(毫秒)。如果为 <code>false</code>，轮播将不会自动开始循环。</li>
<li><code>data-pause</code>       默认鼠标停留在幻灯片区域(<code>hover</code>)即暂停轮播，鼠 标离开即启动轮播。</li>
<li><code>data-wrap</code>        默认值 <code>true</code>，轮播是否持续循环。</li>
<li>如果在 <code>JavaScript</code> 调用就直接使用键值对方法，并去掉 <code>data-</code>；</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myCarousel'</span>).carousel(&#123;  <span class="comment">//设置自定义属性</span></div><div class="line">     interval : <span class="number">2000</span>,<span class="comment">//设置自动播放`/2` 秒</span></div><div class="line">     pause : <span class="string">'hover'</span>,<span class="comment">//设置暂停按钮的事件</span></div><div class="line">     wrap : <span class="literal">false</span>,   <span class="comment">//只播一次</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><strong>方法：</strong><ul>
<li><code>cycle</code> 循环各帧(默认从左到右)</li>
<li><code>pause</code> 停止轮播</li>
<li><code>number</code> 轮播到指定的图片上(小标从 <code>0</code> 开始，类似数组)</li>
<li><code>prev</code> 循环轮播到上一个项目</li>
<li><code>next</code> 循环轮播到下一个项目</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//点击按钮执行</span></div><div class="line">     $(<span class="string">'#myCarousel'</span>).carousel(<span class="string">'cycle'</span>); <span class="comment">//点击后，自动播放</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>事件</strong></p>
</li>
<li><p><code>slide.bs.carousel</code> 当调用 <code>slide</code> 实例方式时立即触发该事件。</p>
</li>
<li><code>slid.bs.carousel</code> 当轮播完成一个幻灯片触发该事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myCarousel'</span>).on(<span class="string">'slide.bs.carousel'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        alert(<span class="string">'当调用 slide 实例方式时立即触发'</span>);</div><div class="line">   &#125;);</div><div class="line">$(<span class="string">'#myCarousel'</span>).on(<span class="string">'slid.bs.carousel'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	alert(<span class="string">'当轮播完成一个幻灯片触发'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><hr>
<ul>
<li><a href="http://v3.bootcss.com/" target="_blank" rel="external">bootstrap中文教程</a></li>
<li><a href="https://hackerthemes.com/bootstrap-cheatsheet/" target="_blank" rel="external">bootstrap很方便的速查表-推荐</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、-bootstrap简介&quot;&gt;&lt;a href=&quot;#一、-bootstrap简介&quot; class=&quot;headerlink&quot; title=&quot;一、 bootstrap简介&quot;&gt;&lt;/a&gt;一、 &lt;code&gt;bootstrap&lt;/code&gt;简介&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;，来自 &lt;code&gt;Twitter&lt;/code&gt;（全国最大的微博），是目前最受欢迎的前端框架。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bootstrap&lt;/code&gt;下载及演示 &lt;a href=&quot;http://v3.bootcss.com&quot;&gt;http://v3.bootcss.com&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;什么是&lt;code&gt;bootstrap&lt;/code&gt;？&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;是基于 &lt;code&gt;HTML&lt;/code&gt;、&lt;code&gt;CSS&lt;/code&gt;、&lt;code&gt;JAVASCRIPT&lt;/code&gt; 的开源框架，它简洁、直观、强悍、灵活，使得 &lt;code&gt;Web&lt;/code&gt;开发更加快捷，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用于开发响应式布局、移动设备优先的 &lt;code&gt;WEB&lt;/code&gt;项目。&lt;/li&gt;
&lt;li&gt;为什么使用 &lt;code&gt;Bootstrap&lt;/code&gt;？&lt;ul&gt;
&lt;li&gt;跨设备&lt;/li&gt;
&lt;li&gt;跨浏览器（&lt;code&gt;chrome&lt;/code&gt;，&lt;code&gt;IE9&lt;/code&gt;以上，&lt;code&gt;Firefox&lt;/code&gt;，&lt;code&gt;Safari&lt;/code&gt;，&lt;code&gt;Opera&lt;/code&gt;…）&lt;/li&gt;
&lt;li&gt;响应式布局&lt;/li&gt;
&lt;li&gt;具有实用性强的组件&lt;/li&gt;
&lt;li&gt;内置&lt;code&gt;jquery&lt;/code&gt;插件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bootstrap&lt;/code&gt;的结构&lt;/li&gt;
&lt;li&gt;主要分为三大核心模块：&lt;code&gt;css&lt;/code&gt;、&lt;code&gt;js&lt;/code&gt;、&lt;code&gt;font&lt;/code&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="bootstrap" scheme="http://www.poetries.top/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>居中解决方案荟萃</title>
    <link href="http://www.poetries.top/2016/11/12/CSS-center-methods/"/>
    <id>http://www.poetries.top/2016/11/12/CSS-center-methods/</id>
    <published>2016-11-12T09:55:24.000Z</published>
    <updated>2016-12-14T07:59:53.922Z</updated>
    
    <content type="html"><![CDATA[<h3 id="水平居中方案"><a href="#水平居中方案" class="headerlink" title="水平居中方案"></a>水平居中方案</h3><hr>
<h4 id="方案一：text-align-inline-block"><a href="#方案一：text-align-inline-block" class="headerlink" title="方案一：text-align +  inline-block"></a>方案一：<code>text-align +  inline-block</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent1"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent1</span>&#123;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent1</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">display</span>: inline-block;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="方案二：margin：0-auto"><a href="#方案二：margin：0-auto" class="headerlink" title="方案二：margin：0 auto"></a>方案二：<code>margin：0 auto</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent2"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent2</span>&#123;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent2</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">display</span>: table;</div><div class="line">	<span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案三：absolute-transform"><a href="#方案三：absolute-transform" class="headerlink" title="方案三：absolute+transform)"></a>方案三：<code>absolute+transform)</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent3"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent3</span>&#123;</div><div class="line">	<span class="attribute">position</span>: relative;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent3</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">	<span class="attribute">transform</span>: <span class="built_in">translateX</span>(-50%);</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案四：justify-content"><a href="#方案四：justify-content" class="headerlink" title="方案四：justify-content"></a>方案四：<code>justify-content</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent4"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent4</span>&#123;</div><div class="line">	<span class="attribute">display</span>: flex;</div><div class="line">	<span class="attribute">justify-content</span>: center;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent4</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">margin</span>:<span class="number">0</span> auto;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="垂直居中方案"><a href="#垂直居中方案" class="headerlink" title="垂直居中方案"></a>垂直居中方案</h3><hr>
<h4 id="方案一：-利用-line-height-实现垂直居中"><a href="#方案一：-利用-line-height-实现垂直居中" class="headerlink" title="方案一： 利用 line-height 实现垂直居中"></a>方案一： 利用 line-height 实现垂直居中</h4><hr>
<ul>
<li>这种方法适用于单行文本垂直居中,如果文本内容太长，出现了换行，换行后的内容会溢出</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example1"</span>&gt;</span></div><div class="line">    单行文字垂直居中</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example1</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案二-利用-display-table-实现垂直居中"><a href="#方案二-利用-display-table-实现垂直居中" class="headerlink" title="方案二 利用 display: table 实现垂直居中"></a>方案二 利用 display: table 实现垂直居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example2"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example2</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">display</span>: table;</div><div class="line">			<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example2</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">display</span>: table-cell;</div><div class="line">    <span class="attribute">vertical-align</span>: middle;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">background</span>:<span class="number">#999</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案三-margin-填充-这种方法需要知道内外容器的大小"><a href="#方案三-margin-填充-这种方法需要知道内外容器的大小" class="headerlink" title="方案三 margin 填充 这种方法需要知道内外容器的大小"></a>方案三 margin 填充 这种方法需要知道内外容器的大小</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example3"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example3</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">			<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example3</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">margin-left</span>: auto;</div><div class="line">    <span class="attribute">margin-right</span>: auto;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="built_in">calc</span>((100px - 50px)/<span class="number">2</span>);</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">background</span>:<span class="number">#999</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案四：经典-absolute-布局上下文垂直居中"><a href="#方案四：经典-absolute-布局上下文垂直居中" class="headerlink" title="方案四：经典 absolute 布局上下文垂直居中"></a>方案四：经典 absolute 布局上下文垂直居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example4"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example4</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">		<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example4</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">margin-top</span>: -<span class="number">25px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: -<span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>:<span class="number">#999</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案五：absolute-transform"><a href="#方案五：absolute-transform" class="headerlink" title="方案五：absolute+transform"></a>方案五：absolute+transform</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example5"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example5</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example5</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#999</span>;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-50%) <span class="built_in">translateY</span>(-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案六-利用margin：auto-居中"><a href="#方案六-利用margin：auto-居中" class="headerlink" title="方案六 利用margin：auto 居中"></a>方案六 利用margin：auto 居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"expample6"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>Content here<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#expample6</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">		<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#expample6</span> <span class="selector-class">.inner</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#aaa</span>;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案七-利用-Flex布局-居中"><a href="#方案七-利用-Flex布局-居中" class="headerlink" title="方案七 利用 Flex布局 居中"></a>方案七 利用 Flex布局 居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"expample7"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>Content here<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#expample7</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</div><div class="line">    <span class="attribute">display</span>: flex;</div><div class="line">    <span class="attribute">justify-content</span>: center;</div><div class="line">    <span class="attribute">align-items</span>: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#expample7</span> <span class="selector-class">.inner</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#aaa</span>;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;水平居中方案&quot;&gt;&lt;a href=&quot;#水平居中方案&quot; class=&quot;headerlink&quot; title=&quot;水平居中方案&quot;&gt;&lt;/a&gt;水平居中方案&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;方案一：text-align-inline-block&quot;&gt;&lt;a href=&quot;#方案一：text-align-inline-block&quot; class=&quot;headerlink&quot; title=&quot;方案一：text-align +  inline-block&quot;&gt;&lt;/a&gt;方案一：&lt;code&gt;text-align +  inline-block&lt;/code&gt;&lt;/h4&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;parent1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;水平居中&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#parent1&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#ddd&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#parent1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.child&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
      <category term="居中" scheme="http://www.poetries.top/tags/%E5%B1%85%E4%B8%AD/"/>
    
  </entry>
  
</feed>
